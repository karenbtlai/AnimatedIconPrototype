//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           6.1.0-build.109+gebc2a6a0a3
//       
//       Command:
//           LottieGen -MinimumUapVersion 11 -Namespace WindowsInternal.ComposableShell.Experiences -Interface ILottieVisual -Language CSharp -InputFile QA_ComposeMode.json
//       
//       Input file:
//           QA_ComposeMode.json (15577 bytes created 10:10-07:00 Mar 30 2020)
//       
//       Invoked on:
//           SIM10FRESH @ 17:59-07:00 Apr 1 2020
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |   129 |
// |--------------------------+-------|
// | Animators                |    34 |
// | Animated brushes         |     2 |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     3 |
// | PathKeyFrameAnimations   |     2 |
// |--------------------------+-------|
// | ContainerVisuals         |     1 |
// | ShapeVisuals             |     1 |
// |--------------------------+-------|
// | ContainerShapes          |     1 |
// | CompositionSpriteShapes  |     7 |
// |--------------------------+-------|
// | Brushes                  |     2 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |     - |
// ------------------------------------
using Microsoft.Graphics.Canvas.Geometry;
using Microsoft.UI.Xaml.Controls;
using System;
using System.Numerics;
using Windows.UI;
using Windows.UI.Composition;

namespace AnimatedIconPrototype
{
    // Name:        QA_ComposeMode
    // Frame rate:  60 fps
    // Frame count: 60
    // Duration:    1000.0 mS
    // ____________________________________________
    // | Theme property | Type  |  Default value  |
    // |________________|_______|_________________|
    // | Foreground     | Color | #FF000000 Black |
    // --------------------------------------------
    sealed class QA_ComposeMode : ILottieVisualSource
    {
        // Animation duration: 1.000 seconds.
        internal const long c_durationTicks = 10000000;

        // Theme property: Foreground.
        internal static readonly Color c_themeForeground = Color.FromArgb(0xFF, 0x00, 0x00, 0x00);

        CompositionPropertySet _themeProperties;
        Color _themeForeground = c_themeForeground;

        // Theme properties.
        public Color Foreground
        {
            get => _themeForeground;
            set
            {
                _themeForeground = value;
                if (_themeProperties != null)
                {
                    _themeProperties.InsertVector4("Foreground", ColorAsVector4((Color)_themeForeground));
                }
            }
        }

        public CompositionPropertySet GetThemeProperties(Compositor compositor)
        {
            return EnsureThemeProperties(compositor);
        }

        internal static Vector4 ColorAsVector4(Color color) => new Vector4(color.R, color.G, color.B, color.A);

        CompositionPropertySet EnsureThemeProperties(Compositor compositor)
        {
            if (_themeProperties is null)
            {
                _themeProperties = compositor.CreatePropertySet();
                _themeProperties.InsertVector4("Foreground", ColorAsVector4((Color)Foreground));
            }
            return _themeProperties;
        }

        public ILottieVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;
            EnsureThemeProperties(compositor);

            if (AnimatedVisual.IsRuntimeCompatible())
            {
                return
                    new AnimatedVisual(
                        compositor,
                        _themeProperties
                        );
            }

            return null;
        }

        sealed class AnimatedVisual : ILottieVisual
        {
            const long c_durationTicks = 10000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            readonly CompositionPropertySet _themeProperties;
            CompositionColorBrush _themeColor_Foreground_0;
            CompositionColorBrush _themeColor_Foreground_1;
            CompositionPath _path_0;
            CompositionPath _path_1;
            CompositionPath _path_2;
            CompositionPathGeometry _pathGeometry_3;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            CubicBezierEasingFunction _cubicBezierEasingFunction_2;
            CubicBezierEasingFunction _cubicBezierEasingFunction_3;
            CubicBezierEasingFunction _cubicBezierEasingFunction_4;
            CubicBezierEasingFunction _cubicBezierEasingFunction_5;
            CubicBezierEasingFunction _cubicBezierEasingFunction_6;
            CubicBezierEasingFunction _cubicBezierEasingFunction_7;
            ExpressionAnimation _rootProgress;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;
            Vector2KeyFrameAnimation _offsetVector2Animation_0;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            void BindProperty2(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName0,
                CompositionObject referencedObject0,
                string referenceParameterName1,
                CompositionObject referencedObject1)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName0, referencedObject0);
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName1, referencedObject1);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            CanvasGeometry Geometry_00()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(36.3120003F, -31.5F));
                    builder.AddCubicBezier(new Vector2(30.8120003F, -31.5F), new Vector2(-30.625F, -31.5F), new Vector2(-36.125F, -31.5F));
                    builder.AddCubicBezier(new Vector2(-41.625F, -31.5F), new Vector2(-41.25F, -26.625F), new Vector2(-41.25F, -26.625F));
                    builder.AddCubicBezier(new Vector2(-41.25F, -26.625F), new Vector2(-41.125F, 17.125F), new Vector2(-41.125F, 23.25F));
                    builder.AddCubicBezier(new Vector2(-41.125F, 29.375F), new Vector2(-35.875F, 28.5F), new Vector2(-35.875F, 28.5F));
                    builder.AddCubicBezier(new Vector2(-35.875F, 28.5F), new Vector2(33.0629997F, 28.5F), new Vector2(37.1879997F, 28.5F));
                    builder.AddCubicBezier(new Vector2(41.3129997F, 28.5F), new Vector2(41.4379997F, 24.25F), new Vector2(41.4379997F, 24.25F));
                    builder.AddCubicBezier(new Vector2(41.4379997F, 24.25F), new Vector2(41.4379997F, -26.375F), new Vector2(41.4379997F, -26.375F));
                    builder.AddCubicBezier(new Vector2(41.4379997F, -26.375F), new Vector2(36.4379997F, -26.375F), new Vector2(36.4379997F, -26.375F));
                    builder.AddCubicBezier(new Vector2(36.4379997F, -26.375F), new Vector2(36.4379997F, 23.75F), new Vector2(36.4379997F, 23.75F));
                    builder.AddCubicBezier(new Vector2(36.4379997F, 23.75F), new Vector2(-36.0620003F, 23.75F), new Vector2(-36.0620003F, 23.75F));
                    builder.AddCubicBezier(new Vector2(-36.0620003F, 23.75F), new Vector2(-36.0620003F, -26.25F), new Vector2(-36.0620003F, -26.25F));
                    builder.AddCubicBezier(new Vector2(-36.0620003F, -26.25F), new Vector2(41.5620003F, -26.25F), new Vector2(41.5620003F, -26.25F));
                    builder.AddCubicBezier(new Vector2(41.5620003F, -26.25F), new Vector2(41.8120003F, -31.5F), new Vector2(36.3120003F, -31.5F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
            // - - - ShapeGroup: Shape 1
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_01()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(42.625F, -24.5F));
                    builder.AddCubicBezier(new Vector2(37.125F, -24.5F), new Vector2(-30.625F, -24.5F), new Vector2(-36.125F, -24.5F));
                    builder.AddCubicBezier(new Vector2(-41.625F, -24.5F), new Vector2(-41.25F, -19.625F), new Vector2(-41.25F, -19.625F));
                    builder.AddCubicBezier(new Vector2(-41.25F, -19.625F), new Vector2(-41.125F, 20.25F), new Vector2(-41.125F, 26.375F));
                    builder.AddCubicBezier(new Vector2(-41.125F, 32.5F), new Vector2(-35.875F, 31.625F), new Vector2(-35.875F, 31.625F));
                    builder.AddCubicBezier(new Vector2(-35.875F, 31.625F), new Vector2(39.375F, 31.625F), new Vector2(43.5F, 31.625F));
                    builder.AddCubicBezier(new Vector2(47.625F, 31.625F), new Vector2(47.75F, 27.375F), new Vector2(47.75F, 27.375F));
                    builder.AddCubicBezier(new Vector2(47.75F, 27.375F), new Vector2(47.75F, -19.375F), new Vector2(47.75F, -19.375F));
                    builder.AddCubicBezier(new Vector2(47.75F, -19.375F), new Vector2(42.75F, -19.375F), new Vector2(42.75F, -19.375F));
                    builder.AddCubicBezier(new Vector2(42.75F, -19.375F), new Vector2(42.75F, 26.875F), new Vector2(42.75F, 26.875F));
                    builder.AddCubicBezier(new Vector2(42.75F, 26.875F), new Vector2(-36.0620003F, 26.875F), new Vector2(-36.0620003F, 26.875F));
                    builder.AddCubicBezier(new Vector2(-36.0620003F, 26.875F), new Vector2(-36.0620003F, -19.25F), new Vector2(-36.0620003F, -19.25F));
                    builder.AddCubicBezier(new Vector2(-36.0620003F, -19.25F), new Vector2(47.875F, -19.25F), new Vector2(47.875F, -19.25F));
                    builder.AddCubicBezier(new Vector2(47.875F, -19.25F), new Vector2(48.125F, -24.5F), new Vector2(42.625F, -24.5F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_02()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(37F, -26.375F));
                    builder.AddCubicBezier(new Vector2(31.5F, -26.375F), new Vector2(-30.625F, -26.375F), new Vector2(-36.125F, -26.375F));
                    builder.AddCubicBezier(new Vector2(-41.625F, -26.375F), new Vector2(-41.25F, -21.5F), new Vector2(-41.25F, -21.5F));
                    builder.AddCubicBezier(new Vector2(-41.25F, -21.5F), new Vector2(-41.125F, 22.125F), new Vector2(-41.125F, 28.25F));
                    builder.AddCubicBezier(new Vector2(-41.125F, 34.375F), new Vector2(-35.875F, 33.5F), new Vector2(-35.875F, 33.5F));
                    builder.AddCubicBezier(new Vector2(-35.875F, 33.5F), new Vector2(33.75F, 33.5F), new Vector2(37.875F, 33.5F));
                    builder.AddCubicBezier(new Vector2(42F, 33.5F), new Vector2(42.125F, 29.25F), new Vector2(42.125F, 29.25F));
                    builder.AddCubicBezier(new Vector2(42.125F, 29.25F), new Vector2(42.125F, -21.25F), new Vector2(42.125F, -21.25F));
                    builder.AddCubicBezier(new Vector2(42.125F, -21.25F), new Vector2(37.125F, -21.25F), new Vector2(37.125F, -21.25F));
                    builder.AddCubicBezier(new Vector2(37.125F, -21.25F), new Vector2(37.125F, 28.75F), new Vector2(37.125F, 28.75F));
                    builder.AddCubicBezier(new Vector2(37.125F, 28.75F), new Vector2(-36.0620003F, 28.75F), new Vector2(-36.0620003F, 28.75F));
                    builder.AddCubicBezier(new Vector2(-36.0620003F, 28.75F), new Vector2(-36.0620003F, -21.125F), new Vector2(-36.0620003F, -21.125F));
                    builder.AddCubicBezier(new Vector2(-36.0620003F, -21.125F), new Vector2(42.25F, -21.125F), new Vector2(42.25F, -21.125F));
                    builder.AddCubicBezier(new Vector2(42.25F, -21.125F), new Vector2(42.5F, -26.375F), new Vector2(37F, -26.375F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
            // - - - ShapeGroup: Shape 1
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_03()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(34.75F, -29F));
                    builder.AddCubicBezier(new Vector2(29.25F, -29F), new Vector2(-29.375F, -29F), new Vector2(-34.875F, -29F));
                    builder.AddCubicBezier(new Vector2(-40.375F, -29F), new Vector2(-40F, -24.125F), new Vector2(-40F, -24.125F));
                    builder.AddCubicBezier(new Vector2(-40F, -24.125F), new Vector2(-39.875F, 15.25F), new Vector2(-39.875F, 21.375F));
                    builder.AddCubicBezier(new Vector2(-39.875F, 27.5F), new Vector2(-34.625F, 26.625F), new Vector2(-34.625F, 26.625F));
                    builder.AddCubicBezier(new Vector2(-34.625F, 26.625F), new Vector2(31.5F, 26.625F), new Vector2(35.625F, 26.625F));
                    builder.AddCubicBezier(new Vector2(39.75F, 26.625F), new Vector2(39.875F, 22.375F), new Vector2(39.875F, 22.375F));
                    builder.AddCubicBezier(new Vector2(39.875F, 22.375F), new Vector2(39.875F, -23.875F), new Vector2(39.875F, -23.875F));
                    builder.AddCubicBezier(new Vector2(39.875F, -23.875F), new Vector2(34.875F, -23.875F), new Vector2(34.875F, -23.875F));
                    builder.AddCubicBezier(new Vector2(34.875F, -23.875F), new Vector2(34.875F, 21.875F), new Vector2(34.875F, 21.875F));
                    builder.AddCubicBezier(new Vector2(34.875F, 21.875F), new Vector2(-34.8120003F, 21.875F), new Vector2(-34.8120003F, 21.875F));
                    builder.AddCubicBezier(new Vector2(-34.8120003F, 21.875F), new Vector2(-34.8120003F, -23.75F), new Vector2(-34.8120003F, -23.75F));
                    builder.AddCubicBezier(new Vector2(-34.8120003F, -23.75F), new Vector2(40F, -23.75F), new Vector2(40F, -23.75F));
                    builder.AddCubicBezier(new Vector2(40F, -23.75F), new Vector2(40.25F, -29F), new Vector2(34.75F, -29F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
            // - - ShapeGroup: Shape 1
            // - Path 1.PathGeometry
            CanvasGeometry Geometry_04()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-37.5F, -1.5F));
                    builder.AddLine(new Vector2(38.5F, -1.5F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_05()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(2.66700006F, 13.3330002F));
                    builder.AddCubicBezier(new Vector2(2.66700006F, 13.3330002F), new Vector2(-2.66700006F, 13.3330002F), new Vector2(-2.66700006F, 13.3330002F));
                    builder.AddCubicBezier(new Vector2(-2.66700006F, 13.3330002F), new Vector2(-2.66700006F, -13.3330002F), new Vector2(-2.66700006F, -13.3330002F));
                    builder.AddCubicBezier(new Vector2(-2.66700006F, -13.3330002F), new Vector2(2.66700006F, -13.3330002F), new Vector2(2.66700006F, -13.3330002F));
                    builder.AddCubicBezier(new Vector2(2.66700006F, -13.3330002F), new Vector2(2.66700006F, 13.3330002F), new Vector2(2.66700006F, 13.3330002F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
            // - - -  Offset:<50.002, 62.416>
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_06()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(2.66700006F, 13.3330002F));
                    builder.AddCubicBezier(new Vector2(2.66700006F, 13.3330002F), new Vector2(-2.66700006F, 13.3330002F), new Vector2(-2.66700006F, 13.3330002F));
                    builder.AddCubicBezier(new Vector2(-2.66700006F, 13.3330002F), new Vector2(-2.74799991F, 10.6669998F), new Vector2(-2.74799991F, 10.6669998F));
                    builder.AddCubicBezier(new Vector2(-2.74799991F, 10.6669998F), new Vector2(2.58500004F, 10.6669998F), new Vector2(2.58500004F, 10.6669998F));
                    builder.AddCubicBezier(new Vector2(2.58500004F, 10.6669998F), new Vector2(2.66700006F, 13.3330002F), new Vector2(2.66700006F, 13.3330002F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
            // - - -  Offset:<50.002, 62.416>
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_07()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(2.66700006F, 14.5830002F));
                    builder.AddCubicBezier(new Vector2(2.66700006F, 14.5830002F), new Vector2(-2.66700006F, 14.5830002F), new Vector2(-2.66700006F, 14.5830002F));
                    builder.AddCubicBezier(new Vector2(-2.66700006F, 14.5830002F), new Vector2(-2.74799991F, 11.9169998F), new Vector2(-2.74799991F, 11.9169998F));
                    builder.AddCubicBezier(new Vector2(-2.74799991F, 11.9169998F), new Vector2(2.58500004F, 11.9169998F), new Vector2(2.58500004F, 11.9169998F));
                    builder.AddCubicBezier(new Vector2(2.58500004F, 11.9169998F), new Vector2(2.66700006F, 14.5830002F), new Vector2(2.66700006F, 14.5830002F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
            // - - -  Offset:<50.002, 62.416>
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_08()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(2.66700006F, 11.3009996F));
                    builder.AddCubicBezier(new Vector2(2.66700006F, 11.3009996F), new Vector2(-2.66700006F, 11.3009996F), new Vector2(-2.66700006F, 11.3009996F));
                    builder.AddCubicBezier(new Vector2(-2.66700006F, 11.3009996F), new Vector2(-2.74799991F, 10.6669998F), new Vector2(-2.74799991F, 10.6669998F));
                    builder.AddCubicBezier(new Vector2(-2.74799991F, 10.6669998F), new Vector2(2.58500004F, 10.6669998F), new Vector2(2.58500004F, 10.6669998F));
                    builder.AddCubicBezier(new Vector2(2.58500004F, 10.6669998F), new Vector2(2.66700006F, 11.3009996F), new Vector2(2.66700006F, 11.3009996F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
            // - - -  Offset:<50.002, 62.416>
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_09()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(2.66700006F, 13.3330002F));
                    builder.AddCubicBezier(new Vector2(2.66700006F, 13.3330002F), new Vector2(-2.66700006F, 13.3330002F), new Vector2(-2.66700006F, 13.3330002F));
                    builder.AddCubicBezier(new Vector2(-2.66700006F, 13.3330002F), new Vector2(-2.66700006F, -16.4580002F), new Vector2(-2.66700006F, -16.4580002F));
                    builder.AddCubicBezier(new Vector2(-2.66700006F, -16.4580002F), new Vector2(2.66700006F, -16.4580002F), new Vector2(2.66700006F, -16.4580002F));
                    builder.AddCubicBezier(new Vector2(2.66700006F, -16.4580002F), new Vector2(2.66700006F, 13.3330002F), new Vector2(2.66700006F, 13.3330002F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - Path 1.PathGeometry
            CanvasGeometry Geometry_10()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-30.875F, -13.625F));
                    builder.AddLine(new Vector2(-30.875F, -23.5F));
                    builder.AddLine(new Vector2(-20.5F, -23.5F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // Color bound to theme property value: Foreground
            CompositionColorBrush ThemeColor_Foreground_0()
            {
                var result = _themeColor_Foreground_0 = _c.CreateColorBrush();
                BindProperty(result, "Color", "ColorRGB(_theme.Foreground.W*1,_theme.Foreground.X,_theme.Foreground.Y,_theme.Foreground.Z)", "_theme", _themeProperties);
                return result;
            }

            // Color bound to theme property value: Foreground
            CompositionColorBrush ThemeColor_Foreground_1()
            {
                var result = _themeColor_Foreground_1 = _c.CreateColorBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 1F);
                BindProperty2(result, "Color", "ColorRGB(_theme.Foreground.W*my.Opacity0,_theme.Foreground.X,_theme.Foreground.Y,_theme.Foreground.Z)", "_theme", _themeProperties, "my", propertySet);
                StartProgressBoundAnimation(propertySet, "Opacity0", Opacity0ScalarAnimation_1_to_0(), _rootProgress);
                return result;
            }

            // PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
            // Layer: Corner Mark
            CompositionContainerShape ContainerShape()
            {
                var result = _c.CreateContainerShape();
                result.Scale = new Vector2(0F, 0F);
                var shapes = result.Shapes;
                // Transforms: Corner Mark
                shapes.Add(SpriteShape_3());
                // Transforms: Corner Mark
                shapes.Add(SpriteShape_4());
                // Transforms: Corner Mark
                shapes.Add(SpriteShape_5());
                // Transforms: Corner Mark
                shapes.Add(SpriteShape_6());
                StartProgressBoundAnimation(result, "Offset", _offsetVector2Animation_0, _rootProgress);
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation(), _rootProgress);
                return result;
            }

            CompositionPath Path_0()
            {
                var result = _path_0 = new CompositionPath(Geometry_00());
                return result;
            }

            CompositionPath Path_1()
            {
                var result = _path_1 = new CompositionPath(Geometry_02());
                return result;
            }

            CompositionPath Path_2()
            {
                var result = _path_2 = new CompositionPath(Geometry_05());
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
            // ShapeGroup: Shape 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_0()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_0(), RootProgress());
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
            // ShapeGroup: Shape 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_1()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_04()));
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
            // Offset:<50.002, 62.416>
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_2()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_1(), _rootProgress);
                return result;
            }

            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_3()
            {
                var result = _pathGeometry_3 = _c.CreatePathGeometry(new CompositionPath(Geometry_10()));
                return result;
            }

            // PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
            // Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                var result = _c.CreateSpriteShape(PathGeometry_0());
                result.FillBrush = ThemeColor_Foreground_0();
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_0(), _rootProgress);
                return result;
            }

            // PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                var result = _c.CreateSpriteShape(PathGeometry_1());
                result.StrokeBrush = _themeColor_Foreground_0;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 5F;
                StartProgressBoundAnimation(result, "Scale", ScaleVector2Animation(), _rootProgress);
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_1(), _rootProgress);
                return result;
            }

            // PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
            // Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                // Offset:<50.002, 62.416>
                var result = CreateSpriteShape(PathGeometry_2(), new Matrix3x2(1F, 0F, 0F, 1F, 50.0019989F, 62.4160004F), _themeColor_Foreground_0);
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
            // Layer: Corner Mark
            // Path 1
            CompositionSpriteShape SpriteShape_3()
            {
                var result = _c.CreateSpriteShape(PathGeometry_3());
                result.CenterPoint = new Vector2(-23.625F, -16.75F);
                result.RotationAngleInDegrees = 90F;
                result.StrokeBrush = ThemeColor_Foreground_1();
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 4F;
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_2(), _rootProgress);
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
            // Layer: Corner Mark
            // Path 1
            CompositionSpriteShape SpriteShape_4()
            {
                var result = _c.CreateSpriteShape(_pathGeometry_3);
                result.CenterPoint = new Vector2(-23.625F, -16.75F);
                result.RotationAngleInDegrees = 180F;
                result.StrokeBrush = _themeColor_Foreground_1;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 4F;
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_3(), _rootProgress);
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
            // Layer: Corner Mark
            // Path 1
            CompositionSpriteShape SpriteShape_5()
            {
                var result = _c.CreateSpriteShape(_pathGeometry_3);
                result.StrokeBrush = _themeColor_Foreground_1;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 4F;
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_4(), _rootProgress);
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
            // Layer: Corner Mark
            // Path 1
            CompositionSpriteShape SpriteShape_6()
            {
                var result = _c.CreateSpriteShape(_pathGeometry_3);
                result.CenterPoint = new Vector2(-23.625F, -16.75F);
                result.RotationAngleInDegrees = -90F;
                result.StrokeBrush = _themeColor_Foreground_1;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 4F;
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_5(), _rootProgress);
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                propertySet.InsertScalar("t0", 0F);
                propertySet.InsertScalar("t1", 0F);
                propertySet.InsertScalar("t2", 0F);
                propertySet.InsertScalar("t3", 0F);
                // PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
                result.Children.InsertAtTop(ShapeVisual_0());
                StartProgressBoundAnimation(propertySet, "t0", t0ScalarAnimation_0_to_1(), _rootProgress);
                StartProgressBoundAnimation(propertySet, "t1", t1ScalarAnimation_0_to_1(), _rootProgress);
                StartProgressBoundAnimation(propertySet, "t2", t2ScalarAnimation_0_to_1(), _rootProgress);
                StartProgressBoundAnimation(propertySet, "t3", t3ScalarAnimation_0_to_1(), _rootProgress);
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0F, 0F), new Vector2(0.833000004F, 0.833000004F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_2()
            {
                return _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction(new Vector2(0F, 0F), new Vector2(0F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_3()
            {
                return _cubicBezierEasingFunction_3 = _c.CreateCubicBezierEasingFunction(new Vector2(1F, 0F), new Vector2(0.75F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_4()
            {
                return _cubicBezierEasingFunction_4 = _c.CreateCubicBezierEasingFunction(new Vector2(1F, 0F), new Vector2(0.833000004F, 0.833000004F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_5()
            {
                return _cubicBezierEasingFunction_5 = _c.CreateCubicBezierEasingFunction(new Vector2(1F, 0F), new Vector2(1F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_6()
            {
                return _cubicBezierEasingFunction_6 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(1F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_7()
            {
                return _cubicBezierEasingFunction_7 = _c.CreateCubicBezierEasingFunction(new Vector2(0.349999994F, 0F), new Vector2(0.25F, 1F));
            }

            ExpressionAnimation RootProgress()
            {
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
            // - ShapeGroup: Shape 1
            // Path 1.PathGeometry
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_0()
            {
                var result = CreatePathKeyFrameAnimation(0F, Path_0(), HoldThenStepEasingFunction());
                result.InsertKeyFrame(0.166666672F, new CompositionPath(Geometry_01()), CubicBezierEasingFunction_0());
                result.InsertKeyFrame(0.5F, Path_1(), CubicBezierEasingFunction_1());
                result.InsertKeyFrame(0.583333313F, _path_1, CubicBezierEasingFunction_2());
                result.InsertKeyFrame(0.816666663F, new CompositionPath(Geometry_03()), CubicBezierEasingFunction_3());
                result.InsertKeyFrame(0.983333349F, _path_0, _cubicBezierEasingFunction_2);
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
            // -  Offset:<50.002, 62.416>
            // Path 1.PathGeometry
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_1()
            {
                var result = CreatePathKeyFrameAnimation(0F, Path_2(), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.166666672F, new CompositionPath(Geometry_06()), _cubicBezierEasingFunction_4);
                result.InsertKeyFrame(0.5F, new CompositionPath(Geometry_07()), CubicBezierEasingFunction_6());
                result.InsertKeyFrame(0.583333313F, new CompositionPath(Geometry_08()), _cubicBezierEasingFunction_5);
                result.InsertKeyFrame(0.816666663F, new CompositionPath(Geometry_09()), _cubicBezierEasingFunction_3);
                result.InsertKeyFrame(0.983333349F, _path_2, CubicBezierEasingFunction_7());
                return result;
            }

            // Opacity0
            ScalarKeyFrameAnimation Opacity0ScalarAnimation_1_to_0()
            {
                var result = CreateScalarKeyFrameAnimation(0F, 1F, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.166666672F, 1F, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.666666687F, 1F, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.75F, 0F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F)));
                return result;
            }

            ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
            {
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                result.InsertKeyFrame(0.166666657F, 1F, _cubicBezierEasingFunction_4);
                result.InsertKeyFrame(0.166666672F, 0F, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.49999997F, 1F, _cubicBezierEasingFunction_6);
                return result;
            }

            ScalarKeyFrameAnimation t1ScalarAnimation_0_to_1()
            {
                var result = CreateScalarKeyFrameAnimation(0.583333373F, 0F, _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                result.InsertKeyFrame(0.816666603F, 1F, _cubicBezierEasingFunction_3);
                result.InsertKeyFrame(0.816666663F, 0F, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.98333329F, 1F, _cubicBezierEasingFunction_7);
                return result;
            }

            ScalarKeyFrameAnimation t2ScalarAnimation_0_to_1()
            {
                var result = CreateScalarKeyFrameAnimation(0.166666687F, 0F, _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                result.InsertKeyFrame(0.249999985F, 1F, _c.CreateCubicBezierEasingFunction(new Vector2(0.850000024F, 0F), new Vector2(0.75F, 1F)));
                result.InsertKeyFrame(0.25F, 0F, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.416666627F, 1F, _c.CreateCubicBezierEasingFunction(new Vector2(0.349999994F, 0F), new Vector2(0F, 1F)));
                return result;
            }

            ScalarKeyFrameAnimation t3ScalarAnimation_0_to_1()
            {
                var result = CreateScalarKeyFrameAnimation(0.666666746F, 0F, _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                result.InsertKeyFrame(0.833333254F, 1F, _cubicBezierEasingFunction_1);
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(100F, 100F);
                // Offset:<-1.625, -1.2809982>, Scale:<0.18, 0.18>
                result.TransformMatrix = new Matrix4x4(0.180000007F, 0F, 0F, 0F, 0F, 0.180000007F, 0F, 0F, 0F, 0F, 0F, 0F, -1.625F, -1.28099823F, 0F, 1F);
                var shapes = result.Shapes;
                // ShapeGroup: Shape 1
                shapes.Add(SpriteShape_0());
                // ShapeGroup: Shape 1
                shapes.Add(SpriteShape_1());
                // Offset:<50.002, 62.416>
                shapes.Add(SpriteShape_2());
                // Layer: Corner Mark
                shapes.Add(ContainerShape());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_0()
            {
                var result = _offsetVector2Animation_0 = CreateVector2KeyFrameAnimation(0F, new Vector2(50F, 50F), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.166666672F, new Vector2(50F, 45F), CubicBezierEasingFunction_4());
                result.InsertKeyFrame(0.583333313F, new Vector2(50F, 45F), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.816666663F, new Vector2(50F, 50F), _cubicBezierEasingFunction_3);
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
            // ShapeGroup: Shape 1
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_1()
            {
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(49.9059982F, 51.0410004F), _holdThenStepEasingFunction);
                result.SetReferenceParameter("_", _root);
                result.InsertExpressionKeyFrame(0.166666657F, "(Pow(1-_.t0,3)*Vector2(49.906,51.041))+(3*Square(1-_.t0)*_.t0*Vector2(50.323,55.187))+(3*(1-_.t0)*Square(_.t0)*Vector2(52.531,71.77))+(Pow(_.t0,3)*Vector2(52.406,75.916))", StepThenHoldEasingFunction());
                result.InsertExpressionKeyFrame(0.49999997F, "(Pow(1-_.t0,3)*Vector2(52.406,75.916))+(3*Square(1-_.t0)*_.t0*Vector2(52.281,80.062))+(3*(1-_.t0)*Square(_.t0)*Vector2(49.156,75.916))+(Pow(_.t0,3)*Vector2(49.156,75.916))", _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.5F, new Vector2(49.1559982F, 75.9160004F), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.583333313F, new Vector2(52.4059982F, 75.9160004F), CubicBezierEasingFunction_5());
                result.InsertExpressionKeyFrame(0.816666603F, "(Pow(1-_.t1,3)*Vector2(52.406,75.916))+(3*Square(1-_.t1)*_.t1*Vector2(52.406,75.916))+(3*(1-_.t1)*Square(_.t1)*Vector2(50.323,54.187))+(Pow(_.t1,3)*Vector2(49.906,50.041))", _stepThenHoldEasingFunction);
                result.InsertExpressionKeyFrame(0.98333329F, "(Pow(1-_.t1,3)*Vector2(49.906,50.041))+(3*Square(1-_.t1)*_.t1*Vector2(49.489,45.895))+(3*(1-_.t1)*Square(_.t1)*Vector2(49.906,50.874))+(Pow(_.t1,3)*Vector2(49.906,51.041))", _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.983333349F, new Vector2(49.9059982F, 51.0410004F), _stepThenHoldEasingFunction);
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
            // - Layer: Corner Mark
            // Transforms: Corner Mark
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_2()
            {
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(57.125F, 6.75F), _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                result.InsertKeyFrame(0.166666672F, new Vector2(57.125F, 6.75F), _holdThenStepEasingFunction);
                result.InsertExpressionKeyFrame(0.249999985F, "(Pow(1-_.t2,3)*Vector2(57.125,6.75))+(3*Square(1-_.t2)*_.t2*Vector2(54.667,8))+(3*(1-_.t2)*Square(_.t2)*Vector2(44.417,13.417))+(Pow(_.t2,3)*Vector2(42.375,14.25))", _stepThenHoldEasingFunction);
                result.InsertExpressionKeyFrame(0.416666627F, "(Pow(1-_.t2,3)*Vector2(42.375,14.25))+(3*Square(1-_.t2)*_.t2*Vector2(40.333,15.083))+(3*(1-_.t2)*Square(_.t2)*Vector2(44.458,12.167))+(Pow(_.t2,3)*Vector2(44.875,11.75))", _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.416666657F, new Vector2(44.875F, 11.75F), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.666666687F, new Vector2(44.875F, 11.75F), _cubicBezierEasingFunction_0);
                result.InsertExpressionKeyFrame(0.833333254F, "(Pow(1-_.t3,3)*Vector2(44.875,11.75))+(3*Square(1-_.t3)*_.t3*Vector2(46.917,10.083))+(3*(1-_.t3)*Square(_.t3)*Vector2(55.083,3.417))+(Pow(_.t3,3)*Vector2(57.125,1.75))", _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.833333313F, new Vector2(57.125F, 1.75F), _stepThenHoldEasingFunction);
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
            // - Layer: Corner Mark
            // Transforms: Corner Mark
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_3()
            {
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(56.625F, 34.375F), _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                result.InsertKeyFrame(0.166666672F, new Vector2(56.625F, 34.375F), _holdThenStepEasingFunction);
                result.InsertExpressionKeyFrame(0.249999985F, "(Pow(1-_.t2,3)*Vector2(56.625,34.375))+(3*Square(1-_.t2)*_.t2*Vector2(54.167,33.125))+(3*(1-_.t2)*Square(_.t2)*Vector2(43.917,27.708))+(Pow(_.t2,3)*Vector2(41.875,26.875))", _stepThenHoldEasingFunction);
                result.InsertExpressionKeyFrame(0.416666627F, "(Pow(1-_.t2,3)*Vector2(41.875,26.875))+(3*Square(1-_.t2)*_.t2*Vector2(39.833,26.042))+(3*(1-_.t2)*Square(_.t2)*Vector2(43.958,28.958))+(Pow(_.t2,3)*Vector2(44.375,29.375))", _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.416666657F, new Vector2(44.375F, 29.375F), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.666666687F, new Vector2(44.375F, 29.375F), _cubicBezierEasingFunction_0);
                result.InsertKeyFrame(0.833333313F, new Vector2(56.625F, 29.375F), _cubicBezierEasingFunction_1);
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
            // - Layer: Corner Mark
            // Transforms: Corner Mark
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_4()
            {
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(-3.25F, 6.5F), _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                result.InsertKeyFrame(0.166666672F, new Vector2(-3.25F, 6.5F), _holdThenStepEasingFunction);
                result.InsertExpressionKeyFrame(0.249999985F, "(Pow(1-_.t2,3)*Vector2(-3.25,6.5))+(3*Square(1-_.t2)*_.t2*Vector2(-1.583,7.75))+(3*(1-_.t2)*Square(_.t2)*Vector2(5.5,13.167))+(Pow(_.t2,3)*Vector2(6.75,14))", _stepThenHoldEasingFunction);
                result.InsertExpressionKeyFrame(0.416666627F, "(Pow(1-_.t2,3)*Vector2(6.75,14))+(3*Square(1-_.t2)*_.t2*Vector2(8,14.833))+(3*(1-_.t2)*Square(_.t2)*Vector2(4.667,11.917))+(Pow(_.t2,3)*Vector2(4.25,11.5))", _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.416666657F, new Vector2(4.25F, 11.5F), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.666666687F, new Vector2(4.25F, 11.5F), _cubicBezierEasingFunction_0);
                result.InsertExpressionKeyFrame(0.833333254F, "(Pow(1-_.t3,3)*Vector2(4.25,11.5))+(3*Square(1-_.t3)*_.t3*Vector2(3.208,9.833))+(3*(1-_.t3)*Square(_.t3)*Vector2(-0.9579999,3.167))+(Pow(_.t3,3)*Vector2(-2,1.5))", _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.833333313F, new Vector2(-2F, 1.5F), _stepThenHoldEasingFunction);
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
            // - Layer: Corner Mark
            // Transforms: Corner Mark
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_5()
            {
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(-3.5F, 34.125F), _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                result.InsertKeyFrame(0.166666672F, new Vector2(-3.5F, 34.125F), _holdThenStepEasingFunction);
                result.InsertExpressionKeyFrame(0.249999985F, "(Pow(1-_.t2,3)*Vector2(-3.5,34.125))+(3*Square(1-_.t2)*_.t2*Vector2(-2.875,33.708))+(3*(1-_.t2)*Square(_.t2)*Vector2(5.042,27.667))+(Pow(_.t2,3)*Vector2(6.25,26.875))", _stepThenHoldEasingFunction);
                result.InsertExpressionKeyFrame(0.416666627F, "(Pow(1-_.t2,3)*Vector2(6.25,26.875))+(3*Square(1-_.t2)*_.t2*Vector2(7.458,26.083))+(3*(1-_.t2)*Square(_.t2)*Vector2(4.167,28.958))+(Pow(_.t2,3)*Vector2(3.75,29.375))", _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.416666657F, new Vector2(3.75F, 29.375F), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.666666687F, new Vector2(3.75F, 29.375F), _cubicBezierEasingFunction_0);
                result.InsertExpressionKeyFrame(0.833333254F, "(Pow(1-_.t3,3)*Vector2(3.75,29.375))+(3*Square(1-_.t3)*_.t3*Vector2(2.708,29.333))+(3*(1-_.t3)*Square(_.t3)*Vector2(-3.125,29.542))+(Pow(_.t3,3)*Vector2(-2.5,29.125))", _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.833333313F, new Vector2(-2.5F, 29.125F), _stepThenHoldEasingFunction);
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
            // ShapeGroup: Shape 1
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation()
            {
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.166666672F, new Vector2(1.08099997F, 0.718739986F), _cubicBezierEasingFunction_4);
                result.InsertKeyFrame(0.5F, new Vector2(1.01800001F, 0.718739986F), _cubicBezierEasingFunction_1);
                result.InsertKeyFrame(0.583333313F, new Vector2(1.01800001F, 0.718739986F), _cubicBezierEasingFunction_2);
                result.InsertKeyFrame(0.816666663F, new Vector2(1F, 1F), _c.CreateCubicBezierEasingFunction(new Vector2(0F, 0.00100000005F), new Vector2(0.75F, 1F)));
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - ComposeMode
            // Layer: Corner Mark
            Vector2KeyFrameAnimation ShapeVisibilityAnimation()
            {
                var result = CreateVector2KeyFrameAnimation(0.166666672F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.850000024F, new Vector2(0F, 0F), _holdThenStepEasingFunction);
                return result;
            }

            internal AnimatedVisual(
                Compositor compositor,
                CompositionPropertySet themeProperties
                )
            {
                _c = compositor;
                _themeProperties = themeProperties;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(16F, 16F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 7);
            }
        }
    }
}
