//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Microsoft.Graphics.Canvas.Geometry;
using Microsoft.UI.Xaml.Controls;
using System;
using System.Numerics;
using Windows.UI;
using Windows.UI.Composition;

namespace AnimatedIconPrototype
{
    public sealed class LoadingErrorState : IAnimatedVisualSource
    {
        public IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;
            if (!IsRuntimeCompatible())
            {
                return null;
            }
            return new AnimatedVisual(compositor);
        }

        static bool IsRuntimeCompatible()
        {
            if (!Windows.Foundation.Metadata.ApiInformation.IsTypePresent("Windows.UI.Composition.CompositionGeometricClip"))
            {
                return false;
            }
            return true;
        }

        sealed class AnimatedVisual : IAnimatedVisual
        {
            const long c_durationTicks = 28830000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CompositionColorBrush _colorBrush_AlmostCrimson_FFD0021A;
            CompositionColorBrush _colorBrush_AlmostLightGray_FFCCCCCC;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            CubicBezierEasingFunction _cubicBezierEasingFunction_2;
            CubicBezierEasingFunction _cubicBezierEasingFunction_3;
            CubicBezierEasingFunction _cubicBezierEasingFunction_4;
            StepEasingFunction _holdThenStepEasingFunction;
            ContainerVisual _root;
            ScalarKeyFrameAnimation _scalarAnimation_0_to_1;
            ExpressionAnimation _scalarExpressionAnimation;
            StepEasingFunction _stepThenHoldEasingFunction;

            // Layer (Shape): circle-red
            // Path 1
            CompositionColorBrush AnimatedColorBrush_TransparentAlmostCrimson_00D0021B_to_AlmostCrimson_FFD0021B()
            {
                var result = _c.CreateColorBrush(Color.FromArgb(0x00, 0xD0, 0x02, 0x1B));
                result.StartAnimation("Color", ColorAnimation_TransparentAlmostCrimson_00D0021B_to_AlmostCrimson_FFD0021B());
                var controller = result.TryGetAnimationController("Color");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                return result;
            }

            // Color
            ColorKeyFrameAnimation ColorAnimation_TransparentAlmostCrimson_00D0021B_to_AlmostCrimson_FFD0021B()
            {
                var result = _c.CreateColorKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InterpolationColorSpace = CompositionColorSpace.Rgb;
                // TransparentAlmostCrimson_00D0021B
                result.InsertKeyFrame(0, Color.FromArgb(0x00, 0xD0, 0x02, 0x1B), StepThenHoldEasingFunction());
                // TransparentAlmostCrimson_00D0021B
                result.InsertKeyFrame(0.274566472F, Color.FromArgb(0x00, 0xD0, 0x02, 0x1B), _holdThenStepEasingFunction);
                // AlmostCrimson_FFD0021B
                result.InsertKeyFrame(0.462427735F, Color.FromArgb(0xFF, 0xD0, 0x02, 0x1B), CubicBezierEasingFunction_1());
                return result;
            }

            CompositionColorBrush ColorBrush_AlmostCrimson_FFD0021A()
            {
                return _colorBrush_AlmostCrimson_FFD0021A = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xD0, 0x02, 0x1A));
            }

            CompositionColorBrush ColorBrush_AlmostLightGray_FFCCCCCC()
            {
                return _colorBrush_AlmostLightGray_FFCCCCCC = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xCC, 0xCC, 0xCC));
            }

            // Layer (Shape): circle-red
            CompositionContainerShape ContainerShape_0()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(37.5F, 37.5F);
                result.Offset = new Vector2(3, 3);
                var shapes = result.Shapes;
                shapes.Add(SpriteShape_0());
                result.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_360());
                var controller = result.TryGetAnimationController("RotationAngleInDegrees");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                return result;
            }

            // Layer (Shape): cross-2
            CompositionContainerShape ContainerShape_1()
            {
                var result = _c.CreateContainerShape();
                var propertySet = result.Properties;
                propertySet.InsertVector2("Position", new Vector2(40.5F, 40.5F));
                var shapes = result.Shapes;
                shapes.Add(SpriteShape_1());
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = "Vector2((my.Position.X),(my.Position.Y))";
                _reusableExpressionAnimation.SetReferenceParameter("my", result);
                result.StartAnimation("Offset", _reusableExpressionAnimation);
                result.StartAnimation("Position", PositionVector2Animation_0());
                var controller = result.TryGetAnimationController("Position");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                return result;
            }

            // Layer (Shape): cross-1
            CompositionContainerShape ContainerShape_2()
            {
                var result = _c.CreateContainerShape();
                var propertySet = result.Properties;
                propertySet.InsertVector2("Position", new Vector2(40.5F, 40.5F));
                var shapes = result.Shapes;
                shapes.Add(SpriteShape_2());
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = "Vector2((my.Position.X),(my.Position.Y))";
                _reusableExpressionAnimation.SetReferenceParameter("my", result);
                result.StartAnimation("Offset", _reusableExpressionAnimation);
                result.StartAnimation("Position", PositionVector2Animation_1());
                var controller = result.TryGetAnimationController("Position");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                return result;
            }

            // Layer (Shape): dash-1
            CompositionContainerShape ContainerShape_3()
            {
                var result = _c.CreateContainerShape();
                var propertySet = result.Properties;
                propertySet.InsertVector2("Position", new Vector2(40.5F, 40.5F));
                var shapes = result.Shapes;
                shapes.Add(SpriteShape_3());
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = "Vector2((my.Position.X),(my.Position.Y))";
                _reusableExpressionAnimation.SetReferenceParameter("my", result);
                result.StartAnimation("Offset", _reusableExpressionAnimation);
                result.StartAnimation("Position", PositionVector2Animation_2());
                var controller = result.TryGetAnimationController("Position");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                return result;
            }

            // Layer (Shape): dash-3
            CompositionContainerShape ContainerShape_4()
            {
                var result = _c.CreateContainerShape();
                var propertySet = result.Properties;
                propertySet.InsertVector2("Position", new Vector2(40.5F, 40.5F));
                var shapes = result.Shapes;
                shapes.Add(SpriteShape_4());
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = "Vector2((my.Position.X),(my.Position.Y))";
                _reusableExpressionAnimation.SetReferenceParameter("my", result);
                result.StartAnimation("Offset", _reusableExpressionAnimation);
                result.StartAnimation("Position", PositionVector2Animation_3());
                var controller = result.TryGetAnimationController("Position");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                return result;
            }

            // Layer (Shape): circle-red
            // Path 1
            // Path 1.PathGeometry
            // TrimEnd
            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0), new Vector2(0.123000003F, 1));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_2()
            {
                return _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction(new Vector2(0.370999992F, 0), new Vector2(0.340999991F, 1));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_3()
            {
                return _cubicBezierEasingFunction_3 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0), new Vector2(0.666999996F, 1));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_4()
            {
                return _cubicBezierEasingFunction_4 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0), new Vector2(0.301999986F, 1));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_5()
            {
                return _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0), new Vector2(0.666999996F, 1));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_6()
            {
                return _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0), new Vector2(0.833000004F, 1));
            }

            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(0, -34.5F));
                    builder.AddCubicBezier(new Vector2(19.0540009F, -34.5F), new Vector2(34.5F, -19.0540009F), new Vector2(34.5F, 0));
                    builder.AddCubicBezier(new Vector2(34.5F, 19.0540009F), new Vector2(19.0540009F, 34.5F), new Vector2(0, 34.5F));
                    builder.AddCubicBezier(new Vector2(-19.0540009F, 34.5F), new Vector2(-34.5F, 19.0540009F), new Vector2(-34.5F, 0));
                    builder.AddCubicBezier(new Vector2(-34.5F, -19.0540009F), new Vector2(-19.0540009F, -34.5F), new Vector2(0, -34.5F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(12, -12));
                    builder.AddLine(new Vector2(-12, 12));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(12, 12));
                    builder.AddLine(new Vector2(-12, -12));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_3()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(12.7749996F, 12.8739996F));
                    builder.AddLine(new Vector2(-12.7749996F, -12.8739996F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_4()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(10.3570004F, -10.2580004F));
                    builder.AddLine(new Vector2(-10.3570004F, 10.2580004F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame  = true;
                return result;
            }

            // Layer (Shape): circle-red
            // Path 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_0()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_0()));
                result.StartAnimation("TrimEnd", TrimEndScalarAnimation_0_to_1());
                var controller = result.TryGetAnimationController("TrimEnd");
                controller.Pause();
                controller.StartAnimation("Progress", ScalarExpressionAnimation());
                return result;
            }

            // Layer (Shape): cross-2
            // Path 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_1()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_1()));
                result.StartAnimation("TrimStart", TrimStartScalarAnimation_1_to_0_0());
                var controller = result.TryGetAnimationController("TrimStart");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                return result;
            }

            // Layer (Shape): cross-1
            // Path 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_2()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_2()));
                result.StartAnimation("TrimStart", TrimStartScalarAnimation_1_to_0_1());
                var controller = result.TryGetAnimationController("TrimStart");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                return result;
            }

            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_3()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_3()));
                var propertySet = result.Properties;
                propertySet.InsertScalar("TStart", 1);
                propertySet.InsertScalar("TEnd", 1);
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = "Min(my.TStart, my.TEnd)";
                _reusableExpressionAnimation.SetReferenceParameter("my", result);
                result.StartAnimation("TrimStart", _reusableExpressionAnimation);
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = "Max(my.TStart, my.TEnd)";
                _reusableExpressionAnimation.SetReferenceParameter("my", result);
                result.StartAnimation("TrimEnd", _reusableExpressionAnimation);
                result.StartAnimation("TStart", TStartScalarAnimation_1_to_0_0());
                var controller = result.TryGetAnimationController("TStart");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                result.StartAnimation("TEnd", TEndScalarAnimation_1_to_0_0());
                controller = result.TryGetAnimationController("TEnd");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                return result;
            }

            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_4()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_4()));
                var propertySet = result.Properties;
                propertySet.InsertScalar("TStart", 1);
                propertySet.InsertScalar("TEnd", 1);
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = "Min(my.TStart, my.TEnd)";
                _reusableExpressionAnimation.SetReferenceParameter("my", result);
                result.StartAnimation("TrimStart", _reusableExpressionAnimation);
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = "Max(my.TStart, my.TEnd)";
                _reusableExpressionAnimation.SetReferenceParameter("my", result);
                result.StartAnimation("TrimEnd", _reusableExpressionAnimation);
                result.StartAnimation("TStart", TStartScalarAnimation_1_to_0_1());
                var controller = result.TryGetAnimationController("TStart");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                result.StartAnimation("TEnd", TEndScalarAnimation_1_to_0_1());
                controller = result.TryGetAnimationController("TEnd");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                return result;
            }

            // Position
            Vector2KeyFrameAnimation PositionVector2Animation_0()
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.SetReferenceParameter("_", _root);
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(0, new Vector2(40.5F, 40.5F), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.462427735F, new Vector2(40.5F, 40.5F), _holdThenStepEasingFunction);
                result.InsertExpressionKeyFrame(0.606936336F, "(Pow(1 - _.t0, 3) * Vector2(40.5,40.5)) + (3 * Square(1 - _.t0) * _.t0 * Vector2(40.208,40.5)) + (3 * (1 - _.t0) * Square(_.t0) * Vector2(38.458,40.5)) + (Pow(_.t0, 3) * Vector2(38.75,40.5))", _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.606936455F, new Vector2(38.75F, 40.5F), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.664739907F, new Vector2(42.25F, 40.5F), CubicBezierEasingFunction_3());
                result.InsertKeyFrame(0.722543359F, new Vector2(38.75F, 40.5F), _cubicBezierEasingFunction_3);
                result.InsertExpressionKeyFrame(0.780346692F, "(Pow(1 - _.t0, 3) * Vector2(38.75,40.5)) + (3 * Square(1 - _.t0) * _.t0 * Vector2(38.75,40.5)) + (3 * (1 - _.t0) * Square(_.t0) * Vector2(42.125,40.5)) + (Pow(_.t0, 3) * Vector2(42.25,40.5))", _stepThenHoldEasingFunction);
                result.InsertExpressionKeyFrame(0.838150203F, "(Pow(1 - _.t0, 3) * Vector2(42.25,40.5)) + (3 * Square(1 - _.t0) * _.t0 * Vector2(42.375,40.5)) + (3 * (1 - _.t0) * Square(_.t0) * Vector2(39.625,40.5)) + (Pow(_.t0, 3) * Vector2(39.5,40.5))", _stepThenHoldEasingFunction);
                result.InsertExpressionKeyFrame(0.895953655F, "(Pow(1 - _.t0, 3) * Vector2(39.5,40.5)) + (3 * Square(1 - _.t0) * _.t0 * Vector2(39.375,40.5)) + (3 * (1 - _.t0) * Square(_.t0) * Vector2(41.333,40.5)) + (Pow(_.t0, 3) * Vector2(41.5,40.5))", _stepThenHoldEasingFunction);
                result.InsertExpressionKeyFrame(0.939306259F, "(Pow(1 - _.t0, 3) * Vector2(41.5,40.5)) + (3 * Square(1 - _.t0) * _.t0 * Vector2(41.667,40.5)) + (3 * (1 - _.t0) * Square(_.t0) * Vector2(40.667,40.5)) + (Pow(_.t0, 3) * Vector2(40.5,40.5))", _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.939306378F, new Vector2(40.5F, 40.5F), _stepThenHoldEasingFunction);
                return result;
            }

            // Position
            Vector2KeyFrameAnimation PositionVector2Animation_1()
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.SetReferenceParameter("_", _root);
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(0, new Vector2(40.5F, 40.5F), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.462427735F, new Vector2(40.5F, 40.5F), _holdThenStepEasingFunction);
                result.InsertExpressionKeyFrame(0.606936336F, "(Pow(1 - _.t1, 3) * Vector2(40.5,40.5)) + (3 * Square(1 - _.t1) * _.t1 * Vector2(40.208,40.5)) + (3 * (1 - _.t1) * Square(_.t1) * Vector2(38.458,40.5)) + (Pow(_.t1, 3) * Vector2(38.75,40.5))", _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.606936455F, new Vector2(38.75F, 40.5F), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.664739907F, new Vector2(42.25F, 40.5F), _cubicBezierEasingFunction_3);
                result.InsertKeyFrame(0.722543359F, new Vector2(38.75F, 40.5F), _cubicBezierEasingFunction_3);
                result.InsertExpressionKeyFrame(0.780346692F, "(Pow(1 - _.t1, 3) * Vector2(38.75,40.5)) + (3 * Square(1 - _.t1) * _.t1 * Vector2(38.75,40.5)) + (3 * (1 - _.t1) * Square(_.t1) * Vector2(42.125,40.5)) + (Pow(_.t1, 3) * Vector2(42.25,40.5))", _stepThenHoldEasingFunction);
                result.InsertExpressionKeyFrame(0.838150203F, "(Pow(1 - _.t1, 3) * Vector2(42.25,40.5)) + (3 * Square(1 - _.t1) * _.t1 * Vector2(42.375,40.5)) + (3 * (1 - _.t1) * Square(_.t1) * Vector2(39.625,40.5)) + (Pow(_.t1, 3) * Vector2(39.5,40.5))", _stepThenHoldEasingFunction);
                result.InsertExpressionKeyFrame(0.895953655F, "(Pow(1 - _.t1, 3) * Vector2(39.5,40.5)) + (3 * Square(1 - _.t1) * _.t1 * Vector2(39.375,40.5)) + (3 * (1 - _.t1) * Square(_.t1) * Vector2(41.333,40.5)) + (Pow(_.t1, 3) * Vector2(41.5,40.5))", _stepThenHoldEasingFunction);
                result.InsertExpressionKeyFrame(0.939306259F, "(Pow(1 - _.t1, 3) * Vector2(41.5,40.5)) + (3 * Square(1 - _.t1) * _.t1 * Vector2(41.667,40.5)) + (3 * (1 - _.t1) * Square(_.t1) * Vector2(40.667,40.5)) + (Pow(_.t1, 3) * Vector2(40.5,40.5))", _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.939306378F, new Vector2(40.5F, 40.5F), _stepThenHoldEasingFunction);
                return result;
            }

            // Position
            Vector2KeyFrameAnimation PositionVector2Animation_2()
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.SetReferenceParameter("_", _root);
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(0, new Vector2(40.5F, 40.5F), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.462427735F, new Vector2(40.5F, 40.5F), _holdThenStepEasingFunction);
                result.InsertExpressionKeyFrame(0.606936336F, "(Pow(1 - _.t2, 3) * Vector2(40.5,40.5)) + (3 * Square(1 - _.t2) * _.t2 * Vector2(40.208,40.5)) + (3 * (1 - _.t2) * Square(_.t2) * Vector2(38.458,40.5)) + (Pow(_.t2, 3) * Vector2(38.75,40.5))", _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.606936455F, new Vector2(38.75F, 40.5F), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.664739907F, new Vector2(42.25F, 40.5F), _cubicBezierEasingFunction_3);
                result.InsertKeyFrame(0.722543359F, new Vector2(38.75F, 40.5F), _cubicBezierEasingFunction_3);
                result.InsertExpressionKeyFrame(0.780346692F, "(Pow(1 - _.t2, 3) * Vector2(38.75,40.5)) + (3 * Square(1 - _.t2) * _.t2 * Vector2(38.75,40.5)) + (3 * (1 - _.t2) * Square(_.t2) * Vector2(42.125,40.5)) + (Pow(_.t2, 3) * Vector2(42.25,40.5))", _stepThenHoldEasingFunction);
                result.InsertExpressionKeyFrame(0.838150203F, "(Pow(1 - _.t2, 3) * Vector2(42.25,40.5)) + (3 * Square(1 - _.t2) * _.t2 * Vector2(42.375,40.5)) + (3 * (1 - _.t2) * Square(_.t2) * Vector2(39.625,40.5)) + (Pow(_.t2, 3) * Vector2(39.5,40.5))", _stepThenHoldEasingFunction);
                result.InsertExpressionKeyFrame(0.895953655F, "(Pow(1 - _.t2, 3) * Vector2(39.5,40.5)) + (3 * Square(1 - _.t2) * _.t2 * Vector2(39.375,40.5)) + (3 * (1 - _.t2) * Square(_.t2) * Vector2(41.333,40.5)) + (Pow(_.t2, 3) * Vector2(41.5,40.5))", _stepThenHoldEasingFunction);
                result.InsertExpressionKeyFrame(0.939306259F, "(Pow(1 - _.t2, 3) * Vector2(41.5,40.5)) + (3 * Square(1 - _.t2) * _.t2 * Vector2(41.667,40.5)) + (3 * (1 - _.t2) * Square(_.t2) * Vector2(40.667,40.5)) + (Pow(_.t2, 3) * Vector2(40.5,40.5))", _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.939306378F, new Vector2(40.5F, 40.5F), _stepThenHoldEasingFunction);
                return result;
            }

            // Position
            Vector2KeyFrameAnimation PositionVector2Animation_3()
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.SetReferenceParameter("_", _root);
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(0, new Vector2(40.5F, 40.5F), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.462427735F, new Vector2(40.5F, 40.5F), _holdThenStepEasingFunction);
                result.InsertExpressionKeyFrame(0.606936336F, "(Pow(1 - _.t3, 3) * Vector2(40.5,40.5)) + (3 * Square(1 - _.t3) * _.t3 * Vector2(40.208,40.5)) + (3 * (1 - _.t3) * Square(_.t3) * Vector2(38.458,40.5)) + (Pow(_.t3, 3) * Vector2(38.75,40.5))", _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.606936455F, new Vector2(38.75F, 40.5F), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.664739907F, new Vector2(42.25F, 40.5F), _cubicBezierEasingFunction_3);
                result.InsertKeyFrame(0.722543359F, new Vector2(38.75F, 40.5F), _cubicBezierEasingFunction_3);
                result.InsertExpressionKeyFrame(0.780346692F, "(Pow(1 - _.t3, 3) * Vector2(38.75,40.5)) + (3 * Square(1 - _.t3) * _.t3 * Vector2(38.75,40.5)) + (3 * (1 - _.t3) * Square(_.t3) * Vector2(42.125,40.5)) + (Pow(_.t3, 3) * Vector2(42.25,40.5))", _stepThenHoldEasingFunction);
                result.InsertExpressionKeyFrame(0.838150203F, "(Pow(1 - _.t3, 3) * Vector2(42.25,40.5)) + (3 * Square(1 - _.t3) * _.t3 * Vector2(42.375,40.5)) + (3 * (1 - _.t3) * Square(_.t3) * Vector2(39.625,40.5)) + (Pow(_.t3, 3) * Vector2(39.5,40.5))", _stepThenHoldEasingFunction);
                result.InsertExpressionKeyFrame(0.895953655F, "(Pow(1 - _.t3, 3) * Vector2(39.5,40.5)) + (3 * Square(1 - _.t3) * _.t3 * Vector2(39.375,40.5)) + (3 * (1 - _.t3) * Square(_.t3) * Vector2(41.333,40.5)) + (Pow(_.t3, 3) * Vector2(41.5,40.5))", _stepThenHoldEasingFunction);
                result.InsertExpressionKeyFrame(0.939306259F, "(Pow(1 - _.t3, 3) * Vector2(41.5,40.5)) + (3 * Square(1 - _.t3) * _.t3 * Vector2(41.667,40.5)) + (3 * (1 - _.t3) * Square(_.t3) * Vector2(40.667,40.5)) + (Pow(_.t3, 3) * Vector2(40.5,40.5))", _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.939306378F, new Vector2(40.5F, 40.5F), _stepThenHoldEasingFunction);
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0);
                propertySet.InsertScalar("t0", 0);
                propertySet.InsertScalar("t1", 0);
                propertySet.InsertScalar("t2", 0);
                propertySet.InsertScalar("t3", 0);
                var children = result.Children;
                children.InsertAtTop(ShapeVisual());
                result.StartAnimation("t0", ScalarAnimation_0_to_1());
                var controller = result.TryGetAnimationController("t0");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                result.StartAnimation("t1", _scalarAnimation_0_to_1);
                controller = result.TryGetAnimationController("t1");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                result.StartAnimation("t2", _scalarAnimation_0_to_1);
                controller = result.TryGetAnimationController("t2");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                result.StartAnimation("t3", _scalarAnimation_0_to_1);
                controller = result.TryGetAnimationController("t3");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                return result;
            }

            // Layer (Shape): circle-red
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_360()
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(0, 0, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.693641603F, 360, _cubicBezierEasingFunction_1);
                return result;
            }

            ScalarKeyFrameAnimation ScalarAnimation_0_to_1()
            {
                var result = _scalarAnimation_0_to_1 = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(0.462427825F, 0, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.606936336F, 1, _cubicBezierEasingFunction_3);
                result.InsertKeyFrame(0.722543478F, 0, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.780346692F, 1, _cubicBezierEasingFunction_3);
                result.InsertKeyFrame(0.780346811F, 0, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.838150203F, 1, _cubicBezierEasingFunction_3);
                result.InsertKeyFrame(0.838150322F, 0, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.895953655F, 1, CubicBezierEasingFunction_5());
                result.InsertKeyFrame(0.895953774F, 0, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.939306259F, 1, CubicBezierEasingFunction_6());
                return result;
            }

            ExpressionAnimation ScalarExpressionAnimation()
            {
                var result = _scalarExpressionAnimation = _c.CreateExpressionAnimation();
                result.SetReferenceParameter("_", _root);
                result.Expression = "_.Progress";
                return result;
            }

            ShapeVisual ShapeVisual()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(81, 81);
                var shapes = result.Shapes;
                // Layer (Shape): circle-red
                shapes.Add(ContainerShape_0());
                // Layer (Shape): cross-2
                shapes.Add(ContainerShape_1());
                // Layer (Shape): cross-1
                shapes.Add(ContainerShape_2());
                // Layer (Shape): dash-1
                shapes.Add(ContainerShape_3());
                // Layer (Shape): dash-3
                shapes.Add(ContainerShape_4());
                return result;
            }

            // Layer (Shape): circle-red
            // Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                var result = _c.CreateSpriteShape();
                result.TransformMatrix = new Matrix3x2(1, 0, 0, 1, 37.5F, 37.5F);
                result.Geometry = PathGeometry_0();
                result.StrokeBrush = AnimatedColorBrush_TransparentAlmostCrimson_00D0021B_to_AlmostCrimson_FFD0021B();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 4;
                result.StrokeThickness = 8;
                return result;
            }

            // Layer (Shape): cross-2
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                var result = _c.CreateSpriteShape();
                result.TransformMatrix = new Matrix3x2(1, 0, 0, 1, 0, 0);
                result.Geometry = PathGeometry_1();
                result.StrokeBrush = ColorBrush_AlmostCrimson_FFD0021A();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 4;
                result.StrokeThickness = 8;
                return result;
            }

            // Layer (Shape): cross-1
            // Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                var result = _c.CreateSpriteShape();
                result.TransformMatrix = new Matrix3x2(1, 0, 0, 1, 0, 0);
                result.Geometry = PathGeometry_2();
                result.StrokeBrush = _colorBrush_AlmostCrimson_FFD0021A;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 4;
                result.StrokeThickness = 8;
                return result;
            }

            // Layer (Shape): dash-1
            // Path 1
            CompositionSpriteShape SpriteShape_3()
            {
                var result = _c.CreateSpriteShape();
                result.TransformMatrix = new Matrix3x2(1, 0, 0, 1, -2.5170002F, 7.28200006F);
                result.Geometry = PathGeometry_3();
                result.StrokeBrush = ColorBrush_AlmostLightGray_FFCCCCCC();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 4;
                result.StrokeThickness = 2;
                return result;
            }

            // Layer (Shape): dash-3
            // Path 1
            CompositionSpriteShape SpriteShape_4()
            {
                var result = _c.CreateSpriteShape();
                result.TransformMatrix = new Matrix3x2(1, 0, 0, 1, 9.14599991F, 0);
                result.Geometry = PathGeometry_4();
                result.StrokeBrush = _colorBrush_AlmostLightGray_FFCCCCCC;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 4;
                result.StrokeThickness = 2;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame  = true;
                return result;
            }

            // TEnd
            ScalarKeyFrameAnimation TEndScalarAnimation_1_to_0_0()
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(0, 1, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.462427735F, 1, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.606936395F, 0, _cubicBezierEasingFunction_3);
                return result;
            }

            // TEnd
            ScalarKeyFrameAnimation TEndScalarAnimation_1_to_0_1()
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(0, 1, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.606936395F, 1, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.751445115F, 0, _cubicBezierEasingFunction_3);
                return result;
            }

            // Layer (Shape): circle-red
            // Path 1
            // Path 1.PathGeometry
            // TrimEnd
            ScalarKeyFrameAnimation TrimEndScalarAnimation_0_to_1()
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(0, 0, HoldThenStepEasingFunction());
                result.InsertKeyFrame(0.693641603F, 1, CubicBezierEasingFunction_0());
                return result;
            }

            // Layer (Shape): cross-2
            // Path 1
            // Path 1.PathGeometry
            // TrimStart
            ScalarKeyFrameAnimation TrimStartScalarAnimation_1_to_0_0()
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(0, 1, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.505780339F, 1, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.852601171F, 0, CubicBezierEasingFunction_2());
                return result;
            }

            // Layer (Shape): cross-1
            // Path 1
            // Path 1.PathGeometry
            // TrimStart
            ScalarKeyFrameAnimation TrimStartScalarAnimation_1_to_0_1()
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(0, 1, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.419075131F, 1, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.765895963F, 0, _cubicBezierEasingFunction_2);
                return result;
            }

            // TStart
            ScalarKeyFrameAnimation TStartScalarAnimation_1_to_0_0()
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(0, 1, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.462427735F, 1, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.606936395F, 0, CubicBezierEasingFunction_4());
                return result;
            }

            // TStart
            ScalarKeyFrameAnimation TStartScalarAnimation_1_to_0_1()
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(0, 1, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.606936395F, 1, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.751445115F, 0, _cubicBezierEasingFunction_4);
                return result;
            }

            internal AnimatedVisual(Compositor compositor)
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            Visual IAnimatedVisual.RootVisual => _root;
            TimeSpan IAnimatedVisual.Duration => TimeSpan.FromTicks(c_durationTicks);
            Vector2 IAnimatedVisual.Size => new Vector2(81, 81);
            void IDisposable.Dispose() => _root?.Dispose();
        }
    }
}
