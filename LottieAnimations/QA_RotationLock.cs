//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           6.1.0-build.109+gebc2a6a0a3
//       
//       Command:
//           LottieGen -MinimumUapVersion 11 -Namespace WindowsInternal.ComposableShell.Experiences -Interface ILottieVisual -Language CSharp -InputFile QA_RotationLock.json
//       
//       Input file:
//           QA_RotationLock.json (15927 bytes created 10:10-07:00 Mar 30 2020)
//       
//       Invoked on:
//           SIM10FRESH @ 17:59-07:00 Apr 1 2020
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |    85 |
// |--------------------------+-------|
// | Animators                |    19 |
// | Animated brushes         |     1 |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     2 |
// | PathKeyFrameAnimations   |     5 |
// |--------------------------+-------|
// | ContainerVisuals         |     1 |
// | ShapeVisuals             |     1 |
// |--------------------------+-------|
// | ContainerShapes          |     2 |
// | CompositionSpriteShapes  |     5 |
// |--------------------------+-------|
// | Brushes                  |     1 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |     - |
// ------------------------------------
using Microsoft.Graphics.Canvas.Geometry;
using System;
using System.Numerics;
using Windows.UI;
using Windows.UI.Composition;

namespace AnimatedIconPrototype
{
    // Name:        QA_RotationLock
    // Frame rate:  60 fps
    // Frame count: 60
    // Duration:    1000.0 mS
    // __________________________________________
    // | Theme property | Type  | Default value |
    // |________________|_______|_______________|
    // | Foreground     | Color |   #FF060808   |
    // ------------------------------------------
    sealed class QA_RotationLock : ILottieVisualSource
    {
        // Animation duration: 1.000 seconds.
        internal const long c_durationTicks = 10000000;

        // Theme property: Foreground.
        internal static readonly Color c_themeForeground = Color.FromArgb(0xFF, 0x06, 0x08, 0x08);

        CompositionPropertySet _themeProperties;
        Color _themeForeground = c_themeForeground;

        // Theme properties.
        public Color Foreground
        {
            get => _themeForeground;
            set
            {
                _themeForeground = value;
                if (_themeProperties != null)
                {
                    _themeProperties.InsertVector4("Foreground", ColorAsVector4((Color)_themeForeground));
                }
            }
        }

        public CompositionPropertySet GetThemeProperties(Compositor compositor)
        {
            return EnsureThemeProperties(compositor);
        }

        internal static Vector4 ColorAsVector4(Color color) => new Vector4(color.R, color.G, color.B, color.A);

        CompositionPropertySet EnsureThemeProperties(Compositor compositor)
        {
            if (_themeProperties is null)
            {
                _themeProperties = compositor.CreatePropertySet();
                _themeProperties.InsertVector4("Foreground", ColorAsVector4((Color)Foreground));
            }
            return _themeProperties;
        }

        public ILottieVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;
            EnsureThemeProperties(compositor);

            if (AnimatedVisual.IsRuntimeCompatible())
            {
                return
                    new AnimatedVisual(
                        compositor,
                        _themeProperties
                        );
            }

            return null;
        }

        sealed class AnimatedVisual : ILottieVisual
        {
            const long c_durationTicks = 10000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            readonly CompositionPropertySet _themeProperties;
            CompositionColorBrush _themeColor_Foreground;
            CompositionPath _path_00;
            CompositionPath _path_01;
            CompositionPath _path_02;
            CompositionPath _path_03;
            CompositionPath _path_04;
            CompositionPath _path_05;
            CompositionPath _path_06;
            CompositionPath _path_07;
            CompositionPath _path_08;
            CompositionPath _path_09;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            CubicBezierEasingFunction _cubicBezierEasingFunction_2;
            CubicBezierEasingFunction _cubicBezierEasingFunction_3;
            CubicBezierEasingFunction _cubicBezierEasingFunction_4;
            ExpressionAnimation _rootProgress;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CanvasGeometry Geometry_00()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(128.516006F, -39.9799995F));
                    builder.AddCubicBezier(new Vector2(129.192993F, -39.9799995F), new Vector2(129.830994F, -39.862999F), new Vector2(130.429993F, -39.6290016F));
                    builder.AddCubicBezier(new Vector2(131.029007F, -39.3950005F), new Vector2(131.574997F, -39.0429993F), new Vector2(132.070007F, -38.5740013F));
                    builder.AddCubicBezier(new Vector2(132.070007F, -38.5740013F), new Vector2(158.554993F, -12.0900002F), new Vector2(158.554993F, -12.0900002F));
                    builder.AddCubicBezier(new Vector2(159.024002F, -11.6210003F), new Vector2(159.375F, -11.0869999F), new Vector2(159.608994F, -10.4879999F));
                    builder.AddCubicBezier(new Vector2(159.843002F, -9.88899994F), new Vector2(159.973999F, -9.23799992F), new Vector2(160F, -8.53499985F));
                    builder.AddCubicBezier(new Vector2(160F, -7.88399982F), new Vector2(159.882004F, -7.25899982F), new Vector2(159.647995F, -6.65999985F));
                    builder.AddCubicBezier(new Vector2(159.414001F, -6.06099987F), new Vector2(159.050003F, -5.51499987F), new Vector2(158.554993F, -5.01999998F));
                    builder.AddCubicBezier(new Vector2(158.554993F, -5.01999998F), new Vector2(144.882996F, 8.65200043F), new Vector2(144.882996F, 8.65200043F));
                    builder.AddCubicBezier(new Vector2(144.675003F, 6.7249999F), new Vector2(144.139999F, 4.88999987F), new Vector2(143.281006F, 3.14499998F));
                    builder.AddCubicBezier(new Vector2(143.281006F, 3.14499998F), new Vector2(155F, -8.57400036F), new Vector2(155F, -8.57400036F));
                    builder.AddCubicBezier(new Vector2(155F, -8.57400036F), new Vector2(128.554993F, -35.0200005F), new Vector2(128.554993F, -35.0200005F));
                    builder.AddCubicBezier(new Vector2(128.554993F, -35.0200005F), new Vector2(85F, 8.49600029F), new Vector2(85F, 8.49600029F));
                    builder.AddCubicBezier(new Vector2(85F, 8.49600029F), new Vector2(110F, 33.4959984F), new Vector2(110F, 33.4959984F));
                    builder.AddCubicBezier(new Vector2(110F, 33.4959984F), new Vector2(110F, 34.9169998F), new Vector2(110F, 34.9169998F));
                    builder.AddCubicBezier(new Vector2(110F, 34.9169998F), new Vector2(110F, 39.6679993F), new Vector2(110F, 39.6679993F));
                    builder.AddCubicBezier(new Vector2(109.609001F, 39.5379982F), new Vector2(109.245003F, 39.3810005F), new Vector2(108.905998F, 39.1990013F));
                    builder.AddCubicBezier(new Vector2(108.567001F, 39.0169983F), new Vector2(108.241997F, 38.7820015F), new Vector2(107.93F, 38.4959984F));
                    builder.AddCubicBezier(new Vector2(107.93F, 38.4959984F), new Vector2(81.4449997F, 12.0509996F), new Vector2(81.4449997F, 12.0509996F));
                    builder.AddCubicBezier(new Vector2(80.9759979F, 11.5819998F), new Vector2(80.625F, 11.0480003F), new Vector2(80.3909988F, 10.4490004F));
                    builder.AddCubicBezier(new Vector2(80.1569977F, 9.85000038F), new Vector2(80.026001F, 9.21199989F), new Vector2(80F, 8.53499985F));
                    builder.AddCubicBezier(new Vector2(80F, 7.8579998F), new Vector2(80.1179962F, 7.21999979F), new Vector2(80.3519974F, 6.62099981F));
                    builder.AddCubicBezier(new Vector2(80.5859985F, 6.02199984F), new Vector2(80.9499969F, 5.4749999F), new Vector2(81.4449997F, 4.98000002F));
                    builder.AddCubicBezier(new Vector2(81.4449997F, 4.98000002F), new Vector2(125F, -38.5740013F), new Vector2(125F, -38.5740013F));
                    builder.AddCubicBezier(new Vector2(125.469002F, -39.0429993F), new Vector2(126.002998F, -39.3950005F), new Vector2(126.601997F, -39.6290016F));
                    builder.AddCubicBezier(new Vector2(127.200996F, -39.862999F), new Vector2(127.838997F, -39.9799995F), new Vector2(128.516006F, -39.9799995F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_01()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(128.516006F, -39.9799995F));
                    builder.AddCubicBezier(new Vector2(129.192993F, -39.9799995F), new Vector2(129.830994F, -39.862999F), new Vector2(130.429993F, -39.6290016F));
                    builder.AddCubicBezier(new Vector2(131.029007F, -39.3950005F), new Vector2(131.574997F, -39.0429993F), new Vector2(132.070007F, -38.5740013F));
                    builder.AddCubicBezier(new Vector2(132.070007F, -38.5740013F), new Vector2(158.554993F, -12.0900002F), new Vector2(158.554993F, -12.0900002F));
                    builder.AddCubicBezier(new Vector2(159.024002F, -11.6210003F), new Vector2(159.375F, -11.0869999F), new Vector2(159.608994F, -10.4879999F));
                    builder.AddCubicBezier(new Vector2(159.843002F, -9.88899994F), new Vector2(159.973999F, -9.23799992F), new Vector2(160F, -8.53499985F));
                    builder.AddCubicBezier(new Vector2(160F, -7.88399982F), new Vector2(159.882004F, -7.25899982F), new Vector2(159.647995F, -6.65999985F));
                    builder.AddCubicBezier(new Vector2(159.414001F, -6.06099987F), new Vector2(159.050003F, -5.51499987F), new Vector2(158.554993F, -5.01999998F));
                    builder.AddCubicBezier(new Vector2(158.554993F, -5.01999998F), new Vector2(145.186996F, 7.54099989F), new Vector2(145.186996F, 7.54099989F));
                    builder.AddCubicBezier(new Vector2(148.141998F, 3.43899989F), new Vector2(148.477997F, 0.593999982F), new Vector2(147.619003F, -1.15100002F));
                    builder.AddCubicBezier(new Vector2(147.619003F, -1.15100002F), new Vector2(155F, -8.57400036F), new Vector2(155F, -8.57400036F));
                    builder.AddCubicBezier(new Vector2(155F, -8.57400036F), new Vector2(128.554993F, -35.0200005F), new Vector2(128.554993F, -35.0200005F));
                    builder.AddCubicBezier(new Vector2(128.554993F, -35.0200005F), new Vector2(85F, 8.49600029F), new Vector2(85F, 8.49600029F));
                    builder.AddCubicBezier(new Vector2(85F, 8.49600029F), new Vector2(85.0690002F, 8.71199989F), new Vector2(85.0690002F, 8.71199989F));
                    builder.AddCubicBezier(new Vector2(85.0690002F, 8.71199989F), new Vector2(85.0690002F, 10.1339998F), new Vector2(85.0690002F, 10.1339998F));
                    builder.AddCubicBezier(new Vector2(85.0690002F, 10.1339998F), new Vector2(85.0690002F, 14.8839998F), new Vector2(85.0690002F, 14.8839998F));
                    builder.AddCubicBezier(new Vector2(84.6780014F, 14.7539997F), new Vector2(84.314003F, 14.5970001F), new Vector2(83.9749985F, 14.415F));
                    builder.AddCubicBezier(new Vector2(83.6360016F, 14.2329998F), new Vector2(83.3099976F, 13.9980001F), new Vector2(82.9980011F, 13.7119999F));
                    builder.AddCubicBezier(new Vector2(82.9980011F, 13.7119999F), new Vector2(81.4449997F, 12.0509996F), new Vector2(81.4449997F, 12.0509996F));
                    builder.AddCubicBezier(new Vector2(80.9759979F, 11.5819998F), new Vector2(80.625F, 11.0480003F), new Vector2(80.3909988F, 10.4490004F));
                    builder.AddCubicBezier(new Vector2(80.1569977F, 9.85000038F), new Vector2(80.026001F, 9.21199989F), new Vector2(80F, 8.53499985F));
                    builder.AddCubicBezier(new Vector2(80F, 7.8579998F), new Vector2(80.1179962F, 7.21999979F), new Vector2(80.3519974F, 6.62099981F));
                    builder.AddCubicBezier(new Vector2(80.5859985F, 6.02199984F), new Vector2(80.9499969F, 5.4749999F), new Vector2(81.4449997F, 4.98000002F));
                    builder.AddCubicBezier(new Vector2(81.4449997F, 4.98000002F), new Vector2(125F, -38.5740013F), new Vector2(125F, -38.5740013F));
                    builder.AddCubicBezier(new Vector2(125.469002F, -39.0429993F), new Vector2(126.002998F, -39.3950005F), new Vector2(126.601997F, -39.6290016F));
                    builder.AddCubicBezier(new Vector2(127.200996F, -39.862999F), new Vector2(127.838997F, -39.9799995F), new Vector2(128.516006F, -39.9799995F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - PreComp layer: Asset - AnimIcon - Action Center - RotationLock - Tagged
            // - - - ShapeGroup: Group 1
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_02()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(128.516006F, -39.9799995F));
                    builder.AddCubicBezier(new Vector2(129.192993F, -39.9799995F), new Vector2(129.830994F, -39.862999F), new Vector2(130.429993F, -39.6290016F));
                    builder.AddCubicBezier(new Vector2(131.029007F, -39.3950005F), new Vector2(131.574997F, -39.0429993F), new Vector2(132.070007F, -38.5740013F));
                    builder.AddCubicBezier(new Vector2(132.070007F, -38.5740013F), new Vector2(158.554993F, -12.0900002F), new Vector2(158.554993F, -12.0900002F));
                    builder.AddCubicBezier(new Vector2(159.024002F, -11.6210003F), new Vector2(159.375F, -11.0869999F), new Vector2(159.608994F, -10.4879999F));
                    builder.AddCubicBezier(new Vector2(159.843002F, -9.88899994F), new Vector2(159.973999F, -9.23799992F), new Vector2(160F, -8.53499985F));
                    builder.AddCubicBezier(new Vector2(160F, -7.88399982F), new Vector2(159.882004F, -7.25899982F), new Vector2(159.647995F, -6.65999985F));
                    builder.AddCubicBezier(new Vector2(159.414001F, -6.06099987F), new Vector2(159.050003F, -5.51499987F), new Vector2(158.554993F, -5.01999998F));
                    builder.AddCubicBezier(new Vector2(158.554993F, -5.01999998F), new Vector2(144.882996F, 8.65200043F), new Vector2(144.882996F, 8.65200043F));
                    builder.AddCubicBezier(new Vector2(144.675003F, 6.7249999F), new Vector2(144.139999F, 4.88999987F), new Vector2(143.281006F, 3.14499998F));
                    builder.AddCubicBezier(new Vector2(143.281006F, 3.14499998F), new Vector2(155F, -8.57400036F), new Vector2(155F, -8.57400036F));
                    builder.AddCubicBezier(new Vector2(155F, -8.57400036F), new Vector2(128.554993F, -35.0200005F), new Vector2(128.554993F, -35.0200005F));
                    builder.AddCubicBezier(new Vector2(128.554993F, -35.0200005F), new Vector2(85F, 8.49600029F), new Vector2(85F, 8.49600029F));
                    builder.AddCubicBezier(new Vector2(85F, 8.49600029F), new Vector2(111.181999F, 34.4280014F), new Vector2(111.181999F, 34.4280014F));
                    builder.AddCubicBezier(new Vector2(111.181999F, 34.4280014F), new Vector2(117.754997F, 29.5720005F), new Vector2(117.754997F, 29.5720005F));
                    builder.AddCubicBezier(new Vector2(117.754997F, 29.5720005F), new Vector2(119.095001F, 35.1279984F), new Vector2(119.095001F, 35.1279984F));
                    builder.AddCubicBezier(new Vector2(118.704002F, 34.9980011F), new Vector2(112.625F, 42.7050018F), new Vector2(108.905998F, 39.1990013F));
                    builder.AddCubicBezier(new Vector2(104.642998F, 35.1790009F), new Vector2(108.241997F, 38.7820015F), new Vector2(107.93F, 38.4959984F));
                    builder.AddCubicBezier(new Vector2(107.93F, 38.4959984F), new Vector2(81.4449997F, 12.0509996F), new Vector2(81.4449997F, 12.0509996F));
                    builder.AddCubicBezier(new Vector2(80.9759979F, 11.5819998F), new Vector2(80.625F, 11.0480003F), new Vector2(80.3909988F, 10.4490004F));
                    builder.AddCubicBezier(new Vector2(80.1569977F, 9.85000038F), new Vector2(80.026001F, 9.21199989F), new Vector2(80F, 8.53499985F));
                    builder.AddCubicBezier(new Vector2(80F, 7.8579998F), new Vector2(80.1179962F, 7.21999979F), new Vector2(80.3519974F, 6.62099981F));
                    builder.AddCubicBezier(new Vector2(80.5859985F, 6.02199984F), new Vector2(80.9499969F, 5.4749999F), new Vector2(81.4449997F, 4.98000002F));
                    builder.AddCubicBezier(new Vector2(81.4449997F, 4.98000002F), new Vector2(125F, -38.5740013F), new Vector2(125F, -38.5740013F));
                    builder.AddCubicBezier(new Vector2(125.469002F, -39.0429993F), new Vector2(126.002998F, -39.3950005F), new Vector2(126.601997F, -39.6290016F));
                    builder.AddCubicBezier(new Vector2(127.200996F, -39.862999F), new Vector2(127.838997F, -39.9799995F), new Vector2(128.516006F, -39.9799995F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_03()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(99.4919968F, 12.9879999F));
                    builder.AddCubicBezier(new Vector2(99.4919968F, 12.9879999F), new Vector2(103.008003F, 9.43400002F), new Vector2(103.008003F, 9.43400002F));
                    builder.AddCubicBezier(new Vector2(103.008003F, 9.43400002F), new Vector2(110.508003F, 16.9729996F), new Vector2(110.508003F, 16.9729996F));
                    builder.AddCubicBezier(new Vector2(110.508003F, 16.9729996F), new Vector2(106.991997F, 20.4880009F), new Vector2(106.991997F, 20.4880009F));
                    builder.AddCubicBezier(new Vector2(106.991997F, 20.4880009F), new Vector2(99.4919968F, 12.9879999F), new Vector2(99.4919968F, 12.9879999F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_04()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(99.4919968F, 12.9879999F));
                    builder.AddCubicBezier(new Vector2(99.4919968F, 12.9879999F), new Vector2(103.008003F, 9.43400002F), new Vector2(103.008003F, 9.43400002F));
                    builder.AddCubicBezier(new Vector2(103.008003F, 9.43400002F), new Vector2(103.139F, 9.43299961F), new Vector2(103.139F, 9.43299961F));
                    builder.AddCubicBezier(new Vector2(103.139F, 9.43299961F), new Vector2(99.6230011F, 12.948F), new Vector2(99.6230011F, 12.948F));
                    builder.AddCubicBezier(new Vector2(99.6230011F, 12.948F), new Vector2(99.4919968F, 12.9879999F), new Vector2(99.4919968F, 12.9879999F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_05()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(145F, 14.9799995F));
                    builder.AddCubicBezier(new Vector2(145F, 14.9799995F), new Vector2(145F, 39.9799995F), new Vector2(145F, 39.9799995F));
                    builder.AddCubicBezier(new Vector2(145F, 39.9799995F), new Vector2(115F, 39.9799995F), new Vector2(115F, 39.9799995F));
                    builder.AddCubicBezier(new Vector2(115F, 39.9799995F), new Vector2(115F, 14.9799995F), new Vector2(115F, 14.9799995F));
                    builder.AddCubicBezier(new Vector2(115F, 14.9799995F), new Vector2(145F, 14.9799995F), new Vector2(145F, 14.9799995F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_06()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(145F, 9.97999954F));
                    builder.AddCubicBezier(new Vector2(145F, 9.97999954F), new Vector2(145F, 39.9799995F), new Vector2(145F, 39.9799995F));
                    builder.AddCubicBezier(new Vector2(145F, 39.9799995F), new Vector2(115F, 39.9799995F), new Vector2(115F, 39.9799995F));
                    builder.AddCubicBezier(new Vector2(115F, 39.9799995F), new Vector2(115F, 9.97999954F), new Vector2(115F, 9.97999954F));
                    builder.AddCubicBezier(new Vector2(115F, 9.97999954F), new Vector2(145F, 9.97999954F), new Vector2(145F, 9.97999954F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_07()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(140F, 19.9799995F));
                    builder.AddCubicBezier(new Vector2(140F, 19.9799995F), new Vector2(120F, 19.9799995F), new Vector2(120F, 19.9799995F));
                    builder.AddCubicBezier(new Vector2(120F, 19.9799995F), new Vector2(120F, 34.9799995F), new Vector2(120F, 34.9799995F));
                    builder.AddCubicBezier(new Vector2(120F, 34.9799995F), new Vector2(140F, 34.9799995F), new Vector2(140F, 34.9799995F));
                    builder.AddCubicBezier(new Vector2(140F, 34.9799995F), new Vector2(140F, 19.9799995F), new Vector2(140F, 19.9799995F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_08()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(140F, 14.9799995F));
                    builder.AddCubicBezier(new Vector2(140F, 14.9799995F), new Vector2(120F, 14.9799995F), new Vector2(120F, 14.9799995F));
                    builder.AddCubicBezier(new Vector2(120F, 14.9799995F), new Vector2(120F, 34.9799995F), new Vector2(120F, 34.9799995F));
                    builder.AddCubicBezier(new Vector2(120F, 34.9799995F), new Vector2(140F, 34.9799995F), new Vector2(140F, 34.9799995F));
                    builder.AddCubicBezier(new Vector2(140F, 34.9799995F), new Vector2(140F, 14.9799995F), new Vector2(140F, 14.9799995F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_09()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(4F, 3.49900007F));
                    builder.AddCubicBezier(new Vector2(4F, 3.49900007F), new Vector2(4F, 1F), new Vector2(4F, 1F));
                    builder.AddCubicBezier(new Vector2(4F, 0.458000004F), new Vector2(3.89100003F, -0.057F), new Vector2(3.67199993F, -0.546999991F));
                    builder.AddCubicBezier(new Vector2(3.45300007F, -1.03699994F), new Vector2(3.16599989F, -1.46300006F), new Vector2(2.81200004F, -1.82799995F));
                    builder.AddCubicBezier(new Vector2(2.45799994F, -2.19300008F), new Vector2(2.03699994F, -2.48000002F), new Vector2(1.54700005F, -2.68799996F));
                    builder.AddCubicBezier(new Vector2(1.05700004F, -2.89599991F), new Vector2(0.541999996F, -3F), new Vector2(0F, -3F));
                    builder.AddCubicBezier(new Vector2(-0.561999977F, -3F), new Vector2(-1.08299994F, -2.89100003F), new Vector2(-1.56200004F, -2.67199993F));
                    builder.AddCubicBezier(new Vector2(-2.04099989F, -2.45300007F), new Vector2(-2.46300006F, -2.16599989F), new Vector2(-2.82800007F, -1.81200004F));
                    builder.AddCubicBezier(new Vector2(-3.19300008F, -1.45799994F), new Vector2(-3.48000002F, -1.03699994F), new Vector2(-3.68799996F, -0.546999991F));
                    builder.AddCubicBezier(new Vector2(-3.89599991F, -0.057F), new Vector2(-4F, 0.458000004F), new Vector2(-4F, 1F));
                    builder.AddCubicBezier(new Vector2(-4F, 1F), new Vector2(-4F, 3.49900007F), new Vector2(-4F, 3.49900007F));
                    builder.AddCubicBezier(new Vector2(-4F, 3.49900007F), new Vector2(-2F, 3.49900007F), new Vector2(-2F, 3.49900007F));
                    builder.AddCubicBezier(new Vector2(-2F, 3.49900007F), new Vector2(-2F, 1F), new Vector2(-2F, 1F));
                    builder.AddCubicBezier(new Vector2(-2.00999999F, 0.728999972F), new Vector2(-1.95899999F, 0.469000012F), new Vector2(-1.84399998F, 0.218999997F));
                    builder.AddCubicBezier(new Vector2(-1.72899997F, -0.0309999995F), new Vector2(-1.58299994F, -0.245000005F), new Vector2(-1.40600002F, -0.421999991F));
                    builder.AddCubicBezier(new Vector2(-1.22899997F, -0.598999977F), new Vector2(-1.02100003F, -0.74000001F), new Vector2(-0.781000018F, -0.843999982F));
                    builder.AddCubicBezier(new Vector2(-0.541000009F, -0.948000014F), new Vector2(-0.280999988F, -1F), new Vector2(0F, -1F));
                    builder.AddCubicBezier(new Vector2(0.270999998F, -1F), new Vector2(0.531000018F, -0.948000014F), new Vector2(0.781000018F, -0.843999982F));
                    builder.AddCubicBezier(new Vector2(1.03100002F, -0.74000001F), new Vector2(1.245F, -0.593999982F), new Vector2(1.42200005F, -0.405999988F));
                    builder.AddCubicBezier(new Vector2(1.59899998F, -0.217999995F), new Vector2(1.74000001F, -0.00600000005F), new Vector2(1.84399998F, 0.233999997F));
                    builder.AddCubicBezier(new Vector2(1.94799995F, 0.474000007F), new Vector2(2F, 0.728999972F), new Vector2(2F, 1F));
                    builder.AddCubicBezier(new Vector2(2F, 1F), new Vector2(2F, 3.49900007F), new Vector2(2F, 3.49900007F));
                    builder.AddCubicBezier(new Vector2(2F, 3.49900007F), new Vector2(4F, 3.49900007F), new Vector2(4F, 3.49900007F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_10()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(4F, 3.49900007F));
                    builder.AddCubicBezier(new Vector2(4F, 3.49900007F), new Vector2(4F, 1F), new Vector2(4F, 1F));
                    builder.AddCubicBezier(new Vector2(4F, 0.458000004F), new Vector2(3.89100003F, -0.057F), new Vector2(3.67199993F, -0.546999991F));
                    builder.AddCubicBezier(new Vector2(3.45300007F, -1.03699994F), new Vector2(3.16599989F, -1.46300006F), new Vector2(2.81200004F, -1.82799995F));
                    builder.AddCubicBezier(new Vector2(2.45799994F, -2.19300008F), new Vector2(2.03699994F, -2.48000002F), new Vector2(1.54700005F, -2.68799996F));
                    builder.AddCubicBezier(new Vector2(1.05700004F, -2.89599991F), new Vector2(0.541999996F, -3F), new Vector2(0F, -3F));
                    builder.AddCubicBezier(new Vector2(-0.561999977F, -3F), new Vector2(-1.08299994F, -2.89100003F), new Vector2(-1.56200004F, -2.67199993F));
                    builder.AddCubicBezier(new Vector2(-2.04099989F, -2.45300007F), new Vector2(-2.46300006F, -2.16599989F), new Vector2(-2.82800007F, -1.81200004F));
                    builder.AddCubicBezier(new Vector2(-3.19300008F, -1.45799994F), new Vector2(-3.48000002F, -1.03699994F), new Vector2(-3.68799996F, -0.546999991F));
                    builder.AddCubicBezier(new Vector2(-3.89599991F, -0.057F), new Vector2(-4F, 0.458000004F), new Vector2(-4F, 1F));
                    builder.AddCubicBezier(new Vector2(-4F, 1F), new Vector2(-4.00600004F, 9.18299961F), new Vector2(-4.00600004F, 9.18299961F));
                    builder.AddCubicBezier(new Vector2(-4.00600004F, 9.18299961F), new Vector2(-2.00600004F, 9.18299961F), new Vector2(-2.00600004F, 9.18299961F));
                    builder.AddCubicBezier(new Vector2(-2.00600004F, 9.18299961F), new Vector2(-2F, 1F), new Vector2(-2F, 1F));
                    builder.AddCubicBezier(new Vector2(-2.00999999F, 0.728999972F), new Vector2(-1.95899999F, 0.469000012F), new Vector2(-1.84399998F, 0.218999997F));
                    builder.AddCubicBezier(new Vector2(-1.72899997F, -0.0309999995F), new Vector2(-1.58299994F, -0.245000005F), new Vector2(-1.40600002F, -0.421999991F));
                    builder.AddCubicBezier(new Vector2(-1.22899997F, -0.598999977F), new Vector2(-1.02100003F, -0.74000001F), new Vector2(-0.781000018F, -0.843999982F));
                    builder.AddCubicBezier(new Vector2(-0.541000009F, -0.948000014F), new Vector2(-0.280999988F, -1F), new Vector2(0F, -1F));
                    builder.AddCubicBezier(new Vector2(0.270999998F, -1F), new Vector2(0.531000018F, -0.948000014F), new Vector2(0.781000018F, -0.843999982F));
                    builder.AddCubicBezier(new Vector2(1.03100002F, -0.74000001F), new Vector2(1.245F, -0.593999982F), new Vector2(1.42200005F, -0.405999988F));
                    builder.AddCubicBezier(new Vector2(1.59899998F, -0.217999995F), new Vector2(1.74000001F, -0.00600000005F), new Vector2(1.84399998F, 0.233999997F));
                    builder.AddCubicBezier(new Vector2(1.94799995F, 0.474000007F), new Vector2(2F, 0.728999972F), new Vector2(2F, 1F));
                    builder.AddCubicBezier(new Vector2(2F, 1F), new Vector2(2F, 3.49900007F), new Vector2(2F, 3.49900007F));
                    builder.AddCubicBezier(new Vector2(2F, 3.49900007F), new Vector2(4F, 3.49900007F), new Vector2(4F, 3.49900007F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // Color bound to theme property value: Foreground
            CompositionColorBrush ThemeColor_Foreground()
            {
                var result = _themeColor_Foreground = _c.CreateColorBrush();
                BindProperty(result, "Color", "ColorRGB(_theme.Foreground.W*1,_theme.Foreground.X,_theme.Foreground.Y,_theme.Foreground.Z)", "_theme", _themeProperties);
                return result;
            }

            // PreComp layer: Asset - AnimIcon - Action Center - RotationLock - Tagged
            CompositionContainerShape ContainerShape_0()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(120F, 0F);
                result.Offset = new Vector2(-70F, 50F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 1
                shapes.Add(SpriteShape_0());
                // Transforms: Layer 4
                shapes.Add(SpriteShape_1());
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0(), _rootProgress);
                return result;
            }

            // PreComp layer: Asset - AnimIcon - Action Center - RotationLock - Tagged
            CompositionContainerShape ContainerShape_1()
            {
                var result = _c.CreateContainerShape();
                var shapes = result.Shapes;
                // ShapeGroup: Group 1
                shapes.Add(SpriteShape_2());
                // ShapeGroup: Group 1
                shapes.Add(SpriteShape_3());
                // Transforms: Layer 3
                shapes.Add(SpriteShape_4());
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_1(), _rootProgress);
                return result;
            }

            CompositionPath Path_00()
            {
                var result = _path_00 = new CompositionPath(Geometry_00());
                return result;
            }

            CompositionPath Path_01()
            {
                var result = _path_01 = new CompositionPath(Geometry_01());
                return result;
            }

            CompositionPath Path_02()
            {
                var result = _path_02 = new CompositionPath(Geometry_03());
                return result;
            }

            CompositionPath Path_03()
            {
                var result = _path_03 = new CompositionPath(Geometry_04());
                return result;
            }

            CompositionPath Path_04()
            {
                var result = _path_04 = new CompositionPath(Geometry_05());
                return result;
            }

            CompositionPath Path_05()
            {
                var result = _path_05 = new CompositionPath(Geometry_06());
                return result;
            }

            CompositionPath Path_06()
            {
                var result = _path_06 = new CompositionPath(Geometry_07());
                return result;
            }

            CompositionPath Path_07()
            {
                var result = _path_07 = new CompositionPath(Geometry_08());
                return result;
            }

            CompositionPath Path_08()
            {
                var result = _path_08 = new CompositionPath(Geometry_09());
                return result;
            }

            CompositionPath Path_09()
            {
                var result = _path_09 = new CompositionPath(Geometry_10());
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - RotationLock - Tagged
            // ShapeGroup: Group 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_0()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_0(), RootProgress());
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - RotationLock - Tagged
            // Transforms: Layer 4
            // Path 2.PathGeometry
            CompositionPathGeometry PathGeometry_1()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_1(), _rootProgress);
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - RotationLock - Tagged
            // ShapeGroup: Group 1
            // Path 5.PathGeometry
            CompositionPathGeometry PathGeometry_2()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_2(), _rootProgress);
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - RotationLock - Tagged
            // ShapeGroup: Group 1
            // Path 3.PathGeometry
            CompositionPathGeometry PathGeometry_3()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_3(), _rootProgress);
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - RotationLock - Tagged
            // Transforms: Layer 3
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_4()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_4(), _rootProgress);
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - RotationLock - Tagged
            // Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                var result = _c.CreateSpriteShape(PathGeometry_0());
                result.FillBrush = ThemeColor_Foreground();
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - RotationLock - Tagged
            // Path 2
            CompositionSpriteShape SpriteShape_1()
            {
                var result = _c.CreateSpriteShape(PathGeometry_1());
                result.FillBrush = _themeColor_Foreground;
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - RotationLock - Tagged
            // Path 5
            CompositionSpriteShape SpriteShape_2()
            {
                var result = _c.CreateSpriteShape(PathGeometry_2());
                result.FillBrush = _themeColor_Foreground;
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - RotationLock - Tagged
            // Path 3
            CompositionSpriteShape SpriteShape_3()
            {
                var result = _c.CreateSpriteShape(PathGeometry_3());
                result.FillBrush = _themeColor_Foreground;
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - RotationLock - Tagged
            // Path 1
            CompositionSpriteShape SpriteShape_4()
            {
                var result = _c.CreateSpriteShape(PathGeometry_4());
                result.CenterPoint = new Vector2(0F, 3F);
                result.Scale = new Vector2(2.50699997F, 2.50699997F);
                result.FillBrush = _themeColor_Foreground;
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_0(), _rootProgress);
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                propertySet.InsertScalar("t0", 0F);
                // PreComp layer: Asset - AnimIcon - Action Center - RotationLock - Tagged
                result.Children.InsertAtTop(ShapeVisual_0());
                StartProgressBoundAnimation(propertySet, "t0", t0ScalarAnimation_0_to_1(), _rootProgress);
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.850000024F, 0F), new Vector2(0F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_2()
            {
                return _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction(new Vector2(0.850000024F, 0F), new Vector2(0.75F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_3()
            {
                return _cubicBezierEasingFunction_3 = _c.CreateCubicBezierEasingFunction(new Vector2(0.349999994F, 0F), new Vector2(0F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_4()
            {
                return _cubicBezierEasingFunction_4 = _c.CreateCubicBezierEasingFunction(new Vector2(0.850000024F, 0.850000024F), new Vector2(0F, 0F));
            }

            ExpressionAnimation RootProgress()
            {
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // - - - PreComp layer: Asset - AnimIcon - Action Center - RotationLock - Tagged
            // - ShapeGroup: Group 1
            // Path 1.PathGeometry
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_0()
            {
                var result = CreatePathKeyFrameAnimation(0F, Path_00(), HoldThenStepEasingFunction());
                result.InsertKeyFrame(0.483333319F, Path_01(), CubicBezierEasingFunction_0());
                result.InsertKeyFrame(0.5F, _path_01, CubicBezierEasingFunction_1());
                result.InsertKeyFrame(0.666666687F, new CompositionPath(Geometry_02()), CubicBezierEasingFunction_2());
                result.InsertKeyFrame(0.983333349F, _path_00, CubicBezierEasingFunction_3());
                return result;
            }

            // - - - PreComp layer: Asset - AnimIcon - Action Center - RotationLock - Tagged
            // - Transforms: Layer 4
            // Path 2.PathGeometry
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_1()
            {
                var result = CreatePathKeyFrameAnimation(0F, Path_02(), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.483333319F, Path_03(), _cubicBezierEasingFunction_0);
                result.InsertKeyFrame(0.5F, _path_03, _cubicBezierEasingFunction_1);
                result.InsertKeyFrame(0.666666687F, _path_02, _cubicBezierEasingFunction_2);
                return result;
            }

            // - - - PreComp layer: Asset - AnimIcon - Action Center - RotationLock - Tagged
            // - ShapeGroup: Group 1
            // Path 5.PathGeometry
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_2()
            {
                var result = CreatePathKeyFrameAnimation(0F, Path_04(), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.483333319F, Path_05(), _cubicBezierEasingFunction_0);
                result.InsertKeyFrame(0.5F, _path_05, _cubicBezierEasingFunction_1);
                result.InsertKeyFrame(0.666666687F, _path_04, _cubicBezierEasingFunction_2);
                return result;
            }

            // - - - PreComp layer: Asset - AnimIcon - Action Center - RotationLock - Tagged
            // - ShapeGroup: Group 1
            // Path 3.PathGeometry
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_3()
            {
                var result = CreatePathKeyFrameAnimation(0F, Path_06(), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.483333319F, Path_07(), _cubicBezierEasingFunction_0);
                result.InsertKeyFrame(0.5F, _path_07, _cubicBezierEasingFunction_1);
                result.InsertKeyFrame(0.666666687F, _path_06, _cubicBezierEasingFunction_2);
                return result;
            }

            // - - - PreComp layer: Asset - AnimIcon - Action Center - RotationLock - Tagged
            // - Transforms: Layer 3
            // Path 1.PathGeometry
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_4()
            {
                var result = CreatePathKeyFrameAnimation(0F, Path_08(), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.483333319F, Path_09(), _cubicBezierEasingFunction_0);
                result.InsertKeyFrame(0.5F, _path_09, _cubicBezierEasingFunction_1);
                result.InsertKeyFrame(0.666666687F, _path_08, _cubicBezierEasingFunction_1);
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - RotationLock - Tagged
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0()
            {
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.483333319F, -55.9000015F, _cubicBezierEasingFunction_0);
                result.InsertKeyFrame(0.5F, -55.9000015F, _cubicBezierEasingFunction_1);
                result.InsertKeyFrame(0.666666687F, 10.1000004F, _cubicBezierEasingFunction_2);
                result.InsertKeyFrame(0.983333349F, 0F, _cubicBezierEasingFunction_3);
                return result;
            }

            ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
            {
                var result = CreateScalarKeyFrameAnimation(0.666666746F, 0F, _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                result.InsertKeyFrame(0.98333329F, 1F, _cubicBezierEasingFunction_3);
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(100F, 100F);
                // Offset:<-2, -2>, Scale:<0.2, 0.2>
                result.TransformMatrix = new Matrix4x4(0.200000003F, 0F, 0F, 0F, 0F, 0.200000003F, 0F, 0F, 0F, 0F, 0F, 0F, -2F, -2F, 0F, 1F);
                var shapes = result.Shapes;
                shapes.Add(ContainerShape_0());
                shapes.Add(ContainerShape_1());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - RotationLock - Tagged
            // Transforms: Layer 3
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_0()
            {
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(130F, 12.0220003F), _holdThenStepEasingFunction);
                result.SetReferenceParameter("_", _root);
                result.InsertKeyFrame(0.483333319F, new Vector2(130F, -5.47800016F), _cubicBezierEasingFunction_0);
                result.InsertKeyFrame(0.5F, new Vector2(130F, -5.47800016F), CubicBezierEasingFunction_4());
                result.InsertKeyFrame(0.666666687F, new Vector2(130F, 14.5220003F), _cubicBezierEasingFunction_2);
                result.InsertExpressionKeyFrame(0.98333329F, "(Pow(1-_.t0,3)*Vector2(130,14.522))+(3*Square(1-_.t0)*_.t0*Vector2(130,17.439))+(3*(1-_.t0)*Square(_.t0)*Vector2(130,12.439))+(Pow(_.t0,3)*Vector2(130,12.022))", StepThenHoldEasingFunction());
                result.InsertKeyFrame(0.983333349F, new Vector2(130F, 12.0220003F), _stepThenHoldEasingFunction);
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - RotationLock - Tagged
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_1()
            {
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(-70F, 50F), _holdThenStepEasingFunction);
                result.SetReferenceParameter("_", _root);
                result.InsertKeyFrame(0.483333319F, new Vector2(-70F, 47.5F), _cubicBezierEasingFunction_0);
                result.InsertKeyFrame(0.5F, new Vector2(-70F, 47.5F), _cubicBezierEasingFunction_4);
                result.InsertKeyFrame(0.666666687F, new Vector2(-70F, 57.5F), _cubicBezierEasingFunction_2);
                result.InsertExpressionKeyFrame(0.98333329F, "(Pow(1-_.t0,3)*Vector2(-70,57.5))+(3*Square(1-_.t0)*_.t0*Vector2(-70,57.917))+(3*(1-_.t0)*Square(_.t0)*Vector2(-70,51.25))+(Pow(_.t0,3)*Vector2(-70,50))", _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.983333349F, new Vector2(-70F, 50F), _stepThenHoldEasingFunction);
                return result;
            }

            internal AnimatedVisual(
                Compositor compositor,
                CompositionPropertySet themeProperties
                )
            {
                _c = compositor;
                _themeProperties = themeProperties;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(16F, 16F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 7);
            }
        }
    }
}
