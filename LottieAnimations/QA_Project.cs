//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           6.1.0-build.109+gebc2a6a0a3
//       
//       Command:
//           LottieGen -MinimumUapVersion 11 -Namespace WindowsInternal.ComposableShell.Experiences -Interface ILottieVisual -Language CSharp -InputFile QA_Project.json
//       
//       Input file:
//           QA_Project.json (16689 bytes created 10:10-07:00 Mar 30 2020)
//       
//       Invoked on:
//           SIM10FRESH @ 17:59-07:00 Apr 1 2020
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |   149 |
// |--------------------------+-------|
// | Animators                |    37 |
// | Animated brushes         |     1 |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     2 |
// | PathKeyFrameAnimations   |     1 |
// |--------------------------+-------|
// | ContainerVisuals         |     5 |
// | ShapeVisuals             |     3 |
// |--------------------------+-------|
// | ContainerShapes          |     5 |
// | CompositionSpriteShapes  |     5 |
// |--------------------------+-------|
// | Brushes                  |     5 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |     2 |
// ------------------------------------
using Microsoft.Graphics.Canvas;
using Microsoft.Graphics.Canvas.Effects;
using Microsoft.Graphics.Canvas.Geometry;
using System;
using System.Numerics;
using Windows.UI;
using Windows.UI.Composition;

namespace AnimatedIconPrototype
{
    // Name:        QA_Project
    // Frame rate:  60 fps
    // Frame count: 60
    // Duration:    1000.0 mS
    // ____________________________________________
    // | Theme property | Type  |  Default value  |
    // |________________|_______|_________________|
    // | Foreground     | Color | #FF000000 Black |
    // --------------------------------------------
    sealed class QA_Project : ILottieVisualSource
    {
        // Animation duration: 1.000 seconds.
        internal const long c_durationTicks = 10000000;

        // Theme property: Foreground.
        internal static readonly Color c_themeForeground = Color.FromArgb(0xFF, 0x00, 0x00, 0x00);

        CompositionPropertySet _themeProperties;
        Color _themeForeground = c_themeForeground;

        // Theme properties.
        public Color Foreground
        {
            get => _themeForeground;
            set
            {
                _themeForeground = value;
                if (_themeProperties != null)
                {
                    _themeProperties.InsertVector4("Foreground", ColorAsVector4((Color)_themeForeground));
                }
            }
        }

        public CompositionPropertySet GetThemeProperties(Compositor compositor)
        {
            return EnsureThemeProperties(compositor);
        }

        internal static Vector4 ColorAsVector4(Color color) => new Vector4(color.R, color.G, color.B, color.A);

        CompositionPropertySet EnsureThemeProperties(Compositor compositor)
        {
            if (_themeProperties is null)
            {
                _themeProperties = compositor.CreatePropertySet();
                _themeProperties.InsertVector4("Foreground", ColorAsVector4((Color)Foreground));
            }
            return _themeProperties;
        }

        public ILottieVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;
            EnsureThemeProperties(compositor);

            if (AnimatedVisual.IsRuntimeCompatible())
            {
                return
                    new AnimatedVisual(
                        compositor,
                        _themeProperties
                        );
            }

            return null;
        }

        sealed class AnimatedVisual : ILottieVisual
        {
            const long c_durationTicks = 10000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            readonly CompositionPropertySet _themeProperties;
            CompositionColorBrush _themeColor_Foreground;
            CompositionRectangleGeometry _rectangle_39p881x22p713;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            CubicBezierEasingFunction _cubicBezierEasingFunction_2;
            CubicBezierEasingFunction _cubicBezierEasingFunction_3;
            CubicBezierEasingFunction _cubicBezierEasingFunction_4;
            CubicBezierEasingFunction _cubicBezierEasingFunction_5;
            ExpressionAnimation _rootProgress;
            InsetClip _insetClip_0;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;
            Vector2KeyFrameAnimation _offsetVector2Animation_1;
            Vector2KeyFrameAnimation _offsetVector2Animation_2;
            Vector2KeyFrameAnimation _scaleVector2Animation_2;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            BooleanKeyFrameAnimation CreateBooleanKeyFrameAnimation(float initialProgress, bool initialValue)
            {
                var result = _c.CreateBooleanKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue);
                return result;
            }

            PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector3KeyFrameAnimation CreateVector3KeyFrameAnimation(float initialProgress, Vector3 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector3KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            BooleanKeyFrameAnimation IsVisibleBooleanAnimation_0()
            {
                var result = CreateBooleanKeyFrameAnimation(0.183333337F, true);
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            BooleanKeyFrameAnimation IsVisibleBooleanAnimation_1()
            {
                var result = CreateBooleanKeyFrameAnimation(0.183333337F, true);
                return result;
            }

            // - - - - - - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - - - Masks
            // - - - Layer: Shape Layer 2 Comp 1
            // - - Transforms: Shape Layer 2 Comp 1 Scale:0.87, Offset:<-47.947998, -57>
            CanvasGeometry Geometry_00()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(99.6529999F, 25.132F));
                    builder.AddLine(new Vector2(1.37699997F, 25.132F));
                    builder.AddLine(new Vector2(1.37699997F, 76.7200012F));
                    builder.AddLine(new Vector2(22.2099991F, 76.7200012F));
                    builder.AddLine(new Vector2(22.2539997F, 53.9679985F));
                    builder.AddLine(new Vector2(75.1269989F, 53.9679985F));
                    builder.AddLine(new Vector2(75.2269974F, 76.9840012F));
                    builder.AddLine(new Vector2(99.6529999F, 76.9840012F));
                    builder.AddLine(new Vector2(99.6529999F, 25.132F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - - ShapeGroup: Group 1
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_01()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(8.16399956F, 10.0609999F));
                    builder.AddCubicBezier(new Vector2(8.16399956F, 10.0609999F), new Vector2(34.987999F, 10.0240002F), new Vector2(34.987999F, 10.0240002F));
                    builder.AddCubicBezier(new Vector2(34.987999F, 10.0240002F), new Vector2(34.987999F, -25.0610008F), new Vector2(34.987999F, -25.0610008F));
                    builder.AddCubicBezier(new Vector2(34.987999F, -25.0610008F), new Vector2(-15.1350002F, -25.0610008F), new Vector2(-15.1350002F, -25.0610008F));
                    builder.AddCubicBezier(new Vector2(-15.1350002F, -25.0610008F), new Vector2(-15.1440001F, -9.37100029F), new Vector2(-15.1440001F, -9.37100029F));
                    builder.AddCubicBezier(new Vector2(-15.1440001F, -9.37100029F), new Vector2(-15.1440001F, -9.21000004F), new Vector2(-15.1440001F, -9.21000004F));
                    builder.AddCubicBezier(new Vector2(-15.1440001F, -9.21000004F), new Vector2(-15.1440001F, -8.63199997F), new Vector2(-15.1440001F, -8.63199997F));
                    builder.AddCubicBezier(new Vector2(-15.1440001F, -8.63199997F), new Vector2(-15.1440001F, -8.51200008F), new Vector2(-15.1440001F, -8.51200008F));
                    builder.AddCubicBezier(new Vector2(-15.1440001F, -8.51200008F), new Vector2(-20.1560001F, -8.51200008F), new Vector2(-20.1560001F, -8.51200008F));
                    builder.AddCubicBezier(new Vector2(-20.1560001F, -8.51200008F), new Vector2(-20.1469994F, -30.073F), new Vector2(-20.1469994F, -30.073F));
                    builder.AddCubicBezier(new Vector2(-20.1469994F, -30.073F), new Vector2(40F, -30.073F), new Vector2(40F, -30.073F));
                    builder.AddCubicBezier(new Vector2(40F, -30.073F), new Vector2(40F, 15.0369997F), new Vector2(40F, 15.0369997F));
                    builder.AddCubicBezier(new Vector2(40F, 15.0369997F), new Vector2(8.16399956F, 15.073F), new Vector2(8.16399956F, 15.073F));
                    builder.AddCubicBezier(new Vector2(8.16399956F, 15.073F), new Vector2(8.16399956F, 10.0609999F), new Vector2(8.16399956F, 10.0609999F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - - ShapeGroup: Group 1
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_02()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(6.72900009F, 11.9540005F));
                    builder.AddCubicBezier(new Vector2(6.72900009F, 11.9540005F), new Vector2(34.9949989F, 11.9379997F), new Vector2(34.9949989F, 11.9379997F));
                    builder.AddCubicBezier(new Vector2(34.9949989F, 11.9379997F), new Vector2(35.0559998F, -26.0179996F), new Vector2(35.0559998F, -26.0179996F));
                    builder.AddCubicBezier(new Vector2(35.0559998F, -26.0179996F), new Vector2(-19.7779999F, -26.0289993F), new Vector2(-19.7779999F, -26.0289993F));
                    builder.AddCubicBezier(new Vector2(-19.7779999F, -26.0289993F), new Vector2(-19.8859997F, -8.03600025F), new Vector2(-19.8859997F, -8.03600025F));
                    builder.AddCubicBezier(new Vector2(-19.8859997F, -8.03600025F), new Vector2(-19.8959999F, -7.90799999F), new Vector2(-19.8959999F, -7.90799999F));
                    builder.AddCubicBezier(new Vector2(-19.8959999F, -7.90799999F), new Vector2(-19.9249992F, -6.03299999F), new Vector2(-19.9249992F, -6.03299999F));
                    builder.AddCubicBezier(new Vector2(-19.9249992F, -6.03299999F), new Vector2(-19.8549995F, -5.95200014F), new Vector2(-19.8549995F, -5.95200014F));
                    builder.AddCubicBezier(new Vector2(-19.8549995F, -5.95200014F), new Vector2(-24.8700008F, -5.95200014F), new Vector2(-24.8700008F, -5.95200014F));
                    builder.AddCubicBezier(new Vector2(-24.8700008F, -5.95200014F), new Vector2(-24.7900009F, -31.0410004F), new Vector2(-24.7900009F, -31.0410004F));
                    builder.AddCubicBezier(new Vector2(-24.7900009F, -31.0410004F), new Vector2(40.0680008F, -31.0300007F), new Vector2(40.0680008F, -31.0300007F));
                    builder.AddCubicBezier(new Vector2(40.0680008F, -31.0300007F), new Vector2(40.007F, 16.9500008F), new Vector2(40.007F, 16.9500008F));
                    builder.AddCubicBezier(new Vector2(40.007F, 16.9500008F), new Vector2(6.72900009F, 16.9659996F), new Vector2(6.72900009F, 16.9659996F));
                    builder.AddCubicBezier(new Vector2(6.72900009F, 16.9659996F), new Vector2(6.72900009F, 11.9540005F), new Vector2(6.72900009F, 11.9540005F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - - ShapeGroup: Group 1
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_03()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(7.79400015F, 13.8459997F));
                    builder.AddCubicBezier(new Vector2(7.79400015F, 13.8459997F), new Vector2(35.0029984F, 13.8520002F), new Vector2(35.0029984F, 13.8520002F));
                    builder.AddCubicBezier(new Vector2(35.0029984F, 13.8520002F), new Vector2(35.1240005F, -26.9750004F), new Vector2(35.1240005F, -26.9750004F));
                    builder.AddCubicBezier(new Vector2(35.1240005F, -26.9750004F), new Vector2(-24.4200001F, -26.9969997F), new Vector2(-24.4200001F, -26.9969997F));
                    builder.AddCubicBezier(new Vector2(-24.4200001F, -26.9969997F), new Vector2(-24.6240005F, -9.69999981F), new Vector2(-24.6240005F, -9.69999981F));
                    builder.AddCubicBezier(new Vector2(-24.6240005F, -9.69999981F), new Vector2(-24.6450005F, -9.60499954F), new Vector2(-24.6450005F, -9.60499954F));
                    builder.AddCubicBezier(new Vector2(-24.6450005F, -9.60499954F), new Vector2(-24.7040005F, -6.43499994F), new Vector2(-24.7040005F, -6.43499994F));
                    builder.AddCubicBezier(new Vector2(-24.7040005F, -6.43499994F), new Vector2(-24.5620003F, -6.3920002F), new Vector2(-24.5620003F, -6.3920002F));
                    builder.AddCubicBezier(new Vector2(-24.5620003F, -6.3920002F), new Vector2(-29.5809994F, -6.3920002F), new Vector2(-29.5809994F, -6.3920002F));
                    builder.AddCubicBezier(new Vector2(-29.5809994F, -6.3920002F), new Vector2(-29.4330006F, -32.0089989F), new Vector2(-29.4330006F, -32.0089989F));
                    builder.AddCubicBezier(new Vector2(-29.4330006F, -32.0089989F), new Vector2(40.1360016F, -31.9869995F), new Vector2(40.1360016F, -31.9869995F));
                    builder.AddCubicBezier(new Vector2(40.1360016F, -31.9869995F), new Vector2(40.0149994F, 18.8640003F), new Vector2(40.0149994F, 18.8640003F));
                    builder.AddCubicBezier(new Vector2(40.0149994F, 18.8640003F), new Vector2(7.79400015F, 18.8579998F), new Vector2(7.79400015F, 18.8579998F));
                    builder.AddCubicBezier(new Vector2(7.79400015F, 18.8579998F), new Vector2(7.79400015F, 13.8459997F), new Vector2(7.79400015F, 13.8459997F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - - ShapeGroup: Group 1
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_04()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(12.6960001F, 15.1199999F));
                    builder.AddCubicBezier(new Vector2(12.6960001F, 15.1199999F), new Vector2(38.3129997F, 15.0810003F), new Vector2(38.3129997F, 15.0810003F));
                    builder.AddCubicBezier(new Vector2(38.3129997F, 15.0810003F), new Vector2(38.4729996F, -27.5890007F), new Vector2(38.4729996F, -27.5890007F));
                    builder.AddCubicBezier(new Vector2(38.4729996F, -27.5890007F), new Vector2(-30.3910007F, -27.6119995F), new Vector2(-30.3910007F, -27.6119995F));
                    builder.AddCubicBezier(new Vector2(-30.3910007F, -27.6119995F), new Vector2(-30.6009998F, 2.35400009F), new Vector2(-30.6009998F, 2.35400009F));
                    builder.AddCubicBezier(new Vector2(-30.6009998F, 2.35400009F), new Vector2(-29.5160007F, 2.47000003F), new Vector2(-29.5160007F, 2.47000003F));
                    builder.AddCubicBezier(new Vector2(-29.5160007F, 2.47000003F), new Vector2(-29.5930004F, 6.47300005F), new Vector2(-29.5930004F, 6.47300005F));
                    builder.AddCubicBezier(new Vector2(-29.5930004F, 6.47300005F), new Vector2(-30.5189991F, 6.44700003F), new Vector2(-30.5189991F, 6.44700003F));
                    builder.AddCubicBezier(new Vector2(-30.5189991F, 6.44700003F), new Vector2(-35.5400009F, 6.44700003F), new Vector2(-35.5400009F, 6.44700003F));
                    builder.AddCubicBezier(new Vector2(-35.5400009F, 6.44700003F), new Vector2(-35.4039993F, -32.6240005F), new Vector2(-35.4039993F, -32.6240005F));
                    builder.AddCubicBezier(new Vector2(-35.4039993F, -32.6240005F), new Vector2(43.4850006F, -32.6020012F), new Vector2(43.4850006F, -32.6020012F));
                    builder.AddCubicBezier(new Vector2(43.4850006F, -32.6020012F), new Vector2(43.3250008F, 20.0930004F), new Vector2(43.3250008F, 20.0930004F));
                    builder.AddCubicBezier(new Vector2(43.3250008F, 20.0930004F), new Vector2(12.6960001F, 20.132F), new Vector2(12.6960001F, 20.132F));
                    builder.AddCubicBezier(new Vector2(12.6960001F, 20.132F), new Vector2(12.6960001F, 15.1199999F), new Vector2(12.6960001F, 15.1199999F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - - ShapeGroup: Group 1
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_05()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(17.5979996F, 16.3939991F));
                    builder.AddCubicBezier(new Vector2(17.5979996F, 16.3939991F), new Vector2(41.6230011F, 16.3099995F), new Vector2(41.6230011F, 16.3099995F));
                    builder.AddCubicBezier(new Vector2(41.6230011F, 16.3099995F), new Vector2(41.8219986F, -28.2040005F), new Vector2(41.8219986F, -28.2040005F));
                    builder.AddCubicBezier(new Vector2(41.8219986F, -28.2040005F), new Vector2(-36.3619995F, -28.2269993F), new Vector2(-36.3619995F, -28.2269993F));
                    builder.AddCubicBezier(new Vector2(-36.3619995F, -28.2269993F), new Vector2(-36.5779991F, 14.4069996F), new Vector2(-36.5779991F, 14.4069996F));
                    builder.AddCubicBezier(new Vector2(-36.5779991F, 14.4069996F), new Vector2(-25.8859997F, 14.3219995F), new Vector2(-25.8859997F, 14.3219995F));
                    builder.AddCubicBezier(new Vector2(-25.8859997F, 14.3219995F), new Vector2(-25.9820004F, 19.1569996F), new Vector2(-25.9820004F, 19.1569996F));
                    builder.AddCubicBezier(new Vector2(-25.9820004F, 19.1569996F), new Vector2(-36.4749985F, 19.2870007F), new Vector2(-36.4749985F, 19.2870007F));
                    builder.AddCubicBezier(new Vector2(-36.4749985F, 19.2870007F), new Vector2(-41.4990005F, 19.2870007F), new Vector2(-41.4990005F, 19.2870007F));
                    builder.AddCubicBezier(new Vector2(-41.4990005F, 19.2870007F), new Vector2(-41.3740005F, -33.2389984F), new Vector2(-41.3740005F, -33.2389984F));
                    builder.AddCubicBezier(new Vector2(-41.3740005F, -33.2389984F), new Vector2(46.8339996F, -33.2159996F), new Vector2(46.8339996F, -33.2159996F));
                    builder.AddCubicBezier(new Vector2(46.8339996F, -33.2159996F), new Vector2(46.6349983F, 21.3220005F), new Vector2(46.6349983F, 21.3220005F));
                    builder.AddCubicBezier(new Vector2(46.6349983F, 21.3220005F), new Vector2(17.5979996F, 21.4069996F), new Vector2(17.5979996F, 21.4069996F));
                    builder.AddCubicBezier(new Vector2(17.5979996F, 21.4069996F), new Vector2(17.5979996F, 16.3939991F), new Vector2(17.5979996F, 16.3939991F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - - ShapeGroup: Group 1
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_06()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(27.9459991F, 16.559F));
                    builder.AddCubicBezier(new Vector2(27.9459991F, 16.559F), new Vector2(42.1669998F, 16.5119991F), new Vector2(42.1669998F, 16.5119991F));
                    builder.AddCubicBezier(new Vector2(42.1669998F, 16.5119991F), new Vector2(42.3720016F, -28.3050003F), new Vector2(42.3720016F, -28.3050003F));
                    builder.AddCubicBezier(new Vector2(42.3720016F, -28.3050003F), new Vector2(-37.3419991F, -28.3279991F), new Vector2(-37.3419991F, -28.3279991F));
                    builder.AddCubicBezier(new Vector2(-37.3419991F, -28.3279991F), new Vector2(-37.5589981F, 16.3859997F), new Vector2(-37.5589981F, 16.3859997F));
                    builder.AddCubicBezier(new Vector2(-37.5589981F, 16.3859997F), new Vector2(-19.2689991F, 16.3880005F), new Vector2(-19.2689991F, 16.3880005F));
                    builder.AddCubicBezier(new Vector2(-19.2689991F, 16.3880005F), new Vector2(-19.368F, 21.3600006F), new Vector2(-19.368F, 21.3600006F));
                    builder.AddCubicBezier(new Vector2(-19.368F, 21.3600006F), new Vector2(-37.4529991F, 21.3950005F), new Vector2(-37.4529991F, 21.3950005F));
                    builder.AddCubicBezier(new Vector2(-37.4529991F, 21.3950005F), new Vector2(-42.4770012F, 21.3950005F), new Vector2(-42.4770012F, 21.3950005F));
                    builder.AddCubicBezier(new Vector2(-42.4770012F, 21.3950005F), new Vector2(-42.3549995F, -33.3400002F), new Vector2(-42.3549995F, -33.3400002F));
                    builder.AddCubicBezier(new Vector2(-42.3549995F, -33.3400002F), new Vector2(47.3839989F, -33.3170013F), new Vector2(47.3839989F, -33.3170013F));
                    builder.AddCubicBezier(new Vector2(47.3839989F, -33.3170013F), new Vector2(47.1790009F, 21.5240002F), new Vector2(47.1790009F, 21.5240002F));
                    builder.AddCubicBezier(new Vector2(47.1790009F, 21.5240002F), new Vector2(27.9459991F, 21.5709991F), new Vector2(27.9459991F, 21.5709991F));
                    builder.AddCubicBezier(new Vector2(27.9459991F, 21.5709991F), new Vector2(27.9459991F, 16.559F), new Vector2(27.9459991F, 16.559F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - - ShapeGroup: Group 1
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_07()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(32.3149986F, 16.5310001F));
                    builder.AddCubicBezier(new Vector2(32.3149986F, 16.5310001F), new Vector2(42.2010002F, 16.5240002F), new Vector2(42.2010002F, 16.5240002F));
                    builder.AddCubicBezier(new Vector2(42.2010002F, 16.5240002F), new Vector2(42.4059982F, -28.3110008F), new Vector2(42.4059982F, -28.3110008F));
                    builder.AddCubicBezier(new Vector2(42.4059982F, -28.3110008F), new Vector2(-37.4039993F, -28.3339996F), new Vector2(-37.4039993F, -28.3339996F));
                    builder.AddCubicBezier(new Vector2(-37.4039993F, -28.3339996F), new Vector2(-37.6199989F, 16.5100002F), new Vector2(-37.6199989F, 16.5100002F));
                    builder.AddCubicBezier(new Vector2(-37.6199989F, 16.5100002F), new Vector2(-15.665F, 16.4589996F), new Vector2(-15.665F, 16.4589996F));
                    builder.AddCubicBezier(new Vector2(-15.665F, 16.4589996F), new Vector2(-15.7639999F, 21.4400005F), new Vector2(-15.7639999F, 21.4400005F));
                    builder.AddCubicBezier(new Vector2(-15.7639999F, 21.4400005F), new Vector2(-37.5139999F, 21.5270004F), new Vector2(-37.5139999F, 21.5270004F));
                    builder.AddCubicBezier(new Vector2(-37.5139999F, 21.5270004F), new Vector2(-42.5390015F, 21.5270004F), new Vector2(-42.5390015F, 21.5270004F));
                    builder.AddCubicBezier(new Vector2(-42.5390015F, 21.5270004F), new Vector2(-42.4160004F, -33.3470001F), new Vector2(-42.4160004F, -33.3470001F));
                    builder.AddCubicBezier(new Vector2(-42.4160004F, -33.3470001F), new Vector2(47.4179993F, -33.3230019F), new Vector2(47.4179993F, -33.3230019F));
                    builder.AddCubicBezier(new Vector2(47.4179993F, -33.3230019F), new Vector2(47.2130013F, 21.5370007F), new Vector2(47.2130013F, 21.5370007F));
                    builder.AddCubicBezier(new Vector2(47.2130013F, 21.5370007F), new Vector2(32.3149986F, 21.5440006F), new Vector2(32.3149986F, 21.5440006F));
                    builder.AddCubicBezier(new Vector2(32.3149986F, 21.5440006F), new Vector2(32.3149986F, 16.5310001F), new Vector2(32.3149986F, 16.5310001F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - - ShapeGroup: Group 1
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_08()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(28.3619995F, 16.4780006F));
                    builder.AddCubicBezier(new Vector2(28.3619995F, 16.4780006F), new Vector2(42.2010002F, 16.5240002F), new Vector2(42.2010002F, 16.5240002F));
                    builder.AddCubicBezier(new Vector2(42.2010002F, 16.5240002F), new Vector2(42.4059982F, -28.3110008F), new Vector2(42.4059982F, -28.3110008F));
                    builder.AddCubicBezier(new Vector2(42.4059982F, -28.3110008F), new Vector2(-37.4039993F, -28.3339996F), new Vector2(-37.4039993F, -28.3339996F));
                    builder.AddCubicBezier(new Vector2(-37.4039993F, -28.3339996F), new Vector2(-37.6199989F, 16.5100002F), new Vector2(-37.6199989F, 16.5100002F));
                    builder.AddCubicBezier(new Vector2(-37.6199989F, 16.5100002F), new Vector2(-19.5380001F, 16.4020004F), new Vector2(-19.5380001F, 16.4020004F));
                    builder.AddCubicBezier(new Vector2(-19.5380001F, 16.4020004F), new Vector2(-19.6369991F, 21.3829994F), new Vector2(-19.6369991F, 21.3829994F));
                    builder.AddCubicBezier(new Vector2(-19.6369991F, 21.3829994F), new Vector2(-37.5139999F, 21.5270004F), new Vector2(-37.5139999F, 21.5270004F));
                    builder.AddCubicBezier(new Vector2(-37.5139999F, 21.5270004F), new Vector2(-42.5390015F, 21.5270004F), new Vector2(-42.5390015F, 21.5270004F));
                    builder.AddCubicBezier(new Vector2(-42.5390015F, 21.5270004F), new Vector2(-42.4160004F, -33.3470001F), new Vector2(-42.4160004F, -33.3470001F));
                    builder.AddCubicBezier(new Vector2(-42.4160004F, -33.3470001F), new Vector2(47.4179993F, -33.3230019F), new Vector2(47.4179993F, -33.3230019F));
                    builder.AddCubicBezier(new Vector2(47.4179993F, -33.3230019F), new Vector2(47.2130013F, 21.5370007F), new Vector2(47.2130013F, 21.5370007F));
                    builder.AddCubicBezier(new Vector2(47.2130013F, 21.5370007F), new Vector2(28.3619995F, 21.4909992F), new Vector2(28.3619995F, 21.4909992F));
                    builder.AddCubicBezier(new Vector2(28.3619995F, 21.4909992F), new Vector2(28.3619995F, 16.4780006F), new Vector2(28.3619995F, 16.4780006F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - - ShapeGroup: Group 1
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_09()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(26.9400005F, 16.6350002F));
                    builder.AddCubicBezier(new Vector2(26.9400005F, 16.6350002F), new Vector2(42.2010002F, 16.5240002F), new Vector2(42.2010002F, 16.5240002F));
                    builder.AddCubicBezier(new Vector2(42.2010002F, 16.5240002F), new Vector2(42.4059982F, -28.3110008F), new Vector2(42.4059982F, -28.3110008F));
                    builder.AddCubicBezier(new Vector2(42.4059982F, -28.3110008F), new Vector2(-37.4039993F, -28.3339996F), new Vector2(-37.4039993F, -28.3339996F));
                    builder.AddCubicBezier(new Vector2(-37.4039993F, -28.3339996F), new Vector2(-37.6199989F, 16.5100002F), new Vector2(-37.6199989F, 16.5100002F));
                    builder.AddCubicBezier(new Vector2(-37.6199989F, 16.5100002F), new Vector2(-22.6650009F, 16.4890003F), new Vector2(-22.6650009F, 16.4890003F));
                    builder.AddCubicBezier(new Vector2(-22.6650009F, 16.4890003F), new Vector2(-22.7639999F, 21.4699993F), new Vector2(-22.7639999F, 21.4699993F));
                    builder.AddCubicBezier(new Vector2(-22.7639999F, 21.4699993F), new Vector2(-37.5139999F, 21.5270004F), new Vector2(-37.5139999F, 21.5270004F));
                    builder.AddCubicBezier(new Vector2(-37.5139999F, 21.5270004F), new Vector2(-42.5390015F, 21.5270004F), new Vector2(-42.5390015F, 21.5270004F));
                    builder.AddCubicBezier(new Vector2(-42.5390015F, 21.5270004F), new Vector2(-42.4160004F, -33.3470001F), new Vector2(-42.4160004F, -33.3470001F));
                    builder.AddCubicBezier(new Vector2(-42.4160004F, -33.3470001F), new Vector2(47.4179993F, -33.3230019F), new Vector2(47.4179993F, -33.3230019F));
                    builder.AddCubicBezier(new Vector2(47.4179993F, -33.3230019F), new Vector2(47.2130013F, 21.5370007F), new Vector2(47.2130013F, 21.5370007F));
                    builder.AddCubicBezier(new Vector2(47.2130013F, 21.5370007F), new Vector2(26.9400005F, 21.6469994F), new Vector2(26.9400005F, 21.6469994F));
                    builder.AddCubicBezier(new Vector2(26.9400005F, 21.6469994F), new Vector2(26.9400005F, 16.6350002F), new Vector2(26.9400005F, 16.6350002F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - - ShapeGroup: Group 1
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_10()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(26.0130005F, 16.5189991F));
                    builder.AddCubicBezier(new Vector2(26.0130005F, 16.5189991F), new Vector2(42.2010002F, 16.5240002F), new Vector2(42.2010002F, 16.5240002F));
                    builder.AddCubicBezier(new Vector2(42.2010002F, 16.5240002F), new Vector2(42.4059982F, -28.3110008F), new Vector2(42.4059982F, -28.3110008F));
                    builder.AddCubicBezier(new Vector2(42.4059982F, -28.3110008F), new Vector2(-37.4039993F, -28.3339996F), new Vector2(-37.4039993F, -28.3339996F));
                    builder.AddCubicBezier(new Vector2(-37.4039993F, -28.3339996F), new Vector2(-37.6199989F, 16.5100002F), new Vector2(-37.6199989F, 16.5100002F));
                    builder.AddCubicBezier(new Vector2(-37.6199989F, 16.5100002F), new Vector2(-22.6650009F, 16.4890003F), new Vector2(-22.6650009F, 16.4890003F));
                    builder.AddCubicBezier(new Vector2(-22.6650009F, 16.4890003F), new Vector2(-22.7639999F, 21.4699993F), new Vector2(-22.7639999F, 21.4699993F));
                    builder.AddCubicBezier(new Vector2(-22.7639999F, 21.4699993F), new Vector2(-37.5139999F, 21.5270004F), new Vector2(-37.5139999F, 21.5270004F));
                    builder.AddCubicBezier(new Vector2(-37.5139999F, 21.5270004F), new Vector2(-42.5390015F, 21.5270004F), new Vector2(-42.5390015F, 21.5270004F));
                    builder.AddCubicBezier(new Vector2(-42.5390015F, 21.5270004F), new Vector2(-42.4160004F, -33.3470001F), new Vector2(-42.4160004F, -33.3470001F));
                    builder.AddCubicBezier(new Vector2(-42.4160004F, -33.3470001F), new Vector2(47.4179993F, -33.3230019F), new Vector2(47.4179993F, -33.3230019F));
                    builder.AddCubicBezier(new Vector2(47.4179993F, -33.3230019F), new Vector2(47.2130013F, 21.5370007F), new Vector2(47.2130013F, 21.5370007F));
                    builder.AddCubicBezier(new Vector2(47.2130013F, 21.5370007F), new Vector2(26.0130005F, 21.5310001F), new Vector2(26.0130005F, 21.5310001F));
                    builder.AddCubicBezier(new Vector2(26.0130005F, 21.5310001F), new Vector2(26.0130005F, 16.5189991F), new Vector2(26.0130005F, 16.5189991F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - - ShapeGroup: Group 1
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_11()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(19.4400005F, 16.6350002F));
                    builder.AddCubicBezier(new Vector2(19.4400005F, 16.6350002F), new Vector2(42.2010002F, 16.5240002F), new Vector2(42.2010002F, 16.5240002F));
                    builder.AddCubicBezier(new Vector2(42.2010002F, 16.5240002F), new Vector2(42.4059982F, -28.3110008F), new Vector2(42.4059982F, -28.3110008F));
                    builder.AddCubicBezier(new Vector2(42.4059982F, -28.3110008F), new Vector2(-37.4039993F, -28.3339996F), new Vector2(-37.4039993F, -28.3339996F));
                    builder.AddCubicBezier(new Vector2(-37.4039993F, -28.3339996F), new Vector2(-37.6199989F, 16.5100002F), new Vector2(-37.6199989F, 16.5100002F));
                    builder.AddCubicBezier(new Vector2(-37.6199989F, 16.5100002F), new Vector2(-22.6650009F, 16.4890003F), new Vector2(-22.6650009F, 16.4890003F));
                    builder.AddCubicBezier(new Vector2(-22.6650009F, 16.4890003F), new Vector2(-22.7639999F, 21.4699993F), new Vector2(-22.7639999F, 21.4699993F));
                    builder.AddCubicBezier(new Vector2(-22.7639999F, 21.4699993F), new Vector2(-37.5139999F, 21.5270004F), new Vector2(-37.5139999F, 21.5270004F));
                    builder.AddCubicBezier(new Vector2(-37.5139999F, 21.5270004F), new Vector2(-42.5390015F, 21.5270004F), new Vector2(-42.5390015F, 21.5270004F));
                    builder.AddCubicBezier(new Vector2(-42.5390015F, 21.5270004F), new Vector2(-42.4160004F, -33.3470001F), new Vector2(-42.4160004F, -33.3470001F));
                    builder.AddCubicBezier(new Vector2(-42.4160004F, -33.3470001F), new Vector2(47.4179993F, -33.3230019F), new Vector2(47.4179993F, -33.3230019F));
                    builder.AddCubicBezier(new Vector2(47.4179993F, -33.3230019F), new Vector2(47.2130013F, 21.5370007F), new Vector2(47.2130013F, 21.5370007F));
                    builder.AddCubicBezier(new Vector2(47.2130013F, 21.5370007F), new Vector2(19.4400005F, 21.6469994F), new Vector2(19.4400005F, 21.6469994F));
                    builder.AddCubicBezier(new Vector2(19.4400005F, 21.6469994F), new Vector2(19.4400005F, 16.6350002F), new Vector2(19.4400005F, 16.6350002F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - - ShapeGroup: Group 1
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_12()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(15.4510002F, 15.4189997F));
                    builder.AddCubicBezier(new Vector2(15.4510002F, 15.4189997F), new Vector2(37.4039993F, 15.2980003F), new Vector2(37.4039993F, 15.2980003F));
                    builder.AddCubicBezier(new Vector2(37.4039993F, 15.2980003F), new Vector2(37.5709991F, -27.698F), new Vector2(37.5709991F, -27.698F));
                    builder.AddCubicBezier(new Vector2(37.5709991F, -27.698F), new Vector2(-30.0960007F, -27.7229996F), new Vector2(-30.0960007F, -27.7229996F));
                    builder.AddCubicBezier(new Vector2(-30.0960007F, -27.7229996F), new Vector2(-30.2210007F, -0.737999976F), new Vector2(-30.2210007F, -0.737999976F));
                    builder.AddCubicBezier(new Vector2(-30.2210007F, -0.737999976F), new Vector2(-27.2779999F, -0.735000014F), new Vector2(-27.2779999F, -0.735000014F));
                    builder.AddCubicBezier(new Vector2(-27.2779999F, -0.735000014F), new Vector2(-27.3579998F, 3.41499996F), new Vector2(-27.3579998F, 3.41499996F));
                    builder.AddCubicBezier(new Vector2(-27.3579998F, 3.41499996F), new Vector2(-30.1359997F, 3.49499989F), new Vector2(-30.1359997F, 3.49499989F));
                    builder.AddCubicBezier(new Vector2(-30.1359997F, 3.49499989F), new Vector2(-35.1580009F, 3.49499989F), new Vector2(-35.1580009F, 3.49499989F));
                    builder.AddCubicBezier(new Vector2(-35.1580009F, 3.49499989F), new Vector2(-35.1080017F, -32.7360001F), new Vector2(-35.1080017F, -32.7360001F));
                    builder.AddCubicBezier(new Vector2(-35.1080017F, -32.7360001F), new Vector2(42.5830002F, -32.7099991F), new Vector2(42.5830002F, -32.7099991F));
                    builder.AddCubicBezier(new Vector2(42.5830002F, -32.7099991F), new Vector2(42.4160004F, 20.3110008F), new Vector2(42.4160004F, 20.3110008F));
                    builder.AddCubicBezier(new Vector2(42.4160004F, 20.3110008F), new Vector2(15.4510002F, 20.4319992F), new Vector2(15.4510002F, 20.4319992F));
                    builder.AddCubicBezier(new Vector2(15.4510002F, 20.4319992F), new Vector2(15.4510002F, 15.4189997F), new Vector2(15.4510002F, 15.4189997F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - - ShapeGroup: Group 1
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_13()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(11.2700005F, 14.8120003F));
                    builder.AddCubicBezier(new Vector2(11.2700005F, 14.8120003F), new Vector2(35.0060005F, 14.6850004F), new Vector2(35.0060005F, 14.6850004F));
                    builder.AddCubicBezier(new Vector2(35.0060005F, 14.6850004F), new Vector2(35.1529999F, -27.3920002F), new Vector2(35.1529999F, -27.3920002F));
                    builder.AddCubicBezier(new Vector2(35.1529999F, -27.3920002F), new Vector2(-26.4419994F, -27.4179993F), new Vector2(-26.4419994F, -27.4179993F));
                    builder.AddCubicBezier(new Vector2(-26.4419994F, -27.4179993F), new Vector2(-26.5219994F, -9.36200047F), new Vector2(-26.5219994F, -9.36200047F));
                    builder.AddCubicBezier(new Vector2(-26.5219994F, -9.36200047F), new Vector2(-26.5839996F, -9.2840004F), new Vector2(-26.5839996F, -9.2840004F));
                    builder.AddCubicBezier(new Vector2(-26.5839996F, -9.2840004F), new Vector2(-26.6550007F, -5.54899979F), new Vector2(-26.6550007F, -5.54899979F));
                    builder.AddCubicBezier(new Vector2(-26.6550007F, -5.54899979F), new Vector2(-26.4459991F, -5.52199984F), new Vector2(-26.4459991F, -5.52199984F));
                    builder.AddCubicBezier(new Vector2(-26.4459991F, -5.52199984F), new Vector2(-31.4669991F, -5.52199984F), new Vector2(-31.4669991F, -5.52199984F));
                    builder.AddCubicBezier(new Vector2(-31.4669991F, -5.52199984F), new Vector2(-31.4549999F, -32.4300003F), new Vector2(-31.4549999F, -32.4300003F));
                    builder.AddCubicBezier(new Vector2(-31.4549999F, -32.4300003F), new Vector2(40.1650009F, -32.4039993F), new Vector2(40.1650009F, -32.4039993F));
                    builder.AddCubicBezier(new Vector2(40.1650009F, -32.4039993F), new Vector2(40.0180016F, 19.698F), new Vector2(40.0180016F, 19.698F));
                    builder.AddCubicBezier(new Vector2(40.0180016F, 19.698F), new Vector2(11.2700005F, 19.8239994F), new Vector2(11.2700005F, 19.8239994F));
                    builder.AddCubicBezier(new Vector2(11.2700005F, 19.8239994F), new Vector2(11.2700005F, 14.8120003F), new Vector2(11.2700005F, 14.8120003F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - - ShapeGroup: Group 1
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_14()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(9.21000004F, 11.9540005F));
                    builder.AddCubicBezier(new Vector2(9.21000004F, 11.9540005F), new Vector2(34.9949989F, 11.8959999F), new Vector2(34.9949989F, 11.8959999F));
                    builder.AddCubicBezier(new Vector2(34.9949989F, 11.8959999F), new Vector2(35.0540009F, -25.9969997F), new Vector2(35.0540009F, -25.9969997F));
                    builder.AddCubicBezier(new Vector2(35.0540009F, -25.9969997F), new Vector2(-19.6760006F, -26.0079994F), new Vector2(-19.6760006F, -26.0079994F));
                    builder.AddCubicBezier(new Vector2(-19.6760006F, -26.0079994F), new Vector2(-19.6450005F, -7.88999987F), new Vector2(-19.6450005F, -7.88999987F));
                    builder.AddCubicBezier(new Vector2(-19.6450005F, -7.88999987F), new Vector2(-19.6690006F, -7.76200008F), new Vector2(-19.6690006F, -7.76200008F));
                    builder.AddCubicBezier(new Vector2(-19.6690006F, -7.76200008F), new Vector2(-19.698F, -5.91599989F), new Vector2(-19.698F, -5.91599989F));
                    builder.AddCubicBezier(new Vector2(-19.698F, -5.91599989F), new Vector2(-19.6140003F, -5.83300018F), new Vector2(-19.6140003F, -5.83300018F));
                    builder.AddCubicBezier(new Vector2(-19.6140003F, -5.83300018F), new Vector2(-24.6299992F, -5.83300018F), new Vector2(-24.6299992F, -5.83300018F));
                    builder.AddCubicBezier(new Vector2(-24.6299992F, -5.83300018F), new Vector2(-24.6879997F, -31.0200005F), new Vector2(-24.6879997F, -31.0200005F));
                    builder.AddCubicBezier(new Vector2(-24.6879997F, -31.0200005F), new Vector2(40.0660019F, -31.0090008F), new Vector2(40.0660019F, -31.0090008F));
                    builder.AddCubicBezier(new Vector2(40.0660019F, -31.0090008F), new Vector2(40.007F, 16.9090004F), new Vector2(40.007F, 16.9090004F));
                    builder.AddCubicBezier(new Vector2(40.007F, 16.9090004F), new Vector2(9.21000004F, 16.9659996F), new Vector2(9.21000004F, 16.9659996F));
                    builder.AddCubicBezier(new Vector2(9.21000004F, 16.9659996F), new Vector2(9.21000004F, 11.9540005F), new Vector2(9.21000004F, 11.9540005F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - - ShapeGroup: Group 1
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_15()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(8.92399979F, 10.4189997F));
                    builder.AddCubicBezier(new Vector2(8.92399979F, 10.4189997F), new Vector2(34.9889984F, 10.4399996F), new Vector2(34.9889984F, 10.4399996F));
                    builder.AddCubicBezier(new Vector2(34.9889984F, 10.4399996F), new Vector2(35.0029984F, -25.2689991F), new Vector2(35.0029984F, -25.2689991F));
                    builder.AddCubicBezier(new Vector2(35.0029984F, -25.2689991F), new Vector2(-16.1439991F, -25.2719994F), new Vector2(-16.1439991F, -25.2719994F));
                    builder.AddCubicBezier(new Vector2(-16.1439991F, -25.2719994F), new Vector2(-16.1439991F, -9.43099976F), new Vector2(-16.1439991F, -9.43099976F));
                    builder.AddCubicBezier(new Vector2(-16.1439991F, -9.43099976F), new Vector2(-16.1499996F, -9.27700043F), new Vector2(-16.1499996F, -9.27700043F));
                    builder.AddCubicBezier(new Vector2(-16.1499996F, -9.27700043F), new Vector2(-16.1560001F, -8.41699982F), new Vector2(-16.1560001F, -8.41699982F));
                    builder.AddCubicBezier(new Vector2(-16.1560001F, -8.41699982F), new Vector2(-16.1380005F, -8.30599976F), new Vector2(-16.1380005F, -8.30599976F));
                    builder.AddCubicBezier(new Vector2(-16.1380005F, -8.30599976F), new Vector2(-21.1509991F, -8.30599976F), new Vector2(-21.1509991F, -8.30599976F));
                    builder.AddCubicBezier(new Vector2(-21.1509991F, -8.30599976F), new Vector2(-21.1560001F, -30.2840004F), new Vector2(-21.1560001F, -30.2840004F));
                    builder.AddCubicBezier(new Vector2(-21.1560001F, -30.2840004F), new Vector2(40.0149994F, -30.2810001F), new Vector2(40.0149994F, -30.2810001F));
                    builder.AddCubicBezier(new Vector2(40.0149994F, -30.2810001F), new Vector2(40.0019989F, 15.4530001F), new Vector2(40.0019989F, 15.4530001F));
                    builder.AddCubicBezier(new Vector2(40.0019989F, 15.4530001F), new Vector2(8.92399979F, 15.4309998F), new Vector2(8.92399979F, 15.4309998F));
                    builder.AddCubicBezier(new Vector2(8.92399979F, 15.4309998F), new Vector2(8.92399979F, 10.4189997F), new Vector2(8.92399979F, 10.4189997F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - - ShapeGroup: Group 1
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_16()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(7.57200003F, 10.1409998F));
                    builder.AddCubicBezier(new Vector2(7.57200003F, 10.1409998F), new Vector2(34.987999F, 10.0670004F), new Vector2(34.987999F, 10.0670004F));
                    builder.AddCubicBezier(new Vector2(34.987999F, 10.0670004F), new Vector2(34.9889984F, -25.0820007F), new Vector2(34.9889984F, -25.0820007F));
                    builder.AddCubicBezier(new Vector2(34.9889984F, -25.0820007F), new Vector2(-15.2370005F, -25.0830002F), new Vector2(-15.2370005F, -25.0830002F));
                    builder.AddCubicBezier(new Vector2(-15.2370005F, -25.0830002F), new Vector2(-15.2460003F, -9.82699966F), new Vector2(-15.2460003F, -9.82699966F));
                    builder.AddCubicBezier(new Vector2(-15.2460003F, -9.82699966F), new Vector2(-15.2460003F, -9.66600037F), new Vector2(-15.2460003F, -9.66600037F));
                    builder.AddCubicBezier(new Vector2(-15.2460003F, -9.66600037F), new Vector2(-15.2469997F, -9.05900002F), new Vector2(-15.2469997F, -9.05900002F));
                    builder.AddCubicBezier(new Vector2(-15.2469997F, -9.05900002F), new Vector2(-15.2449999F, -8.93999958F), new Vector2(-15.2449999F, -8.93999958F));
                    builder.AddCubicBezier(new Vector2(-15.2449999F, -8.93999958F), new Vector2(-20.257F, -8.93999958F), new Vector2(-20.257F, -8.93999958F));
                    builder.AddCubicBezier(new Vector2(-20.257F, -8.93999958F), new Vector2(-20.2490005F, -30.0949993F), new Vector2(-20.2490005F, -30.0949993F));
                    builder.AddCubicBezier(new Vector2(-20.2490005F, -30.0949993F), new Vector2(40.0009995F, -30.0949993F), new Vector2(40.0009995F, -30.0949993F));
                    builder.AddCubicBezier(new Vector2(40.0009995F, -30.0949993F), new Vector2(40F, 15.0790005F), new Vector2(40F, 15.0790005F));
                    builder.AddCubicBezier(new Vector2(40F, 15.0790005F), new Vector2(7.57200003F, 15.1540003F), new Vector2(7.57200003F, 15.1540003F));
                    builder.AddCubicBezier(new Vector2(7.57200003F, 15.1540003F), new Vector2(7.57200003F, 10.1409998F), new Vector2(7.57200003F, 10.1409998F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - - ShapeGroup: Group 1
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_17()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(8.41399956F, 10.0609999F));
                    builder.AddCubicBezier(new Vector2(8.41399956F, 10.0609999F), new Vector2(34.987999F, 10.0240002F), new Vector2(34.987999F, 10.0240002F));
                    builder.AddCubicBezier(new Vector2(34.987999F, 10.0240002F), new Vector2(34.987999F, -25.0610008F), new Vector2(34.987999F, -25.0610008F));
                    builder.AddCubicBezier(new Vector2(34.987999F, -25.0610008F), new Vector2(-15.1350002F, -25.0610008F), new Vector2(-15.1350002F, -25.0610008F));
                    builder.AddCubicBezier(new Vector2(-15.1350002F, -25.0610008F), new Vector2(-15.1440001F, -9.87100029F), new Vector2(-15.1440001F, -9.87100029F));
                    builder.AddCubicBezier(new Vector2(-15.1440001F, -9.87100029F), new Vector2(-15.1440001F, -9.71000004F), new Vector2(-15.1440001F, -9.71000004F));
                    builder.AddCubicBezier(new Vector2(-15.1440001F, -9.71000004F), new Vector2(-15.1440001F, -9.13199997F), new Vector2(-15.1440001F, -9.13199997F));
                    builder.AddCubicBezier(new Vector2(-15.1440001F, -9.13199997F), new Vector2(-15.1440001F, -9.01200008F), new Vector2(-15.1440001F, -9.01200008F));
                    builder.AddCubicBezier(new Vector2(-15.1440001F, -9.01200008F), new Vector2(-20.1560001F, -9.01200008F), new Vector2(-20.1560001F, -9.01200008F));
                    builder.AddCubicBezier(new Vector2(-20.1560001F, -9.01200008F), new Vector2(-20.1469994F, -30.073F), new Vector2(-20.1469994F, -30.073F));
                    builder.AddCubicBezier(new Vector2(-20.1469994F, -30.073F), new Vector2(40F, -30.073F), new Vector2(40F, -30.073F));
                    builder.AddCubicBezier(new Vector2(40F, -30.073F), new Vector2(40F, 15.0369997F), new Vector2(40F, 15.0369997F));
                    builder.AddCubicBezier(new Vector2(40F, 15.0369997F), new Vector2(8.41399956F, 15.073F), new Vector2(8.41399956F, 15.073F));
                    builder.AddCubicBezier(new Vector2(8.41399956F, 15.073F), new Vector2(8.41399956F, 10.0609999F), new Vector2(8.41399956F, 10.0609999F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - ShapeGroup: Group 1
            // - Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_18()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_19(), Geometry_20(), Geometry_21() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - - ShapeGroup: Group 1
            // - - Path 3+Path 2+Path 1.PathGeometry
            // Path 3
            CanvasGeometry Geometry_19()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-30.1709995F, 15.0369997F));
                    builder.AddLine(new Vector2(4.91400003F, 15.0369997F));
                    builder.AddLine(new Vector2(4.91400003F, -5.01200008F));
                    builder.AddLine(new Vector2(-30.1709995F, -5.01200008F));
                    builder.AddLine(new Vector2(-30.1709995F, 15.0369997F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - - ShapeGroup: Group 1
            // - - Path 3+Path 2+Path 1.PathGeometry
            // Path 2
            CanvasGeometry Geometry_20()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(9.73099995F, 25.0219994F));
                    builder.AddCubicBezier(new Vector2(9.60000038F, 24.7350006F), new Vector2(9.37800026F, 24.3700008F), new Vector2(9.06499958F, 23.9260006F));
                    builder.AddCubicBezier(new Vector2(8.75199986F, 23.4820004F), new Vector2(8.4119997F, 23.0249996F), new Vector2(8.04699993F, 22.5550003F));
                    builder.AddCubicBezier(new Vector2(7.68200016F, 22.0849991F), new Vector2(7.329F, 21.6289997F), new Vector2(6.98999977F, 21.1849995F));
                    builder.AddCubicBezier(new Vector2(6.65100002F, 20.7409992F), new Vector2(6.36299992F, 20.3619995F), new Vector2(6.12799978F, 20.0489998F));
                    builder.AddLine(new Vector2(-31.3850002F, 20.0489998F));
                    builder.AddCubicBezier(new Vector2(-31.5939999F, 20.3360004F), new Vector2(-31.8689995F, 20.7010002F), new Vector2(-32.2080002F, 21.1450005F));
                    builder.AddCubicBezier(new Vector2(-32.5470009F, 21.5890007F), new Vector2(-32.9119987F, 22.059F), new Vector2(-33.3040009F, 22.5550003F));
                    builder.AddCubicBezier(new Vector2(-33.6959991F, 23.0510006F), new Vector2(-34.0349998F, 23.5079994F), new Vector2(-34.3219986F, 23.9260006F));
                    builder.AddCubicBezier(new Vector2(-34.6090012F, 24.3439999F), new Vector2(-34.8310013F, 24.7089996F), new Vector2(-34.987999F, 25.0219994F));
                    builder.AddLine(new Vector2(-34.987999F, 25.0610008F));
                    builder.AddLine(new Vector2(9.73099995F, 25.0610008F));
                    builder.AddLine(new Vector2(9.73099995F, 25.0219994F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - - ShapeGroup: Group 1
            // - - Path 3+Path 2+Path 1.PathGeometry
            // Path 1
            CanvasGeometry Geometry_21()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(9.92700005F, -10.0240002F));
                    builder.AddLine(new Vector2(9.92700005F, 16.7210007F));
                    builder.AddLine(new Vector2(13.9209995F, 22.2029991F));
                    builder.AddCubicBezier(new Vector2(14.1560001F, 22.5419998F), new Vector2(14.3509998F, 22.9990005F), new Vector2(14.5080004F, 23.573F));
                    builder.AddCubicBezier(new Vector2(14.665F, 24.1469994F), new Vector2(14.743F, 24.6429996F), new Vector2(14.743F, 25.0610008F));
                    builder.AddCubicBezier(new Vector2(14.743F, 25.7399998F), new Vector2(14.6120005F, 26.3799992F), new Vector2(14.3509998F, 26.9799995F));
                    builder.AddCubicBezier(new Vector2(14.0900002F, 27.5799999F), new Vector2(13.7379999F, 28.1149998F), new Vector2(13.2939997F, 28.5849991F));
                    builder.AddCubicBezier(new Vector2(12.8500004F, 29.0550003F), new Vector2(12.316F, 29.4209995F), new Vector2(11.6890001F, 29.6819992F));
                    builder.AddCubicBezier(new Vector2(11.0620003F, 29.9430008F), new Vector2(10.4099998F, 30.073F), new Vector2(9.73099995F, 30.073F));
                    builder.AddLine(new Vector2(-34.987999F, 30.073F));
                    builder.AddCubicBezier(new Vector2(-35.6669998F, 30.073F), new Vector2(-36.3069992F, 29.9430008F), new Vector2(-36.9070015F, 29.6819992F));
                    builder.AddCubicBezier(new Vector2(-37.507F, 29.4209995F), new Vector2(-38.0419998F, 29.0690002F), new Vector2(-38.512001F, 28.625F));
                    builder.AddCubicBezier(new Vector2(-38.9819984F, 28.1809998F), new Vector2(-39.3470001F, 27.6459999F), new Vector2(-39.6080017F, 27.0189991F));
                    builder.AddCubicBezier(new Vector2(-39.8689995F, 26.3920002F), new Vector2(-40F, 25.7399998F), new Vector2(-40F, 25.0610008F));
                    builder.AddCubicBezier(new Vector2(-40F, 24.6429996F), new Vector2(-39.9220009F, 24.1469994F), new Vector2(-39.7649994F, 23.573F));
                    builder.AddCubicBezier(new Vector2(-39.6080017F, 22.9990005F), new Vector2(-39.4129982F, 22.5419998F), new Vector2(-39.1780014F, 22.2029991F));
                    builder.AddLine(new Vector2(-35.1839981F, 16.7210007F));
                    builder.AddLine(new Vector2(-35.1839981F, -10.0240002F));
                    builder.AddLine(new Vector2(9.92700005F, -10.0240002F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - Masks
            // - Layer: Shape Layer 2 Comp 1
            // Transforms: Shape Layer 2 Comp 1 Scale:0.87, Offset:<-47.947998, -57>
            CompositionColorBrush ColorBrush_Black()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0x00, 0x00, 0x00));
            }

            // Color bound to theme property value: Foreground
            CompositionColorBrush ThemeColor_Foreground()
            {
                var result = _themeColor_Foreground = _c.CreateColorBrush();
                BindProperty(result, "Color", "ColorRGB(_theme.Foreground.W*1,_theme.Foreground.X,_theme.Foreground.Y,_theme.Foreground.Z)", "_theme", _themeProperties);
                return result;
            }

            // - - - - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - Transforms for Layer 2
            // - Transforms for Shape Layer 2 Comp 1 Scale(0.87,0.945,0), Offset(-47.947998,-57,0)
            // Shape tree root for layer: Shape Layer 2
            CompositionContainerShape ContainerShape_0()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0.439999998F, 15.3559999F);
                // ShapeGroup: Rectangle 1 Scale:2.09219, Offset:<0.44, 23.356>
                result.Shapes.Add(SpriteShape_0());
                StartProgressBoundAnimation(result, "Scale", ScaleVector2Animation_0(), _rootProgress);
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_0(), _rootProgress);
                return result;
            }

            // - - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // Masks
            // Layer: Shape Layer 2 Comp 1
            CompositionContainerShape ContainerShape_1()
            {
                var result = _c.CreateContainerShape();
                // Transforms: Shape Layer 2 Comp 1 Scale:0.87, Offset:<-47.947998, -57>
                result.Shapes.Add(SpriteShape_1());
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_1(), _rootProgress);
                return result;
            }

            // PreComp layer: Asset - AnimIcon - Action Center - Project
            // Layer: Shape Layer 2
            CompositionContainerShape ContainerShape_2()
            {
                var result = _c.CreateContainerShape();
                result.Scale = new Vector2(0F, 0F);
                result.Shapes.Add(ContainerShape_3());
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation(), _rootProgress);
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - Project
            // Layer: Shape Layer 2
            CompositionContainerShape ContainerShape_3()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(-12.6280003F, 10.0240002F);
                // Transforms: Shape Layer 2
                result.Shapes.Add(ContainerShape_4());
                StartProgressBoundAnimation(result, "Scale", ScaleVector2Animation_2(), _rootProgress);
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_2(), _rootProgress);
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - Layer: Shape Layer 2
            // Transforms for Shape Layer 2
            CompositionContainerShape ContainerShape_4()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0.439999998F, 15.3559999F);
                result.Offset = new Vector2(-13F, -10.25F);
                // ShapeGroup: Rectangle 1 Scale:0.99205, Offset:<0.44, 15.856>
                result.Shapes.Add(SpriteShape_3());
                StartProgressBoundAnimation(result, "Scale", ScaleVector2Animation_1(), _rootProgress);
                return result;
            }

            // PreComp layer: Asset - AnimIcon - Action Center - Project
            CompositionEffectBrush EffectBrush()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var effectFactory = _c.CreateEffectFactory(compositeEffect);
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_0());
                result.SetSourceParameter("source", SurfaceBrush_1());
                return result;
            }

            // - - - - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - Masks
            // - Layer: Shape Layer 2 Comp 1
            // Transforms: Shape Layer 2 Comp 1 Scale:0.87, Offset:<-47.947998, -57>
            CompositionPathGeometry PathGeometry_0()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_00()));
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - Project
            // ShapeGroup: Group 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_1()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_0(), _rootProgress);
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - Project
            // ShapeGroup: Group 1
            // Path 3+Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_2()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_18()));
                return result;
            }

            // Rectangle Path 1.RectangleGeometry
            CompositionRectangleGeometry Rectangle_39p881x22p713()
            {
                var result = _rectangle_39p881x22p713 = _c.CreateRectangleGeometry();
                result.Offset = new Vector2(-19.9405003F, -11.3564997F);
                result.Size = new Vector2(39.8810005F, 22.7129993F);
                return result;
            }

            // - - - - - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - - Transforms for Layer 2
            // - - Transforms for Shape Layer 2 Comp 1 Scale(0.87,0.945,0),
            // Offset(-47.947998,-57,0)
            // - Shape tree root for layer: Shape Layer 2
            // Rectangle Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                // Offset:<0.44, 23.356>, Rotation:-0.010406000456708382 degrees,
                // Scale:<2.09219, 2.24734>
                var result = CreateSpriteShape(Rectangle_39p881x22p713(), new Matrix3x2(2.09219003F, 0F, 0F, 2.24733996F, 0.439999998F, 23.3560009F));
                result.StrokeBrush = ThemeColor_Foreground();
                result.StrokeMiterLimit = 2F;
                StartProgressBoundAnimation(result, "StrokeThickness", StrokeThicknessScalarAnimation_10_to_0(), RootProgress());
                return result;
            }

            // - - - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - Masks
            // Layer: Shape Layer 2 Comp 1
            // Transforms for Shape Layer 2 Comp 1 Scale:0.87, Offset:<-47.947998, -57>
            CompositionSpriteShape SpriteShape_1()
            {
                // Offset:<-41.447998, -54.25>, Rotation:-0.004266087439530114 degrees,
                // Scale:<0.87, 0.945>
                var result = CreateSpriteShape(PathGeometry_0(), new Matrix3x2(0.870000005F, 0F, 0F, 0.944999993F, -41.447998F, -54.25F), ColorBrush_Black());
                return result;
            }

            // PreComp layer: Asset - AnimIcon - Action Center - Project
            // Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                var result = _c.CreateSpriteShape(PathGeometry_1());
                result.FillBrush = _themeColor_Foreground;
                StartProgressBoundAnimation(result, "Offset", _offsetVector2Animation_1, _rootProgress);
                return result;
            }

            // - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - Layer: Shape Layer 2
            // Transforms: Shape Layer 2
            // Rectangle Path 1
            CompositionSpriteShape SpriteShape_3()
            {
                // Offset:<0.44, 15.856>, Scale:<0.99205, 0.93461007>
                var result = CreateSpriteShape(_rectangle_39p881x22p713, new Matrix3x2(0.992049992F, 0F, 0F, 0.934610009F, 0.439999998F, 15.8559999F));
                result.StrokeBrush = _themeColor_Foreground;
                result.StrokeMiterLimit = 2F;
                StartProgressBoundAnimation(result, "StrokeThickness", StrokeThicknessScalarAnimation_15_to_0(), _rootProgress);
                return result;
            }

            // PreComp layer: Asset - AnimIcon - Action Center - Project
            // Path 3+Path 2+Path 1
            CompositionSpriteShape SpriteShape_4()
            {
                var result = _c.CreateSpriteShape(PathGeometry_2());
                result.CenterPoint = new Vector2(-12.6280003F, 10.0240002F);
                result.FillBrush = _themeColor_Foreground;
                StartProgressBoundAnimation(result, "Scale", _scaleVector2Animation_2, _rootProgress);
                StartProgressBoundAnimation(result, "Offset", _offsetVector2Animation_2, _rootProgress);
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - Project
            CompositionSurfaceBrush SurfaceBrush_0()
            {
                var result = _c.CreateSurfaceBrush();
                result.Surface = VisualSurface_0();
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - Project
            CompositionSurfaceBrush SurfaceBrush_1()
            {
                var result = _c.CreateSurfaceBrush();
                result.Surface = VisualSurface_1();
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - Project
            CompositionVisualSurface VisualSurface_0()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_0();
                result.SourceSize = new Vector2(100F, 100F);
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - Project
            CompositionVisualSurface VisualSurface_1()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_3();
                result.SourceSize = new Vector2(100F, 100F);
                return result;
            }

            // - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            ContainerVisual ContainerVisual_0()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                result.IsVisible = false;
                // Transforms for Layer 2
                result.Children.InsertAtTop(ContainerVisual_1());
                StartProgressBoundAnimation(result, "IsVisible", IsVisibleBooleanAnimation_0(), _rootProgress);
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // Transforms for Layer 2
            ContainerVisual ContainerVisual_1()
            {
                var result = _c.CreateContainerVisual();
                // Transforms for Shape Layer 2 Comp 1 Scale(0.87,0.945,0), Offset(-47.947998,-57,0)
                result.Children.InsertAtTop(ContainerVisual_2());
                StartProgressBoundAnimation(result, "Offset", OffsetVector3Animation(), _rootProgress);
                return result;
            }

            // - - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // Transforms for Layer 2
            // Transforms for Shape Layer 2 Comp 1 Scale(0.87,0.945,0), Offset(-47.947998,-57,0)
            ContainerVisual ContainerVisual_2()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = _insetClip_0;
                result.Size = new Vector2(100F, 100F);
                // Offset:<-41.447998, -54.25>, Rotation:{X:1 Y:0 Z:0 W:0}, Scale:<0.87, -0.945>
                result.TransformMatrix = new Matrix4x4(0.870000005F, 0F, 0F, 0F, 0F, 0.944999993F, 0F, 0F, 0F, 0F, 0F, 0F, -41.447998F, -54.25F, 0F, 1F);
                // Shape tree root for layer: Shape Layer 2
                result.Children.InsertAtTop(ShapeVisual_0());
                return result;
            }

            // - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            ContainerVisual ContainerVisual_3()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                result.IsVisible = false;
                // Masks
                result.Children.InsertAtTop(ShapeVisual_1());
                StartProgressBoundAnimation(result, "IsVisible", IsVisibleBooleanAnimation_1(), _rootProgress);
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                propertySet.InsertScalar("t0", 0F);
                propertySet.InsertScalar("t1", 0F);
                result.Clip = InsetClip_0();
                result.Size = new Vector2(100F, 100F);
                // Offset:<-2, -2>, Scale:<0.2, 0.2>
                result.TransformMatrix = new Matrix4x4(0.200000003F, 0F, 0F, 0F, 0F, 0.200000003F, 0F, 0F, 0F, 0F, 0F, 0F, -2F, -2F, 0F, 1F);
                var children = result.Children;
                // PreComp layer: Asset - AnimIcon - Action Center - Project
                children.InsertAtTop(SpriteVisual_0());
                // PreComp layer: Asset - AnimIcon - Action Center - Project
                children.InsertAtTop(ShapeVisual_2());
                StartProgressBoundAnimation(propertySet, "t0", t0ScalarAnimation_0_to_1(), _rootProgress);
                StartProgressBoundAnimation(propertySet, "t1", t1ScalarAnimation_0_to_1(), _rootProgress);
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.850000024F, 0F), new Vector2(0.833000004F, 0.833000004F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_2()
            {
                return _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction(new Vector2(0.850000024F, 0F), new Vector2(0.75F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_3()
            {
                return _cubicBezierEasingFunction_3 = _c.CreateCubicBezierEasingFunction(new Vector2(0F, 0F), new Vector2(0.833000004F, 0.833000004F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_4()
            {
                return _cubicBezierEasingFunction_4 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_5()
            {
                return _cubicBezierEasingFunction_5 = _c.CreateCubicBezierEasingFunction(new Vector2(0.349999994F, 0F), new Vector2(0F, 1F));
            }

            ExpressionAnimation RootProgress()
            {
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            InsetClip InsetClip_0()
            {
                var result = _insetClip_0 = _c.CreateInsetClip();
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - ShapeGroup: Group 1
            // Path 1.PathGeometry
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_0()
            {
                var result = CreatePathKeyFrameAnimation(0F, new CompositionPath(Geometry_01()), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.0333333351F, new CompositionPath(Geometry_02()), CubicBezierEasingFunction_4());
                result.InsertKeyFrame(0.0666666701F, new CompositionPath(Geometry_03()), _cubicBezierEasingFunction_4);
                result.InsertKeyFrame(0.116666667F, new CompositionPath(Geometry_04()), _cubicBezierEasingFunction_4);
                result.InsertKeyFrame(0.166666672F, new CompositionPath(Geometry_05()), _cubicBezierEasingFunction_4);
                result.InsertKeyFrame(0.216666669F, new CompositionPath(Geometry_06()), _cubicBezierEasingFunction_4);
                result.InsertKeyFrame(0.25F, new CompositionPath(Geometry_07()), _cubicBezierEasingFunction_1);
                result.InsertKeyFrame(0.316666663F, new CompositionPath(Geometry_08()), _cubicBezierEasingFunction_0);
                result.InsertKeyFrame(0.5F, new CompositionPath(Geometry_09()), _cubicBezierEasingFunction_1);
                result.InsertKeyFrame(0.733333349F, new CompositionPath(Geometry_10()), _cubicBezierEasingFunction_3);
                result.InsertKeyFrame(0.783333361F, new CompositionPath(Geometry_11()), _cubicBezierEasingFunction_4);
                result.InsertKeyFrame(0.800000012F, new CompositionPath(Geometry_12()), _cubicBezierEasingFunction_4);
                result.InsertKeyFrame(0.833333313F, new CompositionPath(Geometry_13()), _cubicBezierEasingFunction_4);
                result.InsertKeyFrame(0.866666675F, new CompositionPath(Geometry_14()), _cubicBezierEasingFunction_4);
                result.InsertKeyFrame(0.899999976F, new CompositionPath(Geometry_15()), _cubicBezierEasingFunction_4);
                result.InsertKeyFrame(0.933333337F, new CompositionPath(Geometry_16()), _cubicBezierEasingFunction_4);
                result.InsertKeyFrame(0.983333349F, new CompositionPath(Geometry_17()), _cubicBezierEasingFunction_1);
                return result;
            }

            // - - - - - - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - - - Transforms for Layer 2
            // - - - Transforms for Shape Layer 2 Comp 1 Scale(0.87,0.945,0),
            // Offset(-47.947998,-57,0)
            // - - Shape tree root for layer: Shape Layer 2
            // ShapeGroup: Rectangle 1 Scale:2.09219, Offset:<0.44, 23.356>
            // StrokeThickness
            ScalarKeyFrameAnimation StrokeThicknessScalarAnimation_10_to_0()
            {
                var result = CreateScalarKeyFrameAnimation(0F, 10F, StepThenHoldEasingFunction());
                result.InsertKeyFrame(0.183333337F, 10F, HoldThenStepEasingFunction());
                result.InsertKeyFrame(0.666666687F, 0F, CubicBezierEasingFunction_0());
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - - Layer: Shape Layer 2
            // - Transforms: Shape Layer 2
            // ShapeGroup: Rectangle 1 Scale:0.99205, Offset:<0.44, 15.856>
            // StrokeThickness
            ScalarKeyFrameAnimation StrokeThicknessScalarAnimation_15_to_0()
            {
                var result = CreateScalarKeyFrameAnimation(0F, 15F, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.116666667F, 15F, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.783333361F, 0F, _cubicBezierEasingFunction_4);
                return result;
            }

            ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
            {
                var result = CreateScalarKeyFrameAnimation(0.25000003F, 0F, _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                result.InsertKeyFrame(0.49999997F, 1F, CubicBezierEasingFunction_5());
                result.InsertKeyFrame(0.75000006F, 0F, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.98333329F, 1F, _cubicBezierEasingFunction_1);
                return result;
            }

            ScalarKeyFrameAnimation t1ScalarAnimation_0_to_1()
            {
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                result.InsertKeyFrame(0.249999985F, 1F, _cubicBezierEasingFunction_2);
                result.InsertKeyFrame(0.25F, 0F, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.49999997F, 1F, _cubicBezierEasingFunction_5);
                return result;
            }

            // - - - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - Transforms for Layer 2
            // Transforms for Shape Layer 2 Comp 1 Scale(0.87,0.945,0), Offset(-47.947998,-57,0)
            // Shape tree root for layer: Shape Layer 2
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(100F, 100F);
                result.Shapes.Add(ContainerShape_0());
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // Masks
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(100F, 100F);
                // Layer: Shape Layer 2 Comp 1
                result.Shapes.Add(ContainerShape_1());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_2()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(100F, 100F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 1
                shapes.Add(SpriteShape_2());
                // Layer: Shape Layer 2
                shapes.Add(ContainerShape_2());
                // ShapeGroup: Group 1
                shapes.Add(SpriteShape_4());
                return result;
            }

            // PreComp layer: Shape Layer 2 Comp 1
            SpriteVisual SpriteVisual_0()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(100F, 100F);
                result.Brush = EffectBrush();
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // - - - - - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - - Transforms for Layer 2
            // - - Transforms for Shape Layer 2 Comp 1 Scale(0.87,0.945,0),
            // Offset(-47.947998,-57,0)
            // - Shape tree root for layer: Shape Layer 2
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_0()
            {
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(49.5F, 56.75F), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.183333337F, new Vector2(49.5F, 56.75F), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.666666687F, new Vector2(49.5F, 31.75F), _cubicBezierEasingFunction_1);
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_1()
            {
                var result = _offsetVector2Animation_1 = CreateVector2KeyFrameAnimation(0F, new Vector2(50F, 50F), _holdThenStepEasingFunction);
                result.SetReferenceParameter("_", _root);
                result.InsertKeyFrame(0.25F, new Vector2(45F, 50F), _cubicBezierEasingFunction_2);
                result.InsertExpressionKeyFrame(0.49999997F, "(Pow(1-_.t0,3)*Vector2(45,50))+(3*Square(1-_.t0)*_.t0*Vector2(44.583,50))+(3*(1-_.t0)*Square(_.t0)*Vector2(47.083,50))+(Pow(_.t0,3)*Vector2(47.5,50))", _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.5F, new Vector2(47.5F, 50F), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.783333361F, new Vector2(47.5F, 50F), _cubicBezierEasingFunction_3);
                result.InsertKeyFrame(0.983333349F, new Vector2(50F, 50F), _cubicBezierEasingFunction_1);
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_2()
            {
                var result = _offsetVector2Animation_2 = CreateVector2KeyFrameAnimation(0F, new Vector2(50F, 50F), _holdThenStepEasingFunction);
                result.SetReferenceParameter("_", _root);
                result.InsertExpressionKeyFrame(0.249999985F, "(Pow(1-_.t1,3)*Vector2(50,50))+(3*Square(1-_.t1)*_.t1*Vector2(52.542,51.625))+(3*(1-_.t1)*Square(_.t1)*Vector2(63.167,58.5))+(Pow(_.t1,3)*Vector2(65.25,59.75))", _stepThenHoldEasingFunction);
                result.InsertExpressionKeyFrame(0.49999997F, "(Pow(1-_.t1,3)*Vector2(65.25,59.75))+(3*Square(1-_.t1)*_.t1*Vector2(67.333,61))+(3*(1-_.t1)*Square(_.t1)*Vector2(62.958,57.875))+(Pow(_.t1,3)*Vector2(62.5,57.5))", _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.5F, new Vector2(62.5F, 57.5F), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.75F, new Vector2(62.5F, 57.5F), _cubicBezierEasingFunction_3);
                result.InsertExpressionKeyFrame(0.98333329F, "(Pow(1-_.t0,3)*Vector2(62.5,57.5))+(3*Square(1-_.t0)*_.t0*Vector2(60.417,56.25))+(3*(1-_.t0)*Square(_.t0)*Vector2(52.083,51.25))+(Pow(_.t0,3)*Vector2(50,50))", _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.983333349F, new Vector2(50F, 50F), _stepThenHoldEasingFunction);
                return result;
            }

            // - - - - - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - - Transforms for Layer 2
            // - - Transforms for Shape Layer 2 Comp 1 Scale(0.87,0.945,0),
            // Offset(-47.947998,-57,0)
            // - Shape tree root for layer: Shape Layer 2
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_0()
            {
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.183333337F, new Vector2(0F, 0F), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.666666687F, new Vector2(1.10785997F, 1.08806002F), CubicBezierEasingFunction_1());
                return result;
            }

            // - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // - - Layer: Shape Layer 2
            // Transforms: Shape Layer 2
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_1()
            {
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.116666667F, new Vector2(0F, 0F), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.783333361F, new Vector2(1F, 1.08806002F), _cubicBezierEasingFunction_1);
                return result;
            }

            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_2()
            {
                var result = _scaleVector2Animation_2 = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.25F, new Vector2(1.14999998F, 1.14999998F), _cubicBezierEasingFunction_2);
                result.InsertKeyFrame(0.75F, new Vector2(1.14999998F, 1.14999998F), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.983333349F, new Vector2(1F, 1F), _cubicBezierEasingFunction_1);
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - Project
            // Layer: Shape Layer 2
            Vector2KeyFrameAnimation ShapeVisibilityAnimation()
            {
                var result = CreateVector2KeyFrameAnimation(0.116666667F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.783333361F, new Vector2(0F, 0F), _holdThenStepEasingFunction);
                return result;
            }

            // - - - - - PreComp layer: Asset - AnimIcon - Action Center - Project
            // Transforms for Layer 2
            // Offset
            Vector3KeyFrameAnimation OffsetVector3Animation()
            {
                var result = CreateVector3KeyFrameAnimation(0F, new Vector3(50F, 50F, 0F), _holdThenStepEasingFunction);
                result.SetReferenceParameter("_", _root);
                result.InsertKeyFrame(0.25F, new Vector3(45F, 50F, 0F), CubicBezierEasingFunction_2());
                result.InsertExpressionKeyFrame(0.49999997F, "(Pow(1-_.t0,3)*Vector3(45,50,0))+(3*Square(1-_.t0)*_.t0*Vector3(44.583,50,0))+(3*(1-_.t0)*Square(_.t0)*Vector3(47.083,50,0))+(Pow(_.t0,3)*Vector3(47.5,50,0))", _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.5F, new Vector3(47.5F, 50F, 0F), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.783333361F, new Vector3(47.5F, 50F, 0F), CubicBezierEasingFunction_3());
                result.InsertKeyFrame(0.983333349F, new Vector3(50F, 50F, 0F), _cubicBezierEasingFunction_1);
                return result;
            }

            internal AnimatedVisual(
                Compositor compositor,
                CompositionPropertySet themeProperties
                )
            {
                _c = compositor;
                _themeProperties = themeProperties;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(16F, 16F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 7);
            }
        }
    }
}
