//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           6.1.0-build.109+gebc2a6a0a3
//       
//       Command:
//           LottieGen -MinimumUapVersion 11 -Namespace WindowsInternal.ComposableShell.Experiences -Interface ILottieVisual -Language CSharp -InputFile QA_EaseOfAccess.json
//       
//       Input file:
//           QA_EaseOfAccess.json (15170 bytes created 10:10-07:00 Mar 30 2020)
//       
//       Invoked on:
//           SIM10FRESH @ 17:59-07:00 Apr 1 2020
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |   221 |
// |--------------------------+-------|
// | Animators                |    41 |
// | Animated brushes         |     1 |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     4 |
// | PathKeyFrameAnimations   |     3 |
// |--------------------------+-------|
// | ContainerVisuals         |     7 |
// | ShapeVisuals             |     8 |
// |--------------------------+-------|
// | ContainerShapes          |     3 |
// | CompositionSpriteShapes  |    12 |
// |--------------------------+-------|
// | Brushes                  |    11 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |     6 |
// ------------------------------------
using Microsoft.Graphics.Canvas;
using Microsoft.Graphics.Canvas.Effects;
using Microsoft.Graphics.Canvas.Geometry;
using System;
using System.Numerics;
using Windows.UI;
using Windows.UI.Composition;

namespace AnimatedIconPrototype
{
    // Name:        QA_EaseOfAccess
    // Frame rate:  60 fps
    // Frame count: 60
    // Duration:    1000.0 mS
    // ____________________________________________
    // | Theme property | Type  |  Default value  |
    // |________________|_______|_________________|
    // | Foreground     | Color | #FF000000 Black |
    // --------------------------------------------
    sealed class QA_EaseOfAccess : ILottieVisualSource
    {
        // Animation duration: 1.000 seconds.
        internal const long c_durationTicks = 10000000;

        // Theme property: Foreground.
        internal static readonly Color c_themeForeground = Color.FromArgb(0xFF, 0x00, 0x00, 0x00);

        CompositionPropertySet _themeProperties;
        Color _themeForeground = c_themeForeground;

        // Theme properties.
        public Color Foreground
        {
            get => _themeForeground;
            set
            {
                _themeForeground = value;
                if (_themeProperties != null)
                {
                    _themeProperties.InsertVector4("Foreground", ColorAsVector4((Color)_themeForeground));
                }
            }
        }

        public CompositionPropertySet GetThemeProperties(Compositor compositor)
        {
            return EnsureThemeProperties(compositor);
        }

        internal static Vector4 ColorAsVector4(Color color) => new Vector4(color.R, color.G, color.B, color.A);

        CompositionPropertySet EnsureThemeProperties(Compositor compositor)
        {
            if (_themeProperties is null)
            {
                _themeProperties = compositor.CreatePropertySet();
                _themeProperties.InsertVector4("Foreground", ColorAsVector4((Color)Foreground));
            }
            return _themeProperties;
        }

        public ILottieVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;
            EnsureThemeProperties(compositor);

            if (AnimatedVisual.IsRuntimeCompatible())
            {
                return
                    new AnimatedVisual(
                        compositor,
                        _themeProperties
                        );
            }

            return null;
        }

        sealed class AnimatedVisual : ILottieVisual
        {
            const long c_durationTicks = 10000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            readonly CompositionPropertySet _themeProperties;
            CompositionColorBrush _colorBrush_Black;
            CompositionColorBrush _themeColor_Foreground;
            CompositionPath _path_0;
            CompositionPath _path_1;
            CompositionPathGeometry _pathGeometry_2;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            ExpressionAnimation _rootProgress;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            BooleanKeyFrameAnimation CreateBooleanKeyFrameAnimation(float initialProgress, bool initialValue)
            {
                var result = _c.CreateBooleanKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue);
                return result;
            }

            PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            BooleanKeyFrameAnimation IsVisibleBooleanAnimation_0()
            {
                var result = CreateBooleanKeyFrameAnimation(0.266666681F, true);
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            BooleanKeyFrameAnimation IsVisibleBooleanAnimation_1()
            {
                var result = CreateBooleanKeyFrameAnimation(0.266666681F, true);
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            BooleanKeyFrameAnimation IsVisibleBooleanAnimation_2()
            {
                var result = CreateBooleanKeyFrameAnimation(0.416666657F, true);
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            BooleanKeyFrameAnimation IsVisibleBooleanAnimation_3()
            {
                var result = CreateBooleanKeyFrameAnimation(0.416666657F, true);
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // - - - ShapeGroup: Group 1
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_00()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(2.64499998F, -21.1569996F));
                    builder.AddCubicBezier(new Vector2(2.64499998F, -21.1569996F), new Vector2(2.64499998F, 10.5780001F), new Vector2(2.64499998F, 10.5780001F));
                    builder.AddCubicBezier(new Vector2(2.64499998F, 10.5780001F), new Vector2(10.5780001F, 10.5780001F), new Vector2(10.5780001F, 10.5780001F));
                    builder.AddCubicBezier(new Vector2(10.5780001F, 10.5780001F), new Vector2(0F, 21.1569996F), new Vector2(0F, 21.1569996F));
                    builder.AddCubicBezier(new Vector2(0F, 21.1569996F), new Vector2(-10.5780001F, 10.5780001F), new Vector2(-10.5780001F, 10.5780001F));
                    builder.AddCubicBezier(new Vector2(-10.5780001F, 10.5780001F), new Vector2(-2.64499998F, 10.5780001F), new Vector2(-2.64499998F, 10.5780001F));
                    builder.AddCubicBezier(new Vector2(-2.64499998F, 10.5780001F), new Vector2(-2.64499998F, -21.1569996F), new Vector2(-2.64499998F, -21.1569996F));
                    builder.AddCubicBezier(new Vector2(-2.64499998F, -21.1569996F), new Vector2(2.64499998F, -21.1569996F), new Vector2(2.64499998F, -21.1569996F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // - - - ShapeGroup: Group 1
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_01()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(2.70600009F, 10.4680004F));
                    builder.AddCubicBezier(new Vector2(2.70600009F, 10.4680004F), new Vector2(2.64499998F, 10.5780001F), new Vector2(2.64499998F, 10.5780001F));
                    builder.AddCubicBezier(new Vector2(2.64499998F, 10.5780001F), new Vector2(10.5780001F, 10.5780001F), new Vector2(10.5780001F, 10.5780001F));
                    builder.AddCubicBezier(new Vector2(10.5780001F, 10.5780001F), new Vector2(0F, 21.1569996F), new Vector2(0F, 21.1569996F));
                    builder.AddCubicBezier(new Vector2(0F, 21.1569996F), new Vector2(-10.5780001F, 10.5780001F), new Vector2(-10.5780001F, 10.5780001F));
                    builder.AddCubicBezier(new Vector2(-10.5780001F, 10.5780001F), new Vector2(-2.64499998F, 10.5780001F), new Vector2(-2.64499998F, 10.5780001F));
                    builder.AddCubicBezier(new Vector2(-2.64499998F, 10.5780001F), new Vector2(-2.58299994F, 10.4680004F), new Vector2(-2.58299994F, 10.4680004F));
                    builder.AddCubicBezier(new Vector2(-2.58299994F, 10.4680004F), new Vector2(2.70600009F, 10.4680004F), new Vector2(2.70600009F, 10.4680004F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_02()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(5.51599979F, 10.5780001F));
                    builder.AddCubicBezier(new Vector2(5.51599979F, 10.5780001F), new Vector2(5.51599979F, 2.64499998F), new Vector2(5.51599979F, 2.64499998F));
                    builder.AddCubicBezier(new Vector2(5.51599979F, 2.64499998F), new Vector2(-16.0949993F, 2.64499998F), new Vector2(-16.0949993F, 2.64499998F));
                    builder.AddCubicBezier(new Vector2(-16.0949993F, 2.64499998F), new Vector2(-10.8050003F, -2.64499998F), new Vector2(-10.8050003F, -2.64499998F));
                    builder.AddCubicBezier(new Vector2(-10.8050003F, -2.64499998F), new Vector2(5.51599979F, -2.64499998F), new Vector2(5.51599979F, -2.64499998F));
                    builder.AddCubicBezier(new Vector2(5.51599979F, -2.64499998F), new Vector2(5.51599979F, -10.5780001F), new Vector2(5.51599979F, -10.5780001F));
                    builder.AddCubicBezier(new Vector2(5.51599979F, -10.5780001F), new Vector2(16.0949993F, 0F), new Vector2(16.0949993F, 0F));
                    builder.AddCubicBezier(new Vector2(16.0949993F, 0F), new Vector2(5.51599979F, 10.5780001F), new Vector2(5.51599979F, 10.5780001F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // - - - ShapeGroup: Group 1
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_03()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(5.51599979F, 10.5780001F));
                    builder.AddCubicBezier(new Vector2(5.51599979F, 10.5780001F), new Vector2(5.51599979F, 2.64499998F), new Vector2(5.51599979F, 2.64499998F));
                    builder.AddCubicBezier(new Vector2(5.51599979F, 2.64499998F), new Vector2(5.50699997F, 2.63000011F), new Vector2(5.50699997F, 2.63000011F));
                    builder.AddCubicBezier(new Vector2(5.50699997F, 2.63000011F), new Vector2(5.48999977F, -2.67000008F), new Vector2(5.48999977F, -2.67000008F));
                    builder.AddCubicBezier(new Vector2(5.48999977F, -2.67000008F), new Vector2(5.51599979F, -2.64499998F), new Vector2(5.51599979F, -2.64499998F));
                    builder.AddCubicBezier(new Vector2(5.51599979F, -2.64499998F), new Vector2(5.51599979F, -10.5780001F), new Vector2(5.51599979F, -10.5780001F));
                    builder.AddCubicBezier(new Vector2(5.51599979F, -10.5780001F), new Vector2(16.0949993F, 0F), new Vector2(16.0949993F, 0F));
                    builder.AddCubicBezier(new Vector2(16.0949993F, 0F), new Vector2(5.51599979F, 10.5780001F), new Vector2(5.51599979F, 10.5780001F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_04()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-6.625F, 6.375F));
                    builder.AddLine(new Vector2(-6.625F, -32.875F));
                    builder.AddLine(new Vector2(-21.875F, -29.375F));
                    builder.AddLine(new Vector2(-28.625F, -23.375F));
                    builder.AddLine(new Vector2(-21.625F, -16.375F));
                    builder.AddLine(new Vector2(-24.875F, -13.125F));
                    builder.AddLine(new Vector2(-31.875F, -20.125F));
                    builder.AddLine(new Vector2(-35.875F, -16.25F));
                    builder.AddLine(new Vector2(-40.125F, -6.375F));
                    builder.AddLine(new Vector2(-40.875F, 2F));
                    builder.AddLine(new Vector2(-30.625F, 2F));
                    builder.AddLine(new Vector2(-30.625F, 6.75F));
                    builder.AddLine(new Vector2(-41.125F, 6.75F));
                    builder.AddLine(new Vector2(-40.25F, 17.625F));
                    builder.AddLine(new Vector2(-31.9379997F, 28.5620003F));
                    builder.AddLine(new Vector2(-23.25F, 19.875F));
                    builder.AddLine(new Vector2(-18.25F, 21.75F));
                    builder.AddLine(new Vector2(-29.125F, 32.625F));
                    builder.AddLine(new Vector2(-21.125F, 42.375F));
                    builder.AddLine(new Vector2(-6.5F, 43F));
                    builder.AddLine(new Vector2(-6.5F, 29.875F));
                    builder.AddLine(new Vector2(-1.875F, 29.625F));
                    builder.AddLine(new Vector2(-1.875F, 42.5F));
                    builder.AddCubicBezier(new Vector2(-1.875F, 42.5F), new Vector2(12.125F, 39.875F), new Vector2(12.5F, 39.875F));
                    builder.AddCubicBezier(new Vector2(12.875F, 39.875F), new Vector2(20F, 32.125F), new Vector2(20F, 32.125F));
                    builder.AddLine(new Vector2(12.375F, 24.5F));
                    builder.AddLine(new Vector2(15.75F, 21.125F));
                    builder.AddLine(new Vector2(23.875F, 29.25F));
                    builder.AddLine(new Vector2(31.375F, 20.75F));
                    builder.AddLine(new Vector2(34.25F, 5.75F));
                    builder.AddLine(new Vector2(16.5F, 5.75F));
                    builder.AddLine(new Vector2(-6.625F, 6.375F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of
            // Access
            // - - - Masks
            // - - Layer: Shape Layer 21
            CanvasGeometry Geometry_05()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-0.875F, -33.625F));
                    builder.AddLine(new Vector2(-0.875F, -18.75F));
                    builder.AddLine(new Vector2(-6.625F, -18.75F));
                    builder.AddLine(new Vector2(-6.625F, -32.875F));
                    builder.AddLine(new Vector2(-21.875F, -29.375F));
                    builder.AddLine(new Vector2(-28.625F, -23.375F));
                    builder.AddLine(new Vector2(-21.625F, -16.375F));
                    builder.AddLine(new Vector2(-24.875F, -13.125F));
                    builder.AddLine(new Vector2(-31.875F, -20.125F));
                    builder.AddLine(new Vector2(-35.875F, -16.25F));
                    builder.AddLine(new Vector2(-40.125F, -6.375F));
                    builder.AddLine(new Vector2(-40.875F, 2F));
                    builder.AddLine(new Vector2(-30.625F, 2F));
                    builder.AddLine(new Vector2(-30.625F, 6.75F));
                    builder.AddLine(new Vector2(-41.125F, 6.75F));
                    builder.AddLine(new Vector2(-40.25F, 17.625F));
                    builder.AddLine(new Vector2(-31.9379997F, 28.5620003F));
                    builder.AddLine(new Vector2(-23.25F, 19.875F));
                    builder.AddLine(new Vector2(-18.25F, 21.75F));
                    builder.AddLine(new Vector2(-29.125F, 32.625F));
                    builder.AddLine(new Vector2(-21.125F, 42.375F));
                    builder.AddLine(new Vector2(-6.5F, 43F));
                    builder.AddLine(new Vector2(-6.5F, 29.875F));
                    builder.AddLine(new Vector2(-1.875F, 29.625F));
                    builder.AddLine(new Vector2(-1.875F, 42.5F));
                    builder.AddCubicBezier(new Vector2(-1.875F, 42.5F), new Vector2(12.125F, 39.875F), new Vector2(12.5F, 39.875F));
                    builder.AddCubicBezier(new Vector2(12.875F, 39.875F), new Vector2(20F, 32.125F), new Vector2(20F, 32.125F));
                    builder.AddLine(new Vector2(12.375F, 24.5F));
                    builder.AddLine(new Vector2(15.75F, 21.125F));
                    builder.AddLine(new Vector2(23.875F, 29.25F));
                    builder.AddLine(new Vector2(31.375F, 20.75F));
                    builder.AddLine(new Vector2(34.25F, 5.75F));
                    builder.AddLine(new Vector2(16.5F, 5.75F));
                    builder.AddLine(new Vector2(16.5F, -0.5F));
                    builder.AddLine(new Vector2(33.75F, -0.5F));
                    builder.AddLine(new Vector2(34F, -9.75F));
                    builder.AddLine(new Vector2(23.5620003F, -21.8120003F));
                    builder.AddLine(new Vector2(12.0620003F, -10.3120003F));
                    builder.AddLine(new Vector2(8.75F, -13.625F));
                    builder.AddLine(new Vector2(20.375F, -25.25F));
                    builder.AddLine(new Vector2(8.625F, -32F));
                    builder.AddLine(new Vector2(-0.875F, -33.625F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // - - - Layer: Layer 9
            // - - ShapeGroup: Group 1
            // - Path 1.PathGeometry
            CanvasGeometry Geometry_06()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(2.64499998F, -21.1569996F));
                    builder.AddLine(new Vector2(2.64499998F, 11.3599997F));
                    builder.AddLine(new Vector2(-2.64499998F, 11.3599997F));
                    builder.AddLine(new Vector2(-2.64499998F, -21.1569996F));
                    builder.AddLine(new Vector2(2.64499998F, -21.1569996F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // - - - Layer: Layer 11
            // - - ShapeGroup: Group 1
            // - Path 1.PathGeometry
            CanvasGeometry Geometry_07()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(10.5780001F, 10.5780001F));
                    builder.AddLine(new Vector2(0F, 21.1569996F));
                    builder.AddLine(new Vector2(-10.5780001F, 10.5780001F));
                    builder.AddLine(new Vector2(10.5780001F, 10.5780001F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_08()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-16.1089993F, 2.62700009F));
                    builder.AddCubicBezier(new Vector2(-16.1089993F, 2.62700009F), new Vector2(-16.0949993F, 2.64499998F), new Vector2(-16.0949993F, 2.64499998F));
                    builder.AddCubicBezier(new Vector2(-16.0949993F, 2.64499998F), new Vector2(-10.8050003F, -2.64499998F), new Vector2(-10.8050003F, -2.64499998F));
                    builder.AddCubicBezier(new Vector2(-10.8050003F, -2.64499998F), new Vector2(-10.7340002F, -2.70099998F), new Vector2(-10.7340002F, -2.70099998F));
                    builder.AddCubicBezier(new Vector2(-10.7340002F, -2.70099998F), new Vector2(-16.1089993F, 2.62700009F), new Vector2(-16.1089993F, 2.62700009F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // - - - - Layer: Layer 11
            // - - -  Offset:<79.905, 48.954>
            // - - Path 1.PathGeometry
            // - Path
            CanvasGeometry Geometry_09()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(6.454F, 2.64499998F));
                    builder.AddCubicBezier(new Vector2(6.454F, 2.64499998F), new Vector2(-16.0949993F, 2.64499998F), new Vector2(-16.0949993F, 2.64499998F));
                    builder.AddCubicBezier(new Vector2(-16.0949993F, 2.64499998F), new Vector2(-10.8050003F, -2.64499998F), new Vector2(-10.8050003F, -2.64499998F));
                    builder.AddCubicBezier(new Vector2(-10.8050003F, -2.64499998F), new Vector2(6.454F, -2.64499998F), new Vector2(6.454F, -2.64499998F));
                    builder.AddCubicBezier(new Vector2(6.454F, -2.64499998F), new Vector2(6.454F, 2.64499998F), new Vector2(6.454F, 2.64499998F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // - - - Layer: Layer 12
            // - - ShapeGroup: Group 1
            // - Path 1.PathGeometry
            CanvasGeometry Geometry_10()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(5.51599979F, 10.5780001F));
                    builder.AddLine(new Vector2(5.51599979F, -10.5780001F));
                    builder.AddLine(new Vector2(16.0949993F, 0F));
                    builder.AddLine(new Vector2(5.51599979F, 10.5780001F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CompositionColorBrush ColorBrush_Black()
            {
                return _colorBrush_Black = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x00, 0x00, 0x00));
            }

            // Color bound to theme property value: Foreground
            CompositionColorBrush ThemeColor_Foreground()
            {
                var result = _themeColor_Foreground = _c.CreateColorBrush();
                BindProperty(result, "Color", "ColorRGB(_theme.Foreground.W*1,_theme.Foreground.X,_theme.Foreground.Y,_theme.Foreground.Z)", "_theme", _themeProperties);
                return result;
            }

            // PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // Layer: Layer 9
            CompositionContainerShape ContainerShape_0()
            {
                var result = _c.CreateContainerShape();
                result.Scale = new Vector2(0F, 0F);
                // ShapeGroup: Group 1
                result.Shapes.Add(SpriteShape_08());
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation_0(), _rootProgress);
                return result;
            }

            // PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // Layer: Layer 11
            CompositionContainerShape ContainerShape_1()
            {
                var result = _c.CreateContainerShape();
                result.Scale = new Vector2(0F, 0F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 1
                shapes.Add(SpriteShape_09());
                // Offset:<79.905, 48.954>
                shapes.Add(SpriteShape_10());
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation_1(), _rootProgress);
                return result;
            }

            // PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // Layer: Layer 12
            CompositionContainerShape ContainerShape_2()
            {
                var result = _c.CreateContainerShape();
                result.Scale = new Vector2(0F, 0F);
                // ShapeGroup: Group 1
                result.Shapes.Add(SpriteShape_11());
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation_2(), _rootProgress);
                return result;
            }

            // PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            CompositionEffectBrush EffectBrush_0()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var effectFactory = _c.CreateEffectFactory(compositeEffect);
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_0());
                result.SetSourceParameter("source", SurfaceBrush_1());
                return result;
            }

            // PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            CompositionEffectBrush EffectBrush_1()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var effectFactory = _c.CreateEffectFactory(compositeEffect);
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_2());
                result.SetSourceParameter("source", SurfaceBrush_3());
                return result;
            }

            // PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            CompositionEffectBrush EffectBrush_2()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var effectFactory = _c.CreateEffectFactory(compositeEffect);
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_4());
                result.SetSourceParameter("source", SurfaceBrush_5());
                return result;
            }

            // - - - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // - Shape tree root for layer: Shape Layer 20
            // Offset:<50, 50.25>
            // Ellipse Path 1.EllipseGeometry
            CompositionEllipseGeometry Ellipse_33p48_0()
            {
                var result = _c.CreateEllipseGeometry();
                result.Radius = new Vector2(33.4794998F, 33.4794998F);
                StartProgressBoundAnimation(result, "TrimStart", TrimStartScalarAnimation_0_to_1(), _rootProgress);
                return result;
            }

            // Ellipse Path 1.EllipseGeometry
            CompositionEllipseGeometry Ellipse_33p48_1()
            {
                var result = _c.CreateEllipseGeometry();
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0.75F);
                propertySet.InsertScalar("TStart", 0.75F);
                result.Radius = new Vector2(33.4794998F, 33.4794998F);
                BindProperty(result, "TrimStart", "Min(my.TStart,my.TEnd)", "my", result);
                BindProperty(result, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", result);
                StartProgressBoundAnimation(propertySet, "TStart", TStartScalarAnimation_0p75_to_1(), _rootProgress);
                StartProgressBoundAnimation(propertySet, "TEnd", TEndScalarAnimation_0p75_to_1(), _rootProgress);
                return result;
            }

            // - - - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // - Shape tree root for layer: Shape Layer 22
            // Offset:<50, 50.25>
            // Ellipse Path 1.EllipseGeometry
            CompositionEllipseGeometry Ellipse_33p48_2()
            {
                var result = _c.CreateEllipseGeometry();
                result.Radius = new Vector2(33.4794998F, 33.4794998F);
                StartProgressBoundAnimation(result, "TrimEnd", TrimEndScalarAnimation_0_to_0p75(), _rootProgress);
                return result;
            }

            CompositionPath Path_0()
            {
                var result = _path_0 = new CompositionPath(Geometry_02());
                return result;
            }

            CompositionPath Path_1()
            {
                var result = _path_1 = new CompositionPath(Geometry_08());
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // ShapeGroup: Group 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_0()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_0(), RootProgress());
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // ShapeGroup: Group 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_1()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_1(), _rootProgress);
                return result;
            }

            CompositionPathGeometry PathGeometry_2()
            {
                var result = _pathGeometry_2 = _c.CreatePathGeometry(new CompositionPath(Geometry_04()));
                return result;
            }

            // - - - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // - Masks
            // Layer: Shape Layer 21
            CompositionPathGeometry PathGeometry_3()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_05()));
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // - Layer: Layer 9
            // ShapeGroup: Group 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_4()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_06()));
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // - Layer: Layer 11
            // ShapeGroup: Group 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_5()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_07()));
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // - Layer: Layer 11
            // Offset:<79.905, 48.954>
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_6()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_2(), _rootProgress);
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // - Layer: Layer 12
            // ShapeGroup: Group 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_7()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_10()));
                return result;
            }

            // PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // Path 1
            CompositionSpriteShape SpriteShape_00()
            {
                var result = _c.CreateSpriteShape(PathGeometry_0());
                result.CenterPoint = new Vector2(0F, 21.1569996F);
                result.Offset = new Vector2(51.0419998F, 35.7310028F);
                result.FillBrush = ThemeColor_Foreground();
                StartProgressBoundAnimation(result, "Scale", ScaleVector2Animation_0(), _rootProgress);
                return result;
            }

            // PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // Path 1
            CompositionSpriteShape SpriteShape_01()
            {
                var result = _c.CreateSpriteShape(PathGeometry_1());
                result.CenterPoint = new Vector2(16.0949993F, 0F);
                result.Offset = new Vector2(79.9049988F, 48.9539986F);
                result.FillBrush = _themeColor_Foreground;
                StartProgressBoundAnimation(result, "Scale", ScaleVector2Animation_1(), _rootProgress);
                return result;
            }

            // - - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // Shape tree root for layer: Shape Layer 20
            // Ellipse Path 1
            CompositionSpriteShape SpriteShape_02()
            {
                // Offset:<45.621, 54.271>, Rotation:-0.00573276600068947 degrees,
                // Scale:<0.94703, 0.94703>
                var result = CreateSpriteShape(Ellipse_33p48_0(), new Matrix3x2(0.947030008F, 0F, 0F, 0.947030008F, 45.6209984F, 54.2709999F));
                result.StrokeBrush = _themeColor_Foreground;
                result.StrokeThickness = 7F;
                return result;
            }

            // - - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // Masks
            // Offset:<50, 50.25>
            CompositionSpriteShape SpriteShape_03()
            {
                // Offset:<50, 50.25>
                var result = CreateSpriteShape(PathGeometry_2(), new Matrix3x2(1F, 0F, 0F, 1F, 50F, 50.25F), ColorBrush_Black());
                return result;
            }

            // - - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // Shape tree root for layer: Shape Layer 21
            // Ellipse Path 1
            CompositionSpriteShape SpriteShape_04()
            {
                // Offset:<45.621, 54.271>, Rotation:-0.00573276600068947 degrees,
                // Scale:<0.94703, 0.94703>
                var result = CreateSpriteShape(Ellipse_33p48_1(), new Matrix3x2(0.947030008F, 0F, 0F, 0.947030008F, 45.6209984F, 54.2709999F));
                result.StrokeBrush = _themeColor_Foreground;
                result.StrokeThickness = 7F;
                return result;
            }

            // - - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // Masks
            // Offset:<50, 50.25>
            CompositionSpriteShape SpriteShape_05()
            {
                // Offset:<50, 50.25>
                var result = CreateSpriteShape(PathGeometry_3(), new Matrix3x2(1F, 0F, 0F, 1F, 50F, 50.25F), _colorBrush_Black);
                return result;
            }

            // - - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // Shape tree root for layer: Shape Layer 22
            // Ellipse Path 1
            CompositionSpriteShape SpriteShape_06()
            {
                // Offset:<45.621, 54.271>, Rotation:-0.00573276600068947 degrees,
                // Scale:<0.94703, 0.94703>
                var result = CreateSpriteShape(Ellipse_33p48_2(), new Matrix3x2(0.947030008F, 0F, 0F, 0.947030008F, 45.6209984F, 54.2709999F));
                result.StrokeBrush = _themeColor_Foreground;
                result.StrokeThickness = 7F;
                return result;
            }

            // - - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // Masks
            // Offset:<50, 50.25>
            CompositionSpriteShape SpriteShape_07()
            {
                // Offset:<50, 50.25>
                var result = CreateSpriteShape(_pathGeometry_2, new Matrix3x2(1F, 0F, 0F, 1F, 50F, 50.25F), _colorBrush_Black);
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // Layer: Layer 9
            // Path 1
            CompositionSpriteShape SpriteShape_08()
            {
                var result = _c.CreateSpriteShape(PathGeometry_4());
                result.CenterPoint = new Vector2(0F, -21.1569996F);
                result.Offset = new Vector2(51.0419998F, 35.730999F);
                result.FillBrush = _themeColor_Foreground;
                StartProgressBoundAnimation(result, "Scale", ScaleVector2Animation_2(), _rootProgress);
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // Layer: Layer 11
            // Path 1
            CompositionSpriteShape SpriteShape_09()
            {
                var result = _c.CreateSpriteShape(PathGeometry_5());
                result.CenterPoint = new Vector2(0F, 10.5780001F);
                result.Offset = new Vector2(51.0419998F, 35.730999F);
                result.FillBrush = _themeColor_Foreground;
                StartProgressBoundAnimation(result, "Scale", ScaleVector2Animation_3(), _rootProgress);
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // Layer: Layer 11
            // Path 1
            CompositionSpriteShape SpriteShape_10()
            {
                // Offset:<79.905, 48.954>
                var result = CreateSpriteShape(PathGeometry_6(), new Matrix3x2(1F, 0F, 0F, 1F, 79.9049988F, 48.9539986F), _themeColor_Foreground);
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // Layer: Layer 12
            // Path 1
            CompositionSpriteShape SpriteShape_11()
            {
                var result = _c.CreateSpriteShape(PathGeometry_7());
                result.CenterPoint = new Vector2(5.51599979F, 0F);
                result.Offset = new Vector2(79.9059982F, 48.9539986F);
                result.FillBrush = _themeColor_Foreground;
                StartProgressBoundAnimation(result, "Scale", ScaleVector2Animation_4(), _rootProgress);
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            CompositionSurfaceBrush SurfaceBrush_0()
            {
                var result = _c.CreateSurfaceBrush();
                result.Surface = VisualSurface_0();
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            CompositionSurfaceBrush SurfaceBrush_1()
            {
                var result = _c.CreateSurfaceBrush();
                result.Surface = VisualSurface_1();
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            CompositionSurfaceBrush SurfaceBrush_2()
            {
                var result = _c.CreateSurfaceBrush();
                result.Surface = VisualSurface_2();
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            CompositionSurfaceBrush SurfaceBrush_3()
            {
                var result = _c.CreateSurfaceBrush();
                result.Surface = VisualSurface_3();
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            CompositionSurfaceBrush SurfaceBrush_4()
            {
                var result = _c.CreateSurfaceBrush();
                result.Surface = VisualSurface_4();
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            CompositionSurfaceBrush SurfaceBrush_5()
            {
                var result = _c.CreateSurfaceBrush();
                result.Surface = VisualSurface_5();
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            CompositionVisualSurface VisualSurface_0()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_0();
                result.SourceSize = new Vector2(100F, 100F);
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            CompositionVisualSurface VisualSurface_1()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_1();
                result.SourceSize = new Vector2(100F, 100F);
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            CompositionVisualSurface VisualSurface_2()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_2();
                result.SourceSize = new Vector2(100F, 100F);
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            CompositionVisualSurface VisualSurface_3()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_3();
                result.SourceSize = new Vector2(100F, 100F);
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            CompositionVisualSurface VisualSurface_4()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_4();
                result.SourceSize = new Vector2(100F, 100F);
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            CompositionVisualSurface VisualSurface_5()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_5();
                result.SourceSize = new Vector2(100F, 100F);
                return result;
            }

            // - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            ContainerVisual ContainerVisual_0()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: Shape Layer 20
                result.Children.InsertAtTop(ShapeVisual_1());
                return result;
            }

            // - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            ContainerVisual ContainerVisual_1()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Masks
                result.Children.InsertAtTop(ShapeVisual_2());
                return result;
            }

            // - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            ContainerVisual ContainerVisual_2()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                result.IsVisible = false;
                // Shape tree root for layer: Shape Layer 21
                result.Children.InsertAtTop(ShapeVisual_3());
                StartProgressBoundAnimation(result, "IsVisible", IsVisibleBooleanAnimation_0(), _rootProgress);
                return result;
            }

            // - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            ContainerVisual ContainerVisual_3()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                result.IsVisible = false;
                // Masks
                result.Children.InsertAtTop(ShapeVisual_4());
                StartProgressBoundAnimation(result, "IsVisible", IsVisibleBooleanAnimation_1(), _rootProgress);
                return result;
            }

            // - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            ContainerVisual ContainerVisual_4()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                result.IsVisible = false;
                // Shape tree root for layer: Shape Layer 22
                result.Children.InsertAtTop(ShapeVisual_5());
                StartProgressBoundAnimation(result, "IsVisible", IsVisibleBooleanAnimation_2(), _rootProgress);
                return result;
            }

            // - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            ContainerVisual ContainerVisual_5()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                result.IsVisible = false;
                // Masks
                result.Children.InsertAtTop(ShapeVisual_6());
                StartProgressBoundAnimation(result, "IsVisible", IsVisibleBooleanAnimation_3(), _rootProgress);
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                result.Clip = InsetClip_0();
                result.Size = new Vector2(100F, 100F);
                // Offset:<-1, -1>, Scale:<0.18, 0.18>
                result.TransformMatrix = new Matrix4x4(0.180000007F, 0F, 0F, 0F, 0F, 0.180000007F, 0F, 0F, 0F, 0F, 0F, 0F, -1F, -1F, 0F, 1F);
                var children = result.Children;
                // PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
                children.InsertAtTop(ShapeVisual_0());
                // PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
                children.InsertAtTop(SpriteVisual_0());
                // PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
                children.InsertAtTop(SpriteVisual_1());
                // PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
                children.InsertAtTop(SpriteVisual_2());
                // PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
                children.InsertAtTop(ShapeVisual_7());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F));
            }

            ExpressionAnimation RootProgress()
            {
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            InsetClip InsetClip_0()
            {
                var result = _c.CreateInsetClip();
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // - ShapeGroup: Group 1
            // Path 1.PathGeometry
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_0()
            {
                var result = CreatePathKeyFrameAnimation(0F, new CompositionPath(Geometry_00()), HoldThenStepEasingFunction());
                result.InsertKeyFrame(0.200000003F, new CompositionPath(Geometry_01()), _c.CreateCubicBezierEasingFunction(new Vector2(1F, 0F), new Vector2(0.833000004F, 0.833000004F)));
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // - ShapeGroup: Group 1
            // Path 1.PathGeometry
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_1()
            {
                var result = CreatePathKeyFrameAnimation(0F, Path_0(), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.200000003F, _path_0, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.300000012F, new CompositionPath(Geometry_03()), CubicBezierEasingFunction_1());
                return result;
            }

            // - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // - - Layer: Layer 11
            // -  Offset:<79.905, 48.954>
            // Path 1.PathGeometry
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_2()
            {
                var result = CreatePathKeyFrameAnimation(0F, Path_1(), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.616666675F, _path_1, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.783333361F, new CompositionPath(Geometry_09()), _cubicBezierEasingFunction_0);
                return result;
            }

            // - Ellipse Path 1.EllipseGeometry
            // TEnd
            ScalarKeyFrameAnimation TEndScalarAnimation_0p75_to_1()
            {
                var result = CreateScalarKeyFrameAnimation(0F, 0.75F, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.266666681F, 0.75F, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.550000012F, 1F, _cubicBezierEasingFunction_0);
                return result;
            }

            // - - - - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of
            // Access
            // - - Shape tree root for layer: Shape Layer 22
            // -  Offset:<50, 50.25>
            // Ellipse Path 1.EllipseGeometry
            // TrimEnd
            ScalarKeyFrameAnimation TrimEndScalarAnimation_0_to_0p75()
            {
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.416666657F, 0F, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.983333349F, 0.75F, _cubicBezierEasingFunction_0);
                return result;
            }

            // - - - - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of
            // Access
            // - - Shape tree root for layer: Shape Layer 20
            // -  Offset:<50, 50.25>
            // Ellipse Path 1.EllipseGeometry
            // TrimStart
            ScalarKeyFrameAnimation TrimStartScalarAnimation_0_to_1()
            {
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.300000012F, 1F, _cubicBezierEasingFunction_1);
                return result;
            }

            // - Ellipse Path 1.EllipseGeometry
            // TStart
            ScalarKeyFrameAnimation TStartScalarAnimation_0p75_to_1()
            {
                var result = CreateScalarKeyFrameAnimation(0F, 0.75F, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.383333325F, 0.75F, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.550000012F, 1F, _cubicBezierEasingFunction_0);
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(100F, 100F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 1
                shapes.Add(SpriteShape_00());
                // ShapeGroup: Group 1
                shapes.Add(SpriteShape_01());
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // Shape tree root for layer: Shape Layer 20
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(100F, 100F);
                // Offset:<50, 50.25>
                result.Shapes.Add(SpriteShape_02());
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // Masks
            ShapeVisual ShapeVisual_2()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(100F, 100F);
                // Offset:<50, 50.25>
                result.Shapes.Add(SpriteShape_03());
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // Shape tree root for layer: Shape Layer 21
            ShapeVisual ShapeVisual_3()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(100F, 100F);
                // Offset:<50, 50.25>
                result.Shapes.Add(SpriteShape_04());
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // Masks
            ShapeVisual ShapeVisual_4()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(100F, 100F);
                // Layer: Shape Layer 21
                result.Shapes.Add(SpriteShape_05());
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // Shape tree root for layer: Shape Layer 22
            ShapeVisual ShapeVisual_5()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(100F, 100F);
                // Offset:<50, 50.25>
                result.Shapes.Add(SpriteShape_06());
                return result;
            }

            // - - - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // Masks
            ShapeVisual ShapeVisual_6()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(100F, 100F);
                // Layer: Shape Layer 22
                result.Shapes.Add(SpriteShape_07());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_7()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(100F, 100F);
                var shapes = result.Shapes;
                // Layer: Layer 9
                shapes.Add(ContainerShape_0());
                // Layer: Layer 11
                shapes.Add(ContainerShape_1());
                // Layer: Layer 12
                shapes.Add(ContainerShape_2());
                return result;
            }

            // Transforms for Asset - AnimIcon - Action Center - New - Ease Of Access
            // Scale(0.18,0.18,0), Offset(-42,-42,0)
            SpriteVisual SpriteVisual_0()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(100F, 100F);
                result.Brush = EffectBrush_0();
                return result;
            }

            // Transforms for Asset - AnimIcon - Action Center - New - Ease Of Access
            // Scale(0.18,0.18,0), Offset(-42,-42,0)
            SpriteVisual SpriteVisual_1()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(100F, 100F);
                result.Brush = EffectBrush_1();
                return result;
            }

            // Transforms for Asset - AnimIcon - Action Center - New - Ease Of Access
            // Scale(0.18,0.18,0), Offset(-42,-42,0)
            SpriteVisual SpriteVisual_2()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(100F, 100F);
                result.Brush = EffectBrush_2();
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // ShapeGroup: Group 1
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_0()
            {
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), StepThenHoldEasingFunction());
                result.InsertKeyFrame(0.200000003F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.300000012F, new Vector2(0F, 0F), CubicBezierEasingFunction_0());
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // ShapeGroup: Group 1
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_1()
            {
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.300000012F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.466666669F, new Vector2(0F, 0F), _cubicBezierEasingFunction_0);
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // - Layer: Layer 9
            // ShapeGroup: Group 1
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_2()
            {
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 0F), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.533333361F, new Vector2(1F, 0F), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.616666675F, new Vector2(1F, 1F), _c.CreateCubicBezierEasingFunction(new Vector2(1F, 0F), new Vector2(0.833000004F, 1F)));
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // - Layer: Layer 11
            // ShapeGroup: Group 1
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_3()
            {
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.616666675F, new Vector2(0F, 0F), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.716666639F, new Vector2(1F, 1F), _cubicBezierEasingFunction_0);
                return result;
            }

            // - - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // - Layer: Layer 12
            // ShapeGroup: Group 1
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_4()
            {
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.683333337F, new Vector2(0F, 0F), _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.833333313F, new Vector2(1F, 1F), _cubicBezierEasingFunction_0);
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // Layer: Layer 9
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_0()
            {
                var result = CreateVector2KeyFrameAnimation(0.533333361F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // Layer: Layer 11
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_1()
            {
                var result = CreateVector2KeyFrameAnimation(0.616666675F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                return result;
            }

            // - PreComp layer: Asset - AnimIcon - Action Center - New - Ease Of Access
            // Layer: Layer 12
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_2()
            {
                var result = CreateVector2KeyFrameAnimation(0.683333337F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                return result;
            }

            internal AnimatedVisual(
                Compositor compositor,
                CompositionPropertySet themeProperties
                )
            {
                _c = compositor;
                _themeProperties = themeProperties;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(16F, 16F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 11);
            }
        }
    }
}
